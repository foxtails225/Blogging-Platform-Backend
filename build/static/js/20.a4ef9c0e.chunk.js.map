{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/symbol/SymbolView/Header/index.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/Financials/index.tsx","views/symbol/SymbolView/News.tsx","views/symbol/SymbolView/index.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","initialColor","quote","colors","green","preQuote","useStyles","makeStyles","theme","action","backgroundColor","palette","common","white","image","width","maxHeight","item","spacing","textAlign","breakpoints","up","borderRight","divider","down","borderBottom","label","marginLeft","overline","marginTop","Header","path","rest","useState","setName","setQuote","color","setColor","useEffect","value","a","axios","get","response","data","quoteData","latestPrice","change","changePercent","extendedPrice","extendedChange","extendedChangePercent","companyName","fecthQuote","quoteColor","red","preQuoteColor","Grid","alignItems","container","justify","md","xs","Typography","variant","display","style","Math","abs","Box","mt","flexShrink","height","subscriptions","fontWeight","typography","fontWeightMedium","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","useCallback","current","Card","CardHeader","title","Divider","Table","TableBody","map","post","TableRow","hover","key","_id","TableCell","Avatar","alt","src","author","avatar","RouterLink","to","getInitials","ml","Link","slug","p","justifyContent","Button","size","endIcon","collapse","textOverflow","overflow","box","ProfileGlance","profile","setProfile","expanded","setExpanded","fetchData","Paper","my","lg","description","onClick","align","sector","industry","numeral","employees","format","address","city","state","zip","country","phone","CEO","gutterBottom","website","KeyGlance","source","setSource","avg10Volume","peHigh","peLow","marketcap","sharesOutstanding","beta","paddingTop","Opinions","Container","maxWidth","minHeight","Financials","marginRight","content","chip","margin","News","results","setResults","length","List","result","id","ListItem","disableGutters","image_url","ListItemText","primary","target","href","news_url","primaryTypographyProps","secondary","text","tickers","slice","ticker","i","Chip","date","tabs","background","dark","SymbolView","location","useLocation","setPath","currentTab","setCurrentTab","pathname","split","Page","Tabs","onChange","event","scrollButtons","textColor","tab","Tab","py","pb"],"mappings":"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","file":"static/js/20.a4ef9c0e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport { Grid, Typography, Box, makeStyles, colors } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Quote } from 'src/types/stock';\nimport HighchartsWrapper from './HighchartsWrapper';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(`/stock/quote/${value}`);\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    fecthQuote(path);\n  }, [path]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\n            {`${name} - `}\n          </Typography>\n          {quote && (\n            <Typography\n              variant=\"body1\"\n              display=\"inline\"\n              style={{ color: color.quote }}\n            >\n              ${quote.latestPrice} {quote.change >= 0 ? '+' : '-'}$\n              {typeof quote.change === 'number'\n                ? Math.abs(quote.change)\n                : quote.change}{' '}\n              ({quote.changePercent >= 0 && '+'}\n              {quote.changePercent}%)\n            </Typography>\n          )}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`After Hours - `}\n            {quote && (\n              <Typography\n                variant=\"body1\"\n                display=\"inline\"\n                style={{ color: color.preQuote }}\n              >\n                ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\n                {typeof quote.extendedChange === 'number'\n                  ? Math.abs(quote.extendedChange)\n                  : quote.extendedChange}{' '}\n                ({quote.extendedChangePercent >= 0 && '+'}\n                {quote.extendedChangePercent}%)\n              </Typography>\n            )}\n          </Typography>\n          <Box mt={3}>\n            {/* <HighchartsWrapper path={path} /> */}\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  }\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank News\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  collapse: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    display: '-webkit-box',\r\n    '-webkit-box-orient': 'vertical',\r\n    '-webkit-line-clamp': '3'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(`/stock/company/${path}`);\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  const handleExpand = () => setExpanded(!expanded);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box className={classes.box}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className={clsx(!expanded && classes.collapse)}\r\n                    >\r\n                      {profile.description}\r\n                    </Typography>\r\n                    <Link onClick={handleExpand}>\r\n                      Read {expanded ? 'less' : 'more'}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Sector</TableCell>\r\n                          <TableCell align=\"center\">{profile.sector}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Industry</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.industry}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Employees</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {numeral(profile.employees).format('0,0')}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Address</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.address} {profile.city} {profile.state}{' '}\r\n                            {profile.zip} {profile.country}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Phone Number</TableCell>\r\n                          <TableCell align=\"center\">+{profile.phone}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">CEO</TableCell>\r\n                          <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\" color=\"textPrimary\">\r\n                  Official Website: {profile.website}\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `/stock/advanced-stats/${path}`\r\n      );\r\n\r\n      if (response.data) {\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Key Stats\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          {source && (\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.avg10Volume).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Day High</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.peHigh).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Day Low</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.peLow).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Market Cap</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.marketcap).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.sharesOutstanding).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Beta</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.beta).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={6} xs={12}>\r\n          <DankNews path={path} />\r\n        </Grid>\r\n        <Grid item lg={6} xs={12}>\r\n          <KeyGlance path={path} />\r\n        </Grid>\r\n        <Grid item lg={12} xs={12}>\r\n          <ProfileGlance path={path} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\ninterface FinancialsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32,\r\n    minHeight: '30vh'\r\n  }\r\n}));\r\n\r\nconst Financials: FC<FinancialsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"b\" color=\"textSecondary\">\r\n            Being worked on\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Financials;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Grid,\r\n  Chip,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { StockNews } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 32\r\n  },\r\n  image: {\r\n    height: '15vh',\r\n    marginRight: '2vw',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100vw',\r\n    }\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst News: FC<NewsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState<StockNews[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (value: string) => {\r\n      const response = await axios.get<{ data: StockNews[] }>(\r\n        `/stock/news/${value}`\r\n      );\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        setResults(response.data.data);\r\n      }\r\n    };\r\n    path && fetchData(path);\r\n  }, [path]);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      {results.length > 0 && (\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Card>\r\n              <CardContent className={classes.content}>\r\n                <List>\r\n                  {results.map((result: StockNews, id) => (\r\n                    <ListItem key={id} disableGutters divider>\r\n                      <img\r\n                        alt=\"Stock News\"\r\n                        src={result.image_url}\r\n                        className={classes.image}\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            target=\"_blank\"\r\n                            href={result.news_url}\r\n                            variant=\"h5\"\r\n                          >\r\n                            {result.title}\r\n                          </Link>\r\n                        }\r\n                        primaryTypographyProps={{\r\n                          variant: 'body1',\r\n                          color: 'textPrimary'\r\n                        }}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component={'span'}\r\n                            // className={classes.text}\r\n                          >\r\n                            {result.text}\r\n                            <br />\r\n                            {result.tickers.slice(0, 2).map((ticker, i) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                key={i}\r\n                                size=\"small\"\r\n                                label={ticker}\r\n                                className={classes.chip}\r\n                              />\r\n                            ))}\r\n                            {` | Date`}: {result.date}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\nimport Financials from './Financials';\nimport News from './News';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'news', label: 'News' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'sec', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('news');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n          {currentTab === 'news' && <News path={path} />}\n          {currentTab === 'financials' && <Financials path={path} />}\n          {currentTab === 'sec' && <Financials path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}