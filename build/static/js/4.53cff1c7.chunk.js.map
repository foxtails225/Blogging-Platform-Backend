{"version":3,"sources":["components/CustomIcon.tsx","views/account/ProfileView/Header.tsx","components/PostOverViewCard/Reactions.tsx","components/PostOverViewCard/index.tsx","views/account/ProfileView/Profile/About.tsx","views/account/ProfileView/Profile/Posts.tsx","views/account/ProfileView/Profile/index.tsx","views/account/ProfileView/ReadingList/Reactions.tsx","views/account/ProfileView/ReadingList/ListItemCard/index.tsx","views/account/ProfileView/ReadingList/ListItemMobileCard/index.tsx","views/account/ProfileView/ReadingList/index.tsx","components/Label.tsx","views/account/ProfileView/Dashboard/TodaysMoney.tsx","views/account/ProfileView/Dashboard/TotalMoney.tsx","views/account/ProfileView/Dashboard/Viewers.tsx","views/account/ProfileView/Dashboard/TipMoney.tsx","views/account/ProfileView/Dashboard/index.tsx","views/account/ProfileView/index.tsx"],"names":["useStyles","makeStyles","root","textAlign","icon","display","height","width","CustomIcon","props","classes","fontSize","alt","className","src","theme","cover","position","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","spacing","right","backgroundColor","colors","blueGrey","color","palette","common","white","breakpoints","down","avatar","border","action","marginLeft","bioBox","Header","profile","rest","clsx","style","Button","variant","startIcon","Container","maxWidth","Box","mt","alignItems","Avatar","Typography","name","Hidden","smDown","bio","flexGrow","component","RouterLink","size","to","mdUp","Tooltip","title","IconButton","iconRoot","likedButton","red","likedIcon","commentIcon","grey","Reactions","author","post","useState","isLiked","setLiked","liked","count","likes","setLikes","handleLike","prevLikes","onClick","disabled","ml","mr","marginTop","comments","length","date","media","marginRight","PostOverViewCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","moment","createdAt","fromNow","Link","px","pb","slug","large","onClose","initialStatus","published","pending","tags","blueAvatar","secondary","main","redAvatar","cardContent","paddingTop","About","history","useHistory","location","useLocation","user","useAuth","status","setStatus","setDisabled","useEffect","a","pathname","axios","get","response","data","fetchData","disable","email","Divider","CardContent","List","ListItem","disableGutters","divider","ListItemAvatar","ListItemText","primary","primaryTypographyProps","Chip","label","push","item","padding","borderRight","Posts","isMountedRef","useIsMountedRef","activities","setActivities","getActivities","useCallback","current","console","error","disablePadding","map","activity","i","key","id","customer","getInitials","underline","description","p","justifyContent","endIcon","Profile","posts","setPosts","isAuthor","setIsAuthor","page","setPage","getPosts","params","Grid","container","xs","md","lg","_id","onFetch","isAuthenticated","isBookmarked","setBookmarked","users","forEach","updateLiked","postId","put","updateSaved","path","ListItemCard","ListItemMobileCard","cardContentStyle","paddingBottom","ReadingList","bookmarks","setBookmarks","bookmark","Fragment","fontFamily","typography","borderRadius","whiteSpace","cursor","flexShrink","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","textTransform","fade","success","warning","Label","children","contrastText","TodaysMoney","gutterBottom","flexWrap","TotalMoney","NewProjects","TipMoney","background","dark","minHeight","Dashboard","sm","Viewers","ProfileView","tabs","setTabs","currentTab","setCurrentTab","setProfile","values","value","Page","Tabs","onChange","event","scrollButtons","textColor","tab","Tab","py"],"mappings":"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","file":"static/js/4.53cff1c7.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\n\ninterface HeaderProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 260,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100,\n      left: theme.spacing(1)\n    }\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  },\n  bioBox: {\n    marginLeft: '160px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '120px'\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n          startIcon={<AddPhotoIcon />}\n        >\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box className={classes.bioBox} mt={1}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n            <Hidden smDown>\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {profile.bio}\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/account/setting\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Edit Profile\n            </Button>\n          </Hidden>\n          <Hidden mdUp>\n            <Tooltip title=\"More options\">\n              <IconButton className={classes.action}>\n                <EditIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n        </Box>\n        <Hidden mdUp>\n          <Box textAlign=\"center\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from '../CustomIcon';\nimport { Post } from 'src/types/post';\n\ninterface ReactionsProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  likedIcon: {\n    display: 'flex',\n    height: 'inherit',\n    width: 'inherit'\n  },\n  commentIcon: {\n    color: colors.grey[500]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {author && (\n        <IconButton onClick={handleLike} disabled={author}>\n          <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n        </IconButton>\n      )}\n      {!author && (\n        <>\n          {isLiked ? (\n            <Tooltip title=\"Unlike\">\n              <IconButton\n                className={classes.likedButton}\n                onClick={handleUnlike}\n              >\n                <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default Reactions;\n","import React, { useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Post } from 'src/types/post';\nimport Reactions from './Reactions';\nimport { Theme } from 'src/theme';\n\ninterface PostOverViewCardProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst PostOverViewCard: FC<PostOverViewCardProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={typeof post.author !== 'string' && post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {typeof post.author !== 'string' && post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={1} className={classes.title}>\n          <Link color=\"textPrimary\" component={RouterLink} to={'/posts/public/' + post.slug} variant=\"h3\">\n            {post.title}\n          </Link>\n        </Box>\n        <Box mt={2} pb={2} px={3}>\n          <Reactions post={post} author={author} />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostOverViewCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default PostOverViewCard;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors,\n  makeStyles,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {\n  Hash as HashIcon,\n  MessageCircle as MessageCircleIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport { User, Status } from 'src/types/user';\n\ninterface AboutProps {\n  className?: string;\n  profile: User;\n}\n\nconst initialStatus = {\n  published: 0,\n  pending: 0,\n  comments: 0,\n  tags: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  blueAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  redAvatar: {\n    backgroundColor: colors.red[600]\n  },\n  cardContent: {\n    paddingTop: 0\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response: any;\n\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/status');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/status'\n        );\n      }\n      setStatus(response.data.status);\n    };\n    fetchData();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const disable = user.email !== profile.email;\n    setDisabled(disable);\n  }, [user, profile]);\n\n  const handleClick = () => history.push('/posts/new');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box mt={2}>\n        <Card>\n          <CardHeader title=\"Profile Status\" />\n          <Divider />\n          <CardContent className={classes.cardContent}>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <DescriptionOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.published} posts published`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n                {!disabled && (\n                  <Chip\n                    color=\"secondary\"\n                    size=\"small\"\n                    label=\"Contribute\"\n                    onClick={handleClick}\n                  />\n                )}\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <MoreHorizIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.pending} posts pended`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <MessageCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.comments} comments written`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <HashIcon size={22} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.tags} tag followed`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, { useCallback, useEffect, useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\n\ninterface PostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Recent Comments\" />\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostOverViewCard from 'src/components/PostOverViewCard';\nimport { Post } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport About from './About';\nimport Posts from './Posts';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Profile: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isAuthor, setIsAuthor] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: profile.email, page };\n      const response = await axios.post<{\n        posts: Post[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n        setIsAuthor(response.data.isAuthor);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page, profile]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <About profile={profile} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          {posts.map(post => (\n            <Box mt={2} key={post._id}>\n              <PostOverViewCard post={post} author={isAuthor} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Profile;\n","import React, { useState, useEffect, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from 'src/components/CustomIcon';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Post } from 'src/types/post';\nimport { Bookmark } from 'src/types/bookmark';\n\ninterface ReactionsProps {\n  className?: string;\n  post: Post;\n  onFetch: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  commentIcon: {\n    color: colors.grey[700]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  post,\n  onFetch,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user, isAuthenticated } = useAuth();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [isBookmarked, setBookmarked] = useState<boolean>(true);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  useEffect(() => {\n    isAuthenticated &&\n      post.liked.users.forEach(item => item === user._id && setLiked(true));\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.liked.users]);\n\n  const updateLiked = async (): Promise<void> => {\n    const params = { postId: post._id, isLiked: !isLiked };\n    await axios.put<{ post: Post }>('/posts/liked', params);\n  };\n\n  const updateSaved = async (): Promise<void> => {\n    const params = { postId: post._id };\n    const path = isBookmarked ? 'delete' : 'create';\n    await axios.post<{ bookmark: Bookmark }>(`/bookmarks/${path}`, params);\n  };\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n    updateLiked();\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n    updateLiked();\n  };\n\n  const handleSaved = (): void => {\n    setBookmarked(true);\n    updateSaved();\n    onFetch();\n  };\n\n  const handleUnsaved = (): void => {\n    setBookmarked(false);\n    updateSaved();\n    onFetch();\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1} />\n      {isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\n            <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      {isBookmarked ? (\n        <Tooltip title=\"Unsaved\">\n          <IconButton className={classes.likedButton} onClick={handleUnsaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Saved\">\n          <IconButton onClick={handleSaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from '../Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ListItemCardProps {\r\n  className?: string;\r\n  post: Post;\r\n  onFetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ListItemCard: FC<ListItemCardProps> = ({\r\n  className,\r\n  post,\r\n  onFetch,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to={'/posts/public/' + post.slug}\r\n            variant=\"h5\"\r\n          >\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            <Link\r\n              color=\"textSecondary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h6\"\r\n            >\r\n              {typeof post.author !== 'string' && post.author.name}\r\n            </Link>\r\n            {` `}\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n        }\r\n      />\r\n      <Reactions post={post} onFetch={onFetch} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nListItemCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ListItemCard;\r\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from '../Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ListItemMobileCardProps {\r\n  className?: string;\r\n  post: Post;\r\n  onFetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ListItemMobileCard: FC<ListItemMobileCardProps> = ({\r\n  className,\r\n  post,\r\n  onFetch,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      alignItems=\"flex-start\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        disableTypography\r\n        primary={\r\n          <Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h5\">\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography variant=\"caption\" color=\"textSecondary\" component={'p'}>\r\n              <Link\r\n                color=\"textSecondary\"\r\n                component={RouterLink}\r\n                to=\"#\"\r\n                variant=\"h6\"\r\n              >\r\n                {typeof post.author !== 'string' && post.author.name}\r\n              </Link>\r\n              {` `}\r\n              {moment(post.createdAt).fromNow()}\r\n            </Typography>\r\n            <Reactions post={post} onFetch={onFetch} />\r\n          </>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nListItemMobileCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ListItemMobileCard;\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  List,\n  Hidden,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { User } from 'src/types/user';\nimport { Bookmark, BookmarkWithPost } from 'src/types/bookmark';\nimport { Theme } from 'src/theme';\nimport ListItemCard from './ListItemCard';\nimport ListItemMobileCard from './ListItemMobileCard';\n\ninterface ReadingListProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst cardContentStyle = {\n  paddingTop: 0,\n  paddingBottom: 0\n};\n\nconst ReadingList: FC<ReadingListProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { page };\n      const response = await axios.get<{ bookmarks: Bookmark[]; page: number }>(\n        '/bookmarks/all',\n        {\n          params\n        }\n      );\n      if (isMountedRef.current) {\n        setBookmarks(response.data.bookmarks);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {bookmarks.length > 0 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Card>\n              <CardContent style={cardContentStyle}>\n                <List>\n                  {bookmarks.map((bookmark: BookmarkWithPost) => (\n                    <React.Fragment key={bookmark._id}>\n                      <Hidden smDown>\n                        <ListItemCard post={bookmark.post} onFetch={getPosts} />\n                      </Hidden>\n                      <Hidden mdUp>\n                        <ListItemMobileCard\n                          post={bookmark.post}\n                          onFetch={getPosts}\n                        />\n                      </Hidden>\n                    </React.Fragment>\n                  ))}\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nReadingList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ReadingList;\n","import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '4,00',\n    currency: '$',\n    difference: 4\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays earning\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TotalMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '24,000',\n    currency: '$',\n    difference: 2\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Total earning\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTotalMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalMoney;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface NewProjectsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Total Views\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TipMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '40',\n    currency: '$',\n    difference: 2\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Tip earning\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTipMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TipMoney;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Post } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport { Theme } from 'src/theme';\nimport TodaysMoney from './TodaysMoney';\nimport TotalMoney from './TotalMoney';\nimport Viewers from './Viewers';\nimport TipMoney from './TipMoney';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst Dashboard: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: profile.email };\n      const response = await axios.post<{\n        posts: Post[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, profile]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} sm={6} xs={12}>\n          <TodaysMoney />\n        </Grid>\n        <Grid item lg={3} sm={6} xs={12}>\n          <TipMoney />\n        </Grid>\n        <Grid item lg={3} sm={6} xs={12}>\n          <TotalMoney />\n        </Grid>\n        <Grid item lg={3} sm={6} xs={12}>\n          <Viewers />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Dashboard;\n","import React, {\n  useCallback,\n  useState,\n  useEffect,\n  FC,\n  ChangeEvent\n} from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Profile from './Profile';\nimport ReadingList from './ReadingList';\nimport Dashboard from './Dashboard';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const isMountedRef = useIsMountedRef();\n  const { user } = useAuth();\n  const [tabs, setTabs] = useState<any[]>([]);\n  const [currentTab, setCurrentTab] = useState<string>('dashboard');\n  const [profile, setProfile] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (profile) {\n      let values =\n        profile.email === user.email\n          ? [\n              { value: 'profile', label: 'Profile' },\n              { value: 'reading', label: 'reading list' },\n              { value: 'dashboard', label: 'Dashboard' }\n            ]\n          : [{ value: 'profile', label: 'Profile' }];\n      setTabs(values);\n    }\n  }, [user, profile]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(async () => {\n    let response: any;\n\n    try {\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/about');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/about'\n        );\n      }\n\n      if (isMountedRef.current) {\n        setProfile(response.data.user);\n      }\n    } catch (err) {\n      history.push('/404');\n    }\n  }, [isMountedRef, location.pathname, history]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'profile' && <Profile profile={profile} />}\n          {currentTab === 'reading' && <ReadingList profile={profile} />}\n          {currentTab === 'dashboard' && <Dashboard profile={profile} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}