{"version":3,"sources":["components/CustomIcon.tsx","views/account/ProfileView/Header.tsx","components/PostOverViewCard/Reactions.tsx","components/PostOverViewCard/index.tsx","views/account/ProfileView/Profile/About.tsx","views/account/ProfileView/Profile/Posts.tsx","views/account/ProfileView/Profile/index.tsx","views/account/ProfileView/ReadingList/Reactions.tsx","views/account/ProfileView/ReadingList/ListItemCard/index.tsx","views/account/ProfileView/ReadingList/ListItemMobileCard/index.tsx","views/account/ProfileView/ReadingList/index.tsx","views/account/ProfileView/index.tsx"],"names":["useStyles","makeStyles","root","textAlign","icon","display","height","width","CustomIcon","props","classes","fontSize","alt","className","src","theme","cover","position","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","spacing","right","backgroundColor","colors","blueGrey","color","palette","common","white","breakpoints","down","avatar","border","action","marginLeft","bioBox","Header","profile","rest","clsx","style","Button","variant","startIcon","Container","maxWidth","Box","mt","alignItems","Avatar","Typography","name","Hidden","smDown","bio","flexGrow","component","RouterLink","size","to","mdUp","Tooltip","title","IconButton","iconRoot","likedButton","red","likedIcon","commentIcon","grey","Reactions","author","post","useState","isLiked","setLiked","liked","count","likes","setLikes","handleLike","prevLikes","onClick","disabled","ml","mr","marginTop","date","media","marginRight","PostOverViewCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","moment","createdAt","fromNow","Link","px","pb","slug","large","onClose","initialStatus","published","pending","comments","tags","blueAvatar","secondary","main","redAvatar","cardContent","paddingTop","About","status","setStatus","history","useHistory","useEffect","a","axios","get","response","data","fetchData","Divider","CardContent","List","ListItem","disableGutters","divider","ListItemAvatar","ListItemText","primary","primaryTypographyProps","Chip","label","push","item","padding","borderRight","Posts","isMountedRef","useIsMountedRef","activities","setActivities","getActivities","useCallback","current","console","error","disablePadding","map","activity","i","length","key","id","customer","getInitials","underline","description","p","justifyContent","endIcon","Profile","user","useAuth","posts","setPosts","isAuthor","setIsAuthor","page","setPage","getPosts","params","email","Grid","container","xs","md","lg","_id","isBookmarked","setBookmarked","ListItemCard","ListItemMobileCard","cardContentStyle","paddingBottom","ReadingList","bookmarks","setBookmarks","bookmark","Fragment","background","dark","minHeight","ProfileView","currentTab","setCurrentTab","setProfile","Page","Tabs","onChange","event","value","scrollButtons","textColor","tab","Tab","py"],"mappings":"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","file":"static/js/4.dfb831b2.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\n\ninterface HeaderProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 260,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100,\n      left: theme.spacing(1)\n    }\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  },\n  bioBox: {\n    marginLeft: '160px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '120px'\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n          startIcon={<AddPhotoIcon />}\n        >\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box className={classes.bioBox} mt={1}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n            <Hidden smDown>\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {profile.bio}\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/account/setting\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Edit Profile\n            </Button>\n          </Hidden>\n          <Hidden mdUp>\n            <Tooltip title=\"More options\">\n              <IconButton className={classes.action}>\n                <EditIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n        </Box>\n        <Hidden mdUp>\n          <Box textAlign=\"center\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from '../CustomIcon';\nimport { Post } from 'src/types/post';\n\ninterface ReactionsProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  likedIcon: {\n    display: 'flex',\n    height: 'inherit',\n    width: 'inherit'\n  },\n  commentIcon: {\n    color: colors.grey[500]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {author && (\n        <IconButton onClick={handleLike} disabled={author}>\n          <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n        </IconButton>\n      )}\n      {!author && (\n        <>\n          {isLiked ? (\n            <Tooltip title=\"Unlike\">\n              <IconButton\n                className={classes.likedButton}\n                onClick={handleUnlike}\n              >\n                <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default Reactions;\n","import React, { useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Post } from 'src/types/post';\nimport Reactions from './Reactions';\nimport { Theme } from 'src/theme';\n\ninterface PostOverViewCardProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst PostOverViewCard: FC<PostOverViewCardProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={typeof post.author !== 'string' && post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {typeof post.author !== 'string' && post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={1} className={classes.title}>\n          <Link color=\"textPrimary\" component={RouterLink} to={'/posts/public/' + post.slug} variant=\"h3\">\n            {post.title}\n          </Link>\n        </Box>\n        <Box mt={2} pb={2} px={3}>\n          <Reactions post={post} author={author} />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostOverViewCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default PostOverViewCard;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors,\n  makeStyles,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {\n  Hash as HashIcon,\n  MessageCircle as MessageCircleIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport { Theme } from 'src/theme';\nimport { User, Status } from 'src/types/user';\n\ninterface AboutProps {\n  className?: string;\n  profile: User;\n}\n\nconst initialStatus = {\n  published: 0,\n  pending: 0,\n  comments: 0,\n  tags: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  blueAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  redAvatar: {\n    backgroundColor: colors.red[600]\n  },\n  cardContent: {\n    paddingTop: 0\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get<{ status: Status }>('/account/status');\n      setStatus(response.data.status);\n    };\n    fetchData();\n  }, []);\n\n  const handleClick = () => history.push('/posts/new');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box mt={2}>\n        <Card>\n          <CardHeader title=\"Profile Status\" />\n          <Divider />\n          <CardContent className={classes.cardContent}>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <DescriptionOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.published} posts published`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n                <Chip\n                  color=\"secondary\"\n                  size=\"small\"\n                  label=\"Contribute\"\n                  onClick={handleClick}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <MoreHorizIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.pending} posts pended`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <MessageCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.comments} comments written`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <HashIcon size={22} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.tags} tag followed`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, { useCallback, useEffect, useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\n\ninterface PostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Recent Comments\" />\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostOverViewCard from 'src/components/PostOverViewCard';\nimport { Post } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport About from './About';\nimport Posts from './Posts';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Profile: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { user } = useAuth();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isAuthor, setIsAuthor] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: user.email, page };\n      const response = await axios.post<{\n        posts: Post[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n        const data = response.data;\n\n        setPosts(data.posts);\n        setIsAuthor(data.isAuthor);\n        setPage(data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, user, page]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <About profile={profile} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          {posts.map(post => (\n            <Box mt={2} key={post._id}>\n              <PostOverViewCard post={post} author={isAuthor} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Profile;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport { Post } from 'src/types/post';\n\ninterface ReactionsProps {\n  className?: string;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  commentIcon: {\n    color: colors.grey[700]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [isBookmarked, setBookmarked] = useState<boolean>(true);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  const handleSaved = (): void => {\n    setBookmarked(true);\n  };\n\n  const handleUnsaved = (): void => {\n    setBookmarked(false);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1} />\n      {isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\n            <TrendingUpIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <TrendingUpIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      {isBookmarked ? (\n        <Tooltip title=\"Unsaved\">\n          <IconButton className={classes.likedButton} onClick={handleUnsaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Saved\">\n          <IconButton onClick={handleSaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from '../Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ListItemCardProps {\r\n  className?: string;\r\n  post: Post;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ListItemCard: FC<ListItemCardProps> = ({ className, post, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to={'/posts/public/' + post.slug}\r\n            variant=\"h5\"\r\n          >\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            <Link\r\n              color=\"textSecondary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h6\"\r\n            >\r\n              {typeof post.author !== 'string' && post.author.name}\r\n            </Link>\r\n            {` `}\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n        }\r\n      />\r\n      <Reactions post={post} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nListItemCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ListItemCard;\r\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from '../Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ListItemMobileCardProps {\r\n  className?: string;\r\n  post: Post;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ListItemMobileCard: FC<ListItemMobileCardProps> = ({\r\n  className,\r\n  post,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      alignItems=\"flex-start\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        disableTypography\r\n        primary={\r\n          <Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h5\">\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography variant=\"caption\" color=\"textSecondary\" component={'p'}>\r\n              <Link\r\n                color=\"textSecondary\"\r\n                component={RouterLink}\r\n                to=\"#\"\r\n                variant=\"h6\"\r\n              >\r\n                {typeof post.author !== 'string' && post.author.name}\r\n              </Link>\r\n              {` `}\r\n              {moment(post.createdAt).fromNow()}\r\n            </Typography>\r\n            <Reactions post={post} />\r\n          </>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nListItemMobileCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ListItemMobileCard;\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  List,\n  Hidden,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { User } from 'src/types/user';\nimport { Bookmark, BookmarkWithPost } from 'src/types/bookmark';\nimport { Theme } from 'src/theme';\nimport ListItemCard from './ListItemCard';\nimport ListItemMobileCard from './ListItemMobileCard';\n\ninterface ReadingListProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst cardContentStyle = {\n  paddingTop: 0,\n  paddingBottom: 0\n};\n\nconst ReadingList: FC<ReadingListProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { page };\n      const response = await axios.get<{ bookmarks: Bookmark[]; page: number }>(\n        '/bookmarks/all',\n        {\n          params\n        }\n      );\n      if (isMountedRef.current) {\n        setBookmarks(response.data.bookmarks);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12} lg={12}>\n          <Card>\n            <CardContent style={cardContentStyle}>\n              <List>\n                {bookmarks.map((bookmark: BookmarkWithPost) => (\n                  <React.Fragment key={bookmark._id}>\n                    <Hidden smDown>\n                      <ListItemCard post={bookmark.post} />\n                    </Hidden>\n                    <Hidden mdUp>\n                      <ListItemMobileCard post={bookmark.post} />\n                    </Hidden>\n                  </React.Fragment>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nReadingList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ReadingList;\n","import React, {\n  useCallback,\n  useState,\n  useEffect,\n  FC,\n  ChangeEvent\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Profile from './Profile';\nimport ReadingList from './ReadingList';\n// import Connections from './Connections';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState<string>('profile');\n  const [profile, setProfile] = useState<User | null>(null);\n\n  const tabs = [\n    { value: 'profile', label: 'Profile' },\n    { value: 'reading', label: 'reading list' },\n    { value: 'dashboard', label: 'Dashboard' }\n    // { value: 'connections', label: 'Connections' }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(async () => {\n    try {\n      const response = await axios.get<{ user: User }>('/account/about');\n\n      if (isMountedRef.current) {\n        setProfile(response.data.user);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'profile' && <Profile profile={profile} />}\n          {currentTab === 'reading' && <ReadingList profile={profile} />}\n          {/* {currentTab === 'connections' && <Connections />} */}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}