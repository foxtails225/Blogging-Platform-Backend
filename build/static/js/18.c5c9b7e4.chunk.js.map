{"version":3,"sources":["components/Label.tsx","components/GenericMoreButton.tsx","views/admin/SubAdminView/Header.tsx","views/admin/SubAdminView/LatestProjects.tsx","views/admin/SubAdminView/NewProjects.tsx","views/admin/SubAdminView/PerformanceOverTime/Chart.tsx","views/admin/SubAdminView/PerformanceOverTime/index.tsx","views/admin/SubAdminView/RealTime/Chart.tsx","views/admin/SubAdminView/RealTime/index.tsx","views/admin/SubAdminView/RoiPerCustomer.tsx","views/admin/SubAdminView/SystemHealth.tsx","views/admin/SubAdminView/TeamTasks/TaskItem.tsx","views/admin/SubAdminView/TeamTasks/index.tsx","views/admin/SubAdminView/TodaysMoney.tsx","views/admin/SubAdminView/index.tsx"],"names":["useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","current","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","timeRanges","value","text","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","map","_timeRange","MenuItem","key","technologyMap","angular","figma","sketch","technology","marginLeft","LatestProjects","isMountedRef","useIsMountedRef","projects","setProjects","getProjects","useCallback","a","axios","get","response","data","console","useEffect","Card","CardHeader","action","GenericMoreButton","Divider","Box","Table","TableHead","TableRow","TableCell","align","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","project","hover","id","Avatar","alt","src","author","avatar","getInitials","name","ml","numeral","budget","format","currency","technologies","moment","createdAt","p","size","endIcon","label","contrastText","NewProjects","gutterBottom","flexWrap","position","Chart","dataProp","labels","useTheme","options","responsive","maintainAspectRatio","animation","legend","layout","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","background","default","titleFontColor","bodyFontColor","footerFontColor","callbacks","tooltipItem","yLabel","canvas","gradient","getContext","createLinearGradient","addColorStop","datasets","pointBorderColor","pointBorderWidth","pointRadius","pointBackgroundColor","chart","PerformanceOverTime","performance","thisWeek","thisMonth","thisYear","CardContent","barThickness","maxBarThickness","barPercentage","categoryPercentage","cornerRadius","stacked","marginTop","marginRight","RealTime","setData","getData","prevData","newData","shift","push","setTimeout","max","random","Math","ceil","floor","pop","setInterval","i","length","subheader","subheaderTypographyProps","titleTypographyProps","List","pathname","views","page","ListItem","ListItemText","primaryTypographyProps","RoiPerCustomer","progress","margin","SystemHealth","LinearProgress","viewButton","TaskItem","task","deadline","now","deadlineMoment","isAfter","diff","noWrap","AvatarGroup","members","member","IconButton","edge","TeamTasks","tasks","setTasks","getTasks","TodaysMoney","dark","minHeight","paddingTop","paddingBottom","DashboardView","Page","Container","lg","sm","xs","xl"],"mappings":"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","file":"static/js/18.c5c9b7e4.chunk.js","sourcesContent":["import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport type { FC } from 'react';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = (props) => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          {...props}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import React, {\n  useRef,\n  useState\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((_timeRange) => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport type { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport type { Project } from 'src/types/reports';\n\ninterface LatestProjectsProps {\n  className?: string;\n}\n\nconst technologyMap: Record<string, string> = {\n  'html-css': '/static/images/technologies/html.svg',\n  'react-js': '/static/images/technologies/react-js.svg',\n  'vue-js': '/static/images/technologies/vue-js.svg',\n  angular: '/static/images/technologies/angular.svg',\n  figma: '/static/images/technologies/figma.svg',\n  sketch: '/static/images/technologies/sketch.svg'\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst LatestProjects: FC<LatestProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  const getProjects = useCallback(async () => {\n    try {\n      const response = await axios.get<{ projects: Project[]; }>('/api/reports/latest-projects');\n\n      if (isMountedRef.current) {\n        setProjects(response.data.projects);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Projects\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Title\n                </TableCell>\n                <TableCell>\n                  Author\n                </TableCell>\n                <TableCell>\n                  Budget\n                </TableCell>\n                <TableCell>\n                  Technology\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  sortDirection=\"desc\"\n                >\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Created\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project) => (\n                <TableRow\n                  hover\n                  key={project.id}\n                >\n                  <TableCell>\n                    {project.title}\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <Avatar\n                        alt=\"Author\"\n                        src={project.author.avatar}\n                      >\n                        {getInitials(project.author.name)}\n                      </Avatar>\n                      <Box ml={1}>\n                        {project.author.name}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {numeral(project.budget).format(`${project.currency}0,0.00`)}\n                  </TableCell>\n                  <TableCell>\n                    {project.technologies.map((technology) => (\n                      <img\n                        alt=\"Tech\"\n                        key={technology}\n                        className={classes.technology}\n                        src={technologyMap[technology]}\n                      />\n                    ))}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface NewProjectsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New projects\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any[];\n  labels: string[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart: FC<ChartProps> = ({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme: Theme = useTheme();\n\n  const data = (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: theme.palette.background.default,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value: number) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem: any) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Line\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\ninterface PerformanceOverTimeProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: '100%'\n  }\n}));\n\nconst PerformanceOverTime: FC<PerformanceOverTimeProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box\n            height={375}\n            minWidth={500}\n          >\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PerformanceOverTime;\n","import React from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface ChartProps {\n  className?: string;\n  data: any[];\n  labels: any[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart: FC<ChartProps> = ({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme: Theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.9,\n        categoryPercentage: 1\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: false,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        legend: () => {},\n        title: () => {},\n        label: (tooltipItem) => {\n          const label = `Views: ${tooltipItem.yLabel}`;\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport type { Theme } from 'src/theme';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\ninterface RealTimeProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  current: {\n    marginTop: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5)\n  }\n}));\n\nconst getRandomInt = (min: number, max: number): number => {\n  // eslint-disable-next-line no-param-reassign\n  min = Math.ceil(min);\n  // eslint-disable-next-line no-param-reassign\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst RealTime: FC<RealTimeProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [data, setData] = useState<any[]>([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172\n  ]);\n\n  const getData = useCallback(() => {\n    if (isMountedRef.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (isMountedRef.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: '/app/projects',\n      views: '24'\n    },\n    {\n      pathname: '/app/chat',\n      views: '21'\n    },\n    {\n      pathname: '/cart',\n      views: '15'\n    },\n    {\n      pathname: '/cart/checkout',\n      views: '8'\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Typography\n            color=\"inherit\"\n            variant=\"h3\"\n          >\n            {\n              data[data.length - 1] === 0\n                ? data[data.length - 2]\n                : data[data.length - 1]\n            }\n          </Typography>\n        )}\n        classes={{ action: classes.current }}\n        subheader=\"Page views per second\"\n        subheaderTypographyProps={{ color: 'textSecondary', variant: 'body2' }}\n        title=\"Active users\"\n        titleTypographyProps={{ color: 'textPrimary' }}\n      />\n      <Chart\n        data={data}\n        labels={labels}\n      />\n      <List>\n        {pages.map((page) => (\n          <ListItem\n            divider\n            key={page.pathname}\n          >\n            <ListItemText\n              primary={page.pathname}\n              primaryTypographyProps={{ color: 'textSecondary', variant: 'body2' }}\n            />\n            <Typography color=\"inherit\">\n              {page.views}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nRealTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RealTime;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: '$'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per customer\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            color=\"inherit\"\n            variant=\"h3\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar\n        className={classes.avatar}\n        color=\"inherit\"\n      >\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface SystemHealthProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  }\n}));\n\nconst SystemHealth: FC<SystemHealthProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 97\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        System Health\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {data.value}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={data.value}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n};\n\nSystemHealth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SystemHealth;\n","import React from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemProps,\n  ListItemText,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport type { Theme } from 'src/theme';\nimport type { Task } from 'src/types/reports';\n\ninterface TaskItemProps extends ListItemProps {\n  className?: string;\n  task: Task;\n  button?: any; // Fix warning\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst TaskItem: FC<TaskItemProps> = ({ className, task, ...rest }) => {\n  const classes = useStyles();\n\n  let deadline = 'N/A';\n\n  if (task.deadline) {\n    const now = moment();\n    const deadlineMoment = moment(task.deadline);\n\n    if (deadlineMoment.isAfter(now) && deadlineMoment.diff(now, 'day') < 3) {\n      deadline = `${deadlineMoment.diff(now, 'day')} days remaining`;\n    }\n  }\n\n  return (\n    <ListItem\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <ListItemText\n        primary={task.title}\n        primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n        secondary={deadline}\n      />\n      <AvatarGroup max={3}>\n        {task.members.map((member) => (\n          <Tooltip\n            key={member.name}\n            title=\"View\"\n          >\n            <Avatar src={member.avatar} />\n          </Tooltip>\n        ))}\n      </AvatarGroup>\n      <Tooltip title=\"View task\">\n        <IconButton\n          className={classes.viewButton}\n          edge=\"end\"\n        >\n          <OpenInNewIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n};\n\nTaskItem.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  task: PropTypes.object.isRequired\n};\n\nexport default TaskItem;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport type { Task } from 'src/types/reports';\nimport TaskItem from './TaskItem';\n\ninterface TeamTasksProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst TeamTasks: FC<TeamTasksProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [tasks, setTasks] = useState<Task[]>([]);\n\n  const getTasks = useCallback(async () => {\n    try {\n      const response = await axios.get<{ tasks: Task[]; }>('/api/reports/latest-tasks');\n  \n      if (isMountedRef.current) {\n        setTasks(response.data.tasks);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTasks();\n  }, [getTasks]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={400}>\n          <List>\n            {tasks.map((task, i) => (\n              <TaskItem\n                divider={i < tasks.length - 1}\n                key={task.id}\n                task={task}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '24,000',\n    currency: '$',\n    difference: 4\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","import React, { FC } from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Header from './Header';\nimport LatestProjects from './LatestProjects';\nimport NewProjects from './NewProjects';\nimport PerformanceOverTime from './PerformanceOverTime';\nimport RealTime from './RealTime';\nimport RoiPerCustomer from './RoiPerCustomer';\nimport SystemHealth from './SystemHealth';\nimport TeamTasks from './TeamTasks';\nimport TodaysMoney from './TodaysMoney';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TodaysMoney />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <SystemHealth />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <RoiPerCustomer />\n          </Grid>\n          <Grid item lg={3} xs={12}>\n            <RealTime />\n          </Grid>\n          <Grid item lg={9} xs={12}>\n            <PerformanceOverTime />\n          </Grid>\n          <Grid item lg={5} xl={4} xs={12}>\n            <TeamTasks />\n          </Grid>\n          <Grid item lg={7} xl={8} xs={12}>\n            <LatestProjects />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}