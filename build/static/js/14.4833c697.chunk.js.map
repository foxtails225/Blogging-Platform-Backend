{"version":3,"sources":["views/account/AccountView/General/ProfileDetails.tsx","views/account/AccountView/General/countries.ts","views/account/AccountView/General/GeneralSettings.tsx","views/account/AccountView/General/index.tsx","views/account/AccountView/Subscription.tsx","views/account/AccountView/Notifications.tsx","views/account/AccountView/Security/Password.tsx","views/account/AccountView/Security/Actions.tsx","views/account/AccountView/Security/index.tsx","views/account/AccountView/index.tsx"],"names":["useStyles","makeStyles","theme","root","name","marginTop","spacing","avatar","height","width","ProfileDetails","className","user","rest","classes","Card","clsx","CardContent","Box","display","alignItems","flexDirection","textAlign","Avatar","src","Typography","color","gutterBottom","variant","tier","CardActions","Button","fullWidth","phoneRegExp","GeneralSettings","onLoading","enqueueSnackbar","useSnackbar","handleUpdate","values","a","country","countries","find","item","text","data","axios","put","userData","enableReinitialize","initialValues","email","isPublic","phone","firstName","lastName","bio","submit","validationSchema","Yup","shape","city","max","required","LastName","matches","state","onSubmit","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","CardHeader","title","Divider","Grid","container","md","xs","TextField","error","Boolean","helperText","label","onBlur","onChange","value","type","Autocomplete","getOptionLabel","option","options","filterSelectedOptions","renderInput","params","onSelect","Switch","checked","edge","mt","FormHelperText","p","justifyContent","disabled","General","useState","isLoading","setIsLoading","useAuth","setUser","useEffect","get","response","fetchData","lg","xl","overview","padding","flexWrap","breakpoints","down","productImage","marginRight","details","Subscription","isMountedRef","useIsMountedRef","subscription","setSubscription","getSubscription","useCallback","current","console","Paper","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","size","Link","component","RouterLink","to","Notifications","event","preventDefault","wait","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","Password","password","passwordConfirm","min","oneOf","resetForm","deleteAction","palette","common","white","backgroundColor","main","dark","Actions","mb","startIcon","background","minHeight","paddingTop","paddingBottom","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","map","tab","Tab","key","Security"],"mappings":"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","file":"static/js/14.4833c697.chunk.js","sourcesContent":["import React from 'react';\nimport type { FC } from 'react';\n// import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  // Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport type { User } from 'src/types/user';\n\ninterface ProfileDetailsProps {\n  className?: string;\n  user: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst ProfileDetails: FC<ProfileDetailsProps> = ({ className, user, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            className={classes.name}\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Your tier:\n            {' '}\n            {/* <Link\n              component={RouterLink}\n              to=\"/pricing\"\n            > */}\n              {user.tier}\n            {/* </Link> */}\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","export default [\n  { \"text\": \"Afghanistan\", \"value\": \"AF\" },\n  { \"text\": \"Åland Islands\", \"value\": \"AX\" },\n  { \"text\": \"Albania\", \"value\": \"AL\" },\n  { \"text\": \"Algeria\", \"value\": \"DZ\" },\n  { \"text\": \"American Samoa\", \"value\": \"AS\" },\n  { \"text\": \"Andorra\", \"value\": \"AD\" },\n  { \"text\": \"Angola\", \"value\": \"AO\" },\n  { \"text\": \"Anguilla\", \"value\": \"AI\" },\n  { \"text\": \"Antarctica\", \"value\": \"AQ\" },\n  { \"text\": \"Antigua and Barbuda\", \"value\": \"AG\" },\n  { \"text\": \"Argentina\", \"value\": \"AR\" },\n  { \"text\": \"Armenia\", \"value\": \"AM\" },\n  { \"text\": \"Aruba\", \"value\": \"AW\" },\n  { \"text\": \"Australia\", \"value\": \"AU\" },\n  { \"text\": \"Austria\", \"value\": \"AT\" },\n  { \"text\": \"Azerbaijan\", \"value\": \"AZ\" },\n  { \"text\": \"Bahamas\", \"value\": \"BS\" },\n  { \"text\": \"Bahrain\", \"value\": \"BH\" },\n  { \"text\": \"Bangladesh\", \"value\": \"BD\" },\n  { \"text\": \"Barbados\", \"value\": \"BB\" },\n  { \"text\": \"Belarus\", \"value\": \"BY\" },\n  { \"text\": \"Belgium\", \"value\": \"BE\" },\n  { \"text\": \"Belize\", \"value\": \"BZ\" },\n  { \"text\": \"Benin\", \"value\": \"BJ\" },\n  { \"text\": \"Bermuda\", \"value\": \"BM\" },\n  { \"text\": \"Bhutan\", \"value\": \"BT\" },\n  { \"text\": \"Bolivia\", \"value\": \"BO\" },\n  { \"text\": \"Bosnia and Herzegovina\", \"value\": \"BA\" },\n  { \"text\": \"Botswana\", \"value\": \"BW\" },\n  { \"text\": \"Bouvet Island\", \"value\": \"BV\" },\n  { \"text\": \"Brazil\", \"value\": \"BR\" },\n  { \"text\": \"British Indian Ocean Territory\", \"value\": \"IO\" },\n  { \"text\": \"Brunei Darussalam\", \"value\": \"BN\" },\n  { \"text\": \"Bulgaria\", \"value\": \"BG\" },\n  { \"text\": \"Burkina Faso\", \"value\": \"BF\" },\n  { \"text\": \"Burundi\", \"value\": \"BI\" },\n  { \"text\": \"Cambodia\", \"value\": \"KH\" },\n  { \"text\": \"Cameroon\", \"value\": \"CM\" },\n  { \"text\": \"Canada\", \"value\": \"CA\" },\n  { \"text\": \"Cape Verde\", \"value\": \"CV\" },\n  { \"text\": \"Cayman Islands\", \"value\": \"KY\" },\n  { \"text\": \"Central African Republic\", \"value\": \"CF\" },\n  { \"text\": \"Chad\", \"value\": \"TD\" },\n  { \"text\": \"Chile\", \"value\": \"CL\" },\n  { \"text\": \"China\", \"value\": \"CN\" },\n  { \"text\": \"Christmas Island\", \"value\": \"CX\" },\n  { \"text\": \"Cocos (Keeling) Islands\", \"value\": \"CC\" },\n  { \"text\": \"Colombia\", \"value\": \"CO\" },\n  { \"text\": \"Comoros\", \"value\": \"KM\" },\n  { \"text\": \"Congo\", \"value\": \"CG\" },\n  { \"text\": \"Congo, The Democratic Republic of the\", \"value\": \"CD\" },\n  { \"text\": \"Cook Islands\", \"value\": \"CK\" },\n  { \"text\": \"Costa Rica\", \"value\": \"CR\" },\n  { \"text\": \"Cote D'Ivoire\", \"value\": \"CI\" },\n  { \"text\": \"Croatia\", \"value\": \"HR\" },\n  { \"text\": \"Cuba\", \"value\": \"CU\" },\n  { \"text\": \"Cyprus\", \"value\": \"CY\" },\n  { \"text\": \"Czech Republic\", \"value\": \"CZ\" },\n  { \"text\": \"Denmark\", \"value\": \"DK\" },\n  { \"text\": \"Djibouti\", \"value\": \"DJ\" },\n  { \"text\": \"Dominica\", \"value\": \"DM\" },\n  { \"text\": \"Dominican Republic\", \"value\": \"DO\" },\n  { \"text\": \"Ecuador\", \"value\": \"EC\" },\n  { \"text\": \"Egypt\", \"value\": \"EG\" },\n  { \"text\": \"El Salvador\", \"value\": \"SV\" },\n  { \"text\": \"Equatorial Guinea\", \"value\": \"GQ\" },\n  { \"text\": \"Eritrea\", \"value\": \"ER\" },\n  { \"text\": \"Estonia\", \"value\": \"EE\" },\n  { \"text\": \"Ethiopia\", \"value\": \"ET\" },\n  { \"text\": \"Falkland Islands (Malvinas)\", \"value\": \"FK\" },\n  { \"text\": \"Faroe Islands\", \"value\": \"FO\" },\n  { \"text\": \"Fiji\", \"value\": \"FJ\" },\n  { \"text\": \"Finland\", \"value\": \"FI\" },\n  { \"text\": \"France\", \"value\": \"FR\" },\n  { \"text\": \"French Guiana\", \"value\": \"GF\" },\n  { \"text\": \"French Polynesia\", \"value\": \"PF\" },\n  { \"text\": \"French Southern Territories\", \"value\": \"TF\" },\n  { \"text\": \"Gabon\", \"value\": \"GA\" },\n  { \"text\": \"Gambia\", \"value\": \"GM\" },\n  { \"text\": \"Georgia\", \"value\": \"GE\" },\n  { \"text\": \"Germany\", \"value\": \"DE\" },\n  { \"text\": \"Ghana\", \"value\": \"GH\" },\n  { \"text\": \"Gibraltar\", \"value\": \"GI\" },\n  { \"text\": \"Greece\", \"value\": \"GR\" },\n  { \"text\": \"Greenland\", \"value\": \"GL\" },\n  { \"text\": \"Grenada\", \"value\": \"GD\" },\n  { \"text\": \"Guadeloupe\", \"value\": \"GP\" },\n  { \"text\": \"Guam\", \"value\": \"GU\" },\n  { \"text\": \"Guatemala\", \"value\": \"GT\" },\n  { \"text\": \"Guernsey\", \"value\": \"GG\" },\n  { \"text\": \"Guinea\", \"value\": \"GN\" },\n  { \"text\": \"Guinea-Bissau\", \"value\": \"GW\" },\n  { \"text\": \"Guyana\", \"value\": \"GY\" },\n  { \"text\": \"Haiti\", \"value\": \"HT\" },\n  { \"text\": \"Heard Island and Mcdonald Islands\", \"value\": \"HM\" },\n  { \"text\": \"Holy See (Vatican City State)\", \"value\": \"VA\" },\n  { \"text\": \"Honduras\", \"value\": \"HN\" },\n  { \"text\": \"Hong Kong\", \"value\": \"HK\" },\n  { \"text\": \"Hungary\", \"value\": \"HU\" },\n  { \"text\": \"Iceland\", \"value\": \"IS\" },\n  { \"text\": \"India\", \"value\": \"IN\" },\n  { \"text\": \"Indonesia\", \"value\": \"ID\" },\n  { \"text\": \"Iran, Islamic Republic Of\", \"value\": \"IR\" },\n  { \"text\": \"Iraq\", \"value\": \"IQ\" },\n  { \"text\": \"Ireland\", \"value\": \"IE\" },\n  { \"text\": \"Isle of Man\", \"value\": \"IM\" },\n  { \"text\": \"Israel\", \"value\": \"IL\" },\n  { \"text\": \"Italy\", \"value\": \"IT\" },\n  { \"text\": \"Jamaica\", \"value\": \"JM\" },\n  { \"text\": \"Japan\", \"value\": \"JP\" },\n  { \"text\": \"Jersey\", \"value\": \"JE\" },\n  { \"text\": \"Jordan\", \"value\": \"JO\" },\n  { \"text\": \"Kazakhstan\", \"value\": \"KZ\" },\n  { \"text\": \"Kenya\", \"value\": \"KE\" },\n  { \"text\": \"Kiribati\", \"value\": \"KI\" },\n  { \"text\": \"Korea, Democratic People'S Republic of\", \"value\": \"KP\" },\n  { \"text\": \"Korea, Republic of\", \"value\": \"KR\" },\n  { \"text\": \"Kuwait\", \"value\": \"KW\" },\n  { \"text\": \"Kyrgyzstan\", \"value\": \"KG\" },\n  { \"text\": \"Lao People'S Democratic Republic\", \"value\": \"LA\" },\n  { \"text\": \"Latvia\", \"value\": \"LV\" },\n  { \"text\": \"Lebanon\", \"value\": \"LB\" },\n  { \"text\": \"Lesotho\", \"value\": \"LS\" },\n  { \"text\": \"Liberia\", \"value\": \"LR\" },\n  { \"text\": \"Libyan Arab Jamahiriya\", \"value\": \"LY\" },\n  { \"text\": \"Liechtenstein\", \"value\": \"LI\" },\n  { \"text\": \"Lithuania\", \"value\": \"LT\" },\n  { \"text\": \"Luxembourg\", \"value\": \"LU\" },\n  { \"text\": \"Macao\", \"value\": \"MO\" },\n  { \"text\": \"Macedonia, The Former Yugoslav Republic of\", \"value\": \"MK\" },\n  { \"text\": \"Madagascar\", \"value\": \"MG\" },\n  { \"text\": \"Malawi\", \"value\": \"MW\" },\n  { \"text\": \"Malaysia\", \"value\": \"MY\" },\n  { \"text\": \"Maldives\", \"value\": \"MV\" },\n  { \"text\": \"Mali\", \"value\": \"ML\" },\n  { \"text\": \"Malta\", \"value\": \"MT\" },\n  { \"text\": \"Marshall Islands\", \"value\": \"MH\" },\n  { \"text\": \"Martinique\", \"value\": \"MQ\" },\n  { \"text\": \"Mauritania\", \"value\": \"MR\" },\n  { \"text\": \"Mauritius\", \"value\": \"MU\" },\n  { \"text\": \"Mayotte\", \"value\": \"YT\" },\n  { \"text\": \"Mexico\", \"value\": \"MX\" },\n  { \"text\": \"Micronesia, Federated States of\", \"value\": \"FM\" },\n  { \"text\": \"Moldova, Republic of\", \"value\": \"MD\" },\n  { \"text\": \"Monaco\", \"value\": \"MC\" },\n  { \"text\": \"Mongolia\", \"value\": \"MN\" },\n  { \"text\": \"Montserrat\", \"value\": \"MS\" },\n  { \"text\": \"Morocco\", \"value\": \"MA\" },\n  { \"text\": \"Mozambique\", \"value\": \"MZ\" },\n  { \"text\": \"Myanmar\", \"value\": \"MM\" },\n  { \"text\": \"Namibia\", \"value\": \"NA\" },\n  { \"text\": \"Nauru\", \"value\": \"NR\" },\n  { \"text\": \"Nepal\", \"value\": \"NP\" },\n  { \"text\": \"Netherlands\", \"value\": \"NL\" },\n  { \"text\": \"Netherlands Antilles\", \"value\": \"AN\" },\n  { \"text\": \"New Caledonia\", \"value\": \"NC\" },\n  { \"text\": \"New Zealand\", \"value\": \"NZ\" },\n  { \"text\": \"Nicaragua\", \"value\": \"NI\" },\n  { \"text\": \"Niger\", \"value\": \"NE\" },\n  { \"text\": \"Nigeria\", \"value\": \"NG\" },\n  { \"text\": \"Niue\", \"value\": \"NU\" },\n  { \"text\": \"Norfolk Island\", \"value\": \"NF\" },\n  { \"text\": \"Northern Mariana Islands\", \"value\": \"MP\" },\n  { \"text\": \"Norway\", \"value\": \"NO\" },\n  { \"text\": \"Oman\", \"value\": \"OM\" },\n  { \"text\": \"Pakistan\", \"value\": \"PK\" },\n  { \"text\": \"Palau\", \"value\": \"PW\" },\n  { \"text\": \"Palestinian Territory, Occupied\", \"value\": \"PS\" },\n  { \"text\": \"Panama\", \"value\": \"PA\" },\n  { \"text\": \"Papua New Guinea\", \"value\": \"PG\" },\n  { \"text\": \"Paraguay\", \"value\": \"PY\" },\n  { \"text\": \"Peru\", \"value\": \"PE\" },\n  { \"text\": \"Philippines\", \"value\": \"PH\" },\n  { \"text\": \"Pitcairn\", \"value\": \"PN\" },\n  { \"text\": \"Poland\", \"value\": \"PL\" },\n  { \"text\": \"Portugal\", \"value\": \"PT\" },\n  { \"text\": \"Puerto Rico\", \"value\": \"PR\" },\n  { \"text\": \"Qatar\", \"value\": \"QA\" },\n  { \"text\": \"Reunion\", \"value\": \"RE\" },\n  { \"text\": \"Romania\", \"value\": \"RO\" },\n  { \"text\": \"Russian Federation\", \"value\": \"RU\" },\n  { \"text\": \"RWANDA\", \"value\": \"RW\" },\n  { \"text\": \"Saint Helena\", \"value\": \"SH\" },\n  { \"text\": \"Saint Kitts and Nevis\", \"value\": \"KN\" },\n  { \"text\": \"Saint Lucia\", \"value\": \"LC\" },\n  { \"text\": \"Saint Pierre and Miquelon\", \"value\": \"PM\" },\n  { \"text\": \"Saint Vincent and the Grenadines\", \"value\": \"VC\" },\n  { \"text\": \"Samoa\", \"value\": \"WS\" },\n  { \"text\": \"San Marino\", \"value\": \"SM\" },\n  { \"text\": \"Sao Tome and Principe\", \"value\": \"ST\" },\n  { \"text\": \"Saudi Arabia\", \"value\": \"SA\" },\n  { \"text\": \"Senegal\", \"value\": \"SN\" },\n  { \"text\": \"Serbia and Montenegro\", \"value\": \"CS\" },\n  { \"text\": \"Seychelles\", \"value\": \"SC\" },\n  { \"text\": \"Sierra Leone\", \"value\": \"SL\" },\n  { \"text\": \"Singapore\", \"value\": \"SG\" },\n  { \"text\": \"Slovakia\", \"value\": \"SK\" },\n  { \"text\": \"Slovenia\", \"value\": \"SI\" },\n  { \"text\": \"Solomon Islands\", \"value\": \"SB\" },\n  { \"text\": \"Somalia\", \"value\": \"SO\" },\n  { \"text\": \"South Africa\", \"value\": \"ZA\" },\n  { \"text\": \"South Georgia and the South Sandwich Islands\", \"value\": \"GS\" },\n  { \"text\": \"Spain\", \"value\": \"ES\" },\n  { \"text\": \"Sri Lanka\", \"value\": \"LK\" },\n  { \"text\": \"Sudan\", \"value\": \"SD\" },\n  { \"text\": \"Suriname\", \"value\": \"SR\" },\n  { \"text\": \"Svalbard and Jan Mayen\", \"value\": \"SJ\" },\n  { \"text\": \"Swaziland\", \"value\": \"SZ\" },\n  { \"text\": \"Sweden\", \"value\": \"SE\" },\n  { \"text\": \"Switzerland\", \"value\": \"CH\" },\n  { \"text\": \"Syrian Arab Republic\", \"value\": \"SY\" },\n  { \"text\": \"Taiwan, Province of China\", \"value\": \"TW\" },\n  { \"text\": \"Tajikistan\", \"value\": \"TJ\" },\n  { \"text\": \"Tanzania, United Republic of\", \"value\": \"TZ\" },\n  { \"text\": \"Thailand\", \"value\": \"TH\" },\n  { \"text\": \"Timor-Leste\", \"value\": \"TL\" },\n  { \"text\": \"Togo\", \"value\": \"TG\" },\n  { \"text\": \"Tokelau\", \"value\": \"TK\" },\n  { \"text\": \"Tonga\", \"value\": \"TO\" },\n  { \"text\": \"Trinidad and Tobago\", \"value\": \"TT\" },\n  { \"text\": \"Tunisia\", \"value\": \"TN\" },\n  { \"text\": \"Turkey\", \"value\": \"TR\" },\n  { \"text\": \"Turkmenistan\", \"value\": \"TM\" },\n  { \"text\": \"Turks and Caicos Islands\", \"value\": \"TC\" },\n  { \"text\": \"Tuvalu\", \"value\": \"TV\" },\n  { \"text\": \"Uganda\", \"value\": \"UG\" },\n  { \"text\": \"Ukraine\", \"value\": \"UA\" },\n  { \"text\": \"United Arab Emirates\", \"value\": \"AE\" },\n  { \"text\": \"United Kingdom\", \"value\": \"GB\" },\n  { \"text\": \"United States\", \"value\": \"US\" },\n  { \"text\": \"United States Minor Outlying Islands\", \"value\": \"UM\" },\n  { \"text\": \"Uruguay\", \"value\": \"UY\" },\n  { \"text\": \"Uzbekistan\", \"value\": \"UZ\" },\n  { \"text\": \"Vanuatu\", \"value\": \"VU\" },\n  { \"text\": \"Venezuela\", \"value\": \"VE\" },\n  { \"text\": \"Viet Nam\", \"value\": \"VN\" },\n  { \"text\": \"Virgin Islands, British\", \"value\": \"VG\" },\n  { \"text\": \"Virgin Islands, U.S.\", \"value\": \"VI\" },\n  { \"text\": \"Wallis and Futuna\", \"value\": \"WF\" },\n  { \"text\": \"Western Sahara\", \"value\": \"EH\" },\n  { \"text\": \"Yemen\", \"value\": \"YE\" },\n  { \"text\": \"Zambia\", \"value\": \"ZM\" },\n  { \"text\": \"Zimbabwe\", \"value\": \"ZW\" }\n];\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { User } from 'src/types/user';\nimport axios from 'src/utils/axios';\nimport countries from './countries';\n\ninterface GeneralSettingsProps {\n  className?: string;\n  user: User;\n  onLoading(param: boolean): void;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst GeneralSettings: FC<GeneralSettingsProps> = ({\n  user,\n  className,\n  onLoading,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleUpdate = async (values: any): Promise<void> => {\n    const country = countries.find(item => item.text === values.country)\n      ? values.country\n      : '';\n    let data = { ...values, country };\n    await axios.put<{ user: User }>('/account/update', {\n      userData: data\n    });\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        country: user.country || '',\n        email: user.email || '',\n        isPublic: user.isPublic,\n        name: user.name || '',\n        phone: user.phone || '',\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        bio: user.bio || '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        city: Yup.string().max(255),\n        country: Yup.string().max(255),\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        isPublic: Yup.bool(),\n        name: Yup.string()\n          .max(255)\n          .required('Name is required'),\n        firstName: Yup.string().max(255),\n        LastName: Yup.string().max(255),\n        bio: Yup.string().max(255),\n        phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n        state: Yup.string().max(255)\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          handleUpdate(values);\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n        onLoading(true);\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card className={clsx(classes.root, className)} {...rest}>\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid container spacing={4}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Username\"\n                    name=\"name\"\n                    required\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={\n                      touched.email && errors.email\n                        ? errors.email\n                        : 'We will use this email to contact you'\n                    }\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    getOptionLabel={option => option.text}\n                    options={countries}\n                    filterSelectedOptions\n                    value={countries.find(\n                      option => option.text === user.country\n                    )}\n                    renderInput={params => (\n                      <TextField\n                        fullWidth\n                        label=\"Country\"\n                        name=\"country\"\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                        onSelect={handleChange}\n                        {...params}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} xs={12}>\n                  <TextField\n                    error={Boolean(touched.bio && errors.bio)}\n                    fullWidth\n                    helperText={touched.bio && errors.bio}\n                    label=\"Bio\"\n                    name=\"bio\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.bio}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Typography variant=\"h6\" color=\"textPrimary\">\n                    Make Profile Info Public\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Means that anyone viewing your profile will be able to see\n                    your details\n                  </Typography>\n                  <Switch\n                    checked={values.isPublic}\n                    edge=\"start\"\n                    name=\"isPublic\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect, FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\nimport { User } from 'src/types/user';\n\ninterface GeneralProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General: FC<GeneralProps> = ({ className, ...rest }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { user, setUser } = useAuth();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get<{ user: User }>('/account/about');\n      setUser(response.data.user);\n    };\n    isLoading && fetchData();\n    setIsLoading(false);\n  }, [isLoading, setUser]);\n\n  const handleLoad = (value: boolean): void => {\n    setIsLoading(value);\n  };\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid item lg={8} md={6} xl={9} xs={12}>\n        <GeneralSettings user={user} onLoading={handleLoad} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface SubscriptionProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nconst Subscription: FC<SubscriptionProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState<any | null>(null);\n\n  const getSubscription = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/account/subscription');\n\n      if (isMountedRef.current) {\n        setSubscription(response.data.subscription);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/static/images/products/product_premium.svg\"\n              />\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            The refunds don&apos;t work once you have the subscription, but you can\n            always\n            {' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport type { FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\ninterface NotificationProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Notifications: FC<NotificationProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n    event.preventDefault();\n    // NOTE: Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          p={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\r\nimport type { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { User } from 'src/types/user';\r\nimport axios from 'src/utils/axios';\r\n\r\ninterface SecurityProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Password: FC<SecurityProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: '',\r\n        passwordConfirm: '',\r\n        submit: null\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        password: Yup.string()\r\n          .min(7, 'Must be at least 7 characters')\r\n          .max(255)\r\n          .required('Required'),\r\n        passwordConfirm: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Required')\r\n      })}\r\n      onSubmit={async (values, {\r\n        resetForm,\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        try {\r\n          await axios.put<{ user: User }>('/account/password', {\r\n            userData: values\r\n          });\r\n          resetForm();\r\n          setStatus({ success: true });\r\n          setSubmitting(false);\r\n          enqueueSnackbar('Password updated', {\r\n            variant: 'success'\r\n          });\r\n        } catch (err) {\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n          >\r\n            <CardHeader title=\"Change Password\" />\r\n            <Divider />\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  md={4}\r\n                  sm={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.password && errors.password)}\r\n                    fullWidth\r\n                    helperText={touched.password && errors.password}\r\n                    label=\"New Password\"\r\n                    name=\"password\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={4}\r\n                  sm={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\r\n                    fullWidth\r\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\r\n                    label=\"Password Confirmation\"\r\n                    name=\"passwordConfirm\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    type=\"password\"\r\n                    value={values.passwordConfirm}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              {errors.submit && (\r\n                <Box mt={3}>\r\n                  <FormHelperText error>\r\n                    {errors.submit}\r\n                  </FormHelperText>\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n            <Divider />\r\n            <Box\r\n              p={2}\r\n              display=\"flex\"\r\n              justifyContent=\"flex-end\"\r\n            >\r\n              <Button\r\n                color=\"secondary\"\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport type { Theme } from 'src/theme';\n\ninterface OtherActionsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  deleteAction: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  }\n}));\n\nconst Actions: FC<OtherActionsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Actions\" />\n      <Divider />\n      <CardContent>\n        <Box\n          mt={1}\n          mb={2}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            Remove this customer’s data if he requested that, if not please\n            be aware that what has been deleted can never brough back\n          </Typography>\n        </Box>\n        <Button\n          className={classes.deleteAction}\n          startIcon={<DeleteIcon />}\n        >\n          Delete Account\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nActions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Actions;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport Password from './Password';\nimport Actions from './Actions';\n\ninterface GeneralProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General: FC<GeneralProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid item lg={12} md={12} xs={12}>\n        <Password />\n      </Grid>\n      <Grid item lg={12} md={12} xs={12}>\n        <Actions />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState, FC, ChangeEvent } from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst AccountView: FC = () => {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState<string>('general');\n\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'security', label: 'Security' }\n\n    // TODO: activate in next dev cycle\n    // { value: 'subscription', label: 'Subscription' },\n    // { value: 'notifications', label: 'Notifications' },\n  ];\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title=\"Settings\">\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Settings\n        </Typography>\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AccountView;\n"],"sourceRoot":""}