{"version":3,"sources":["components/CustomIcon.tsx","components/PaymentIntent/CheckoutForm.tsx","components/PaymentIntent/CustomForm.tsx","components/PaymentIntent/index.tsx","views/account/ProfileView/Header.tsx","components/PostOverViewCard/Reactions.tsx","components/PostOverViewCard/index.tsx","views/account/ProfileView/Profile/About.tsx","views/account/ProfileView/Profile/Posts.tsx","views/account/ProfileView/Profile/index.tsx","views/account/ProfileView/index.tsx"],"names":["useStyles","makeStyles","root","textAlign","icon","display","height","width","CustomIcon","props","classes","fontSize","alt","className","src","CARD_ELEMENT_OPTIONS","style","base","color","colors","grey","fontFamily","fontSmoothing","invalid","iconColor","theme","CheckoutForm","author","open","secret","onOpen","onBack","onSuccess","rest","stripe","useStripe","elements","useElements","handleSubmit","event","a","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","email","result","error","console","log","message","paymentIntent","status","clsx","onSubmit","DialogContent","Box","border","padding","borderRadius","options","DialogActions","Button","onClick","disabled","type","CustomForm","onNext","useState","amount","setAmount","params","stripeId","axios","post","response","data","Grid","container","justify","item","md","TextField","label","defaultValue","name","InputProps","readOnly","placeholder","value","onChange","target","inputProps","min","startAdornment","InputAdornment","position","backButton","marginRight","spacing","instructions","marginTop","marginBottom","StripeCheckout","postId","activeStep","setActiveStep","setSecret","setAuthor","steps","useEffect","get","fetchData","Dialog","keepMounted","onClose","aria-labelledby","fullWidth","Stepper","alternativeLabel","map","Step","key","StepLabel","prevActiveStep","stripePromise","cover","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","right","backgroundColor","blueGrey","palette","common","white","breakpoints","down","avatar","action","marginLeft","bioBox","Header","profile","location","useLocation","disable","setDisable","pathname","variant","startIcon","Container","maxWidth","mt","alignItems","Avatar","Typography","Hidden","smDown","bio","flexGrow","component","RouterLink","size","to","mdUp","Tooltip","title","IconButton","iconRoot","likedButton","red","likedIcon","commentIcon","Reactions","isLiked","setLiked","liked","count","likes","setLikes","setOpen","handleLike","prevLikes","handleOpen","ml","mr","comments","length","_id","date","media","PostOverViewCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","moment","createdAt","fromNow","Link","px","pb","slug","large","initialStatus","published","pending","tags","blueAvatar","secondary","main","redAvatar","cardContent","paddingTop","About","history","useHistory","user","useAuth","setStatus","setDisabled","Divider","CardContent","List","ListItem","disableGutters","divider","ListItemAvatar","ListItemText","primary","primaryTypographyProps","Chip","push","borderRight","Posts","isMountedRef","useIsMountedRef","activities","setActivities","getActivities","useCallback","current","disablePadding","activity","i","id","customer","getInitials","underline","description","p","justifyContent","endIcon","Profile","posts","setPosts","isAuthor","setIsAuthor","page","setPage","getPosts","xs","lg","background","dark","minHeight","ProfileView","setProfile","Page","py"],"mappings":"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","file":"static/js/5.6f421993.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\n\r\ninterface CheckoutFormProps {\r\n  className?: string;\r\n  open: boolean;\r\n  secret: string;\r\n  author: User;\r\n  onOpen: () => void;\r\n  onBack: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: colors.grey[500],\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: 'antialiased',\r\n      fontSize: '16px',\r\n      '::placeholder': {\r\n        color: colors.grey[500]\r\n      }\r\n    },\r\n    invalid: {\r\n      color: '#fa755a',\r\n      iconColor: '#fa755a'\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst CheckoutForm: FC<CheckoutFormProps> = ({\r\n  className,\r\n  open,\r\n  author,\r\n  secret,\r\n  onOpen,\r\n  onBack,\r\n  onSuccess,\r\n  ...rest\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const result = await stripe.confirmCardPayment(secret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          email: author.email\r\n        }\r\n      }\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      console.log(result.error.message);\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n        onSuccess();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  const handleBack = () => onBack();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent>\r\n          <Box border={1} padding={2} borderRadius={5}>\r\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleBack} color=\"primary\">\r\n            Back\r\n          </Button>\r\n          <Button disabled={!stripe} type=\"submit\" color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutForm.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onBack: PropTypes.func\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { FC, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Grid,\r\n  DialogContent,\r\n  DialogActions,\r\n  InputAdornment,\r\n  Button,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\nimport axios from 'src/utils/axios';\r\n\r\ninterface CustomFormProps {\r\n  className?: string;\r\n  open: boolean;\r\n  author: User;\r\n  onOpen: () => void;\r\n  onNext: (secret: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst CustomForm: FC<CustomFormProps> = ({\r\n  className,\r\n  author,\r\n  open,\r\n  onOpen,\r\n  onNext,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [amount, setAmount] = useState<number>();\r\n\r\n  const handleSubmit = async () => {\r\n    const params = { stripeId: author.stripeId, amount };\r\n    const response = await axios.post<{ secret: string }>(\r\n      '/stripe/secret',\r\n      params\r\n    );\r\n    if (response.data) {\r\n      onNext(response.data.secret);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => setAmount(event.target.value);\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <DialogContent>\r\n        <Grid container justify=\"center\">\r\n          <Grid item md={5}>\r\n            <TextField\r\n              label=\"Name\"\r\n              defaultValue={author.name}\r\n              InputProps={{\r\n                readOnly: true\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <TextField\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              placeholder=\"Must be larger than 3\"\r\n              value={amount}\r\n              onChange={handleChange}\r\n              error={amount < 3}\r\n              InputProps={{\r\n                inputProps: { min: 3 },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          disabled={amount < 3 || !amount}\r\n          color=\"primary\"\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomForm.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onNext: PropTypes.func\r\n};\r\n\r\nexport default CustomForm;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport {\r\n  Dialog,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\nimport axios from 'src/utils/axios';\r\nimport { stripePromise } from 'src/constants';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport CustomForm from './CustomForm';\r\nimport { PostWithAuthor } from 'src/types/post';\r\n\r\ninterface StripeCheckoutProps {\r\n  className?: string;\r\n  postId: string;\r\n  open: boolean;\r\n  onOpen: () => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst getSteps = () => ['Author Info', 'Card Details'];\r\n\r\nconst StripeCheckout: FC<StripeCheckoutProps> = ({\r\n  className,\r\n  postId,\r\n  open,\r\n  onOpen,\r\n  onSuccess,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState<number>(0);\r\n  const [secret, setSecret] = useState<string>();\r\n  const [author, setAuthor] = useState<User>();\r\n  const steps = getSteps();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<{ post: PostWithAuthor }>(\r\n        '/posts/getById/' + postId\r\n      );\r\n\r\n      if (response.data) {\r\n        setAuthor(response.data.post.author);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  const handleNext = (value: string) => {\r\n    setSecret(value);\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {author && (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"checkform-dialog\"\r\n          fullWidth\r\n        >\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map(label => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === 0 && (\r\n            <CustomForm\r\n              open={open}\r\n              author={author}\r\n              onOpen={onOpen}\r\n              onNext={handleNext}\r\n            />\r\n          )}\r\n          {activeStep === 1 && (\r\n            <Elements stripe={stripePromise}>\r\n              <CheckoutForm\r\n                open={open}\r\n                author={author}\r\n                secret={secret}\r\n                onOpen={onOpen}\r\n                onBack={handleBack}\r\n                onSuccess={onSuccess}\r\n              />\r\n            </Elements>\r\n          )}\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\n\ninterface HeaderProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 260,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100,\n      left: theme.spacing(1)\n    }\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  },\n  bioBox: {\n    marginLeft: '160px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '120px'\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [disable, setDisable] = useState(false);\n\n  useEffect(() => {\n    setDisable(location.pathname !== '/account/profile');\n  }, [location.pathname]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n          startIcon={<AddPhotoIcon />}\n        >\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box className={classes.bioBox} mt={1}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n            <Hidden smDown>\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {profile.bio}\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box flexGrow={1} />\n          {!disable && (\n            <>\n              <Hidden smDown>\n                <Button\n                  color=\"secondary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to=\"/account/setting\"\n                  variant=\"contained\"\n                  className={classes.action}\n                >\n                  Edit Profile\n                </Button>\n              </Hidden>\n              <Hidden mdUp>\n                <Tooltip title=\"More options\">\n                  <IconButton className={classes.action}>\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </Hidden>\n            </>\n          )}\n        </Box>\n        <Hidden mdUp>\n          <Box textAlign=\"center\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from '../CustomIcon';\nimport { Post } from 'src/types/post';\nimport StripeCheckout from 'src/components/PaymentIntent';\n\ninterface ReactionsProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  likedIcon: {\n    display: 'flex',\n    height: 'inherit',\n    width: 'inherit'\n  },\n  commentIcon: {\n    color: colors.grey[500]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  const handleOpen = (): void => setOpen(!open);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {author && (\n        <IconButton onClick={handleLike} disabled={author}>\n          <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n        </IconButton>\n      )}\n      {!author && (\n        <>\n          {isLiked ? (\n            <Tooltip title=\"Unlike\">\n              <IconButton\n                className={classes.likedButton}\n                onClick={handleUnlike}\n              >\n                <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      <IconButton onClick={handleOpen}>\n        <AttachMoneyIcon fontSize=\"small\" />\n      </IconButton>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n      {open && (\n        <StripeCheckout\n          open={open}\n          postId={post._id}\n          onOpen={handleOpen}\n          onSuccess={handleOpen}\n        />\n      )}\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default Reactions;\n","import React, { useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Post } from 'src/types/post';\nimport Reactions from './Reactions';\nimport { Theme } from 'src/theme';\n\ninterface PostOverViewCardProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst PostOverViewCard: FC<PostOverViewCardProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={typeof post.author !== 'string' && post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {typeof post.author !== 'string' && post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={1} className={classes.title}>\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to={'/posts/public/' + post.slug}\n            variant=\"h3\"\n          >\n            {post.title}\n          </Link>\n        </Box>\n        <Box mt={2} pb={2} px={3}>\n          <Reactions post={post} author={author} />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostOverViewCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default PostOverViewCard;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors,\n  makeStyles,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {\n  Hash as HashIcon,\n  MessageCircle as MessageCircleIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport { User, Status } from 'src/types/user';\n\ninterface AboutProps {\n  className?: string;\n  profile: User;\n}\n\nconst initialStatus = {\n  published: 0,\n  pending: 0,\n  comments: 0,\n  tags: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  blueAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  redAvatar: {\n    backgroundColor: colors.red[600]\n  },\n  cardContent: {\n    paddingTop: 0\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response: any;\n\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/status');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/status'\n        );\n      }\n      setStatus(response.data.status);\n    };\n    fetchData();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const disable = user && user.email !== profile.email;\n    setDisabled(disable);\n  }, [user, profile]);\n\n  const handleClick = () => history.push('/posts/new');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box mt={2}>\n        <Card>\n          <CardHeader title=\"Profile Status\" />\n          <Divider />\n          <CardContent className={classes.cardContent}>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <DescriptionOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.published} posts published`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n                {!disabled && (\n                  <Chip\n                    color=\"secondary\"\n                    size=\"small\"\n                    label=\"Contribute\"\n                    onClick={handleClick}\n                  />\n                )}\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <MoreHorizIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.pending} posts pended`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <MessageCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.comments} comments written`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <HashIcon size={22} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.tags} tag followed`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, { useCallback, useEffect, useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\n\ninterface PostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Recent Comments\" />\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostOverViewCard from 'src/components/PostOverViewCard';\nimport { Post } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport About from './About';\nimport Posts from './Posts';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Profile: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isAuthor, setIsAuthor] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(0);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: profile.email, page: page ? page : 0 };\n      const response = await axios.post<{\n        posts: Post[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n        setIsAuthor(response.data.isAuthor);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page, profile]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <About profile={profile} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          {posts.map(post => (\n            <Box mt={2} key={post._id}>\n              <PostOverViewCard post={post} author={isAuthor} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Profile;\n","import React, { useCallback, useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Box, Container, Divider, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Profile from './Profile';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const isMountedRef = useIsMountedRef();\n  const [profile, setProfile] = useState<User | null>(null);\n\n  const getPosts = useCallback(async () => {\n    let response: any;\n\n    try {\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/about');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/about'\n        );\n      }\n\n      if (isMountedRef.current) {\n        setProfile(response.data.user);\n      }\n    } catch (err) {\n      history.push('/404');\n    }\n  }, [isMountedRef, location.pathname, history]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box py={3} pb={6}>\n          <Profile profile={profile} />\n        </Box>\n        <Divider />\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}