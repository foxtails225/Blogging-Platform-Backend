{"version":3,"sources":["components/CustomIcon.tsx","components/PaymentIntent/CheckoutForm.tsx","components/PaymentIntent/CustomForm.tsx","components/PaymentIntent/index.tsx","views/account/ProfileView/Header.tsx","components/PostOverViewCard/Reactions.tsx","components/PostOverViewCard/index.tsx","views/account/ProfileView/Profile/About.tsx","views/account/ProfileView/Profile/Posts.tsx","views/account/ProfileView/Profile/index.tsx","views/account/ProfileView/index.tsx"],"names":["useStyles","makeStyles","root","textAlign","icon","display","height","width","CustomIcon","props","classes","fontSize","alt","className","src","CARD_ELEMENT_OPTIONS","style","base","color","colors","grey","fontFamily","fontSmoothing","invalid","iconColor","theme","CheckoutForm","author","open","secret","amount","onOpen","onBack","onSuccess","rest","user","useAuth","stripe","useStripe","elements","useElements","handleSubmit","event","a","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","email","result","error","console","log","message","paymentIntent","status","params","_id","type","title","description","name","isRead","url","axios","post","clsx","onSubmit","DialogContent","Box","border","padding","borderRadius","options","DialogActions","Button","onClick","disabled","CustomForm","onNext","useState","setAmount","stripeId","response","data","Grid","container","justify","item","md","TextField","label","defaultValue","InputProps","readOnly","placeholder","value","onChange","target","inputProps","min","startAdornment","InputAdornment","position","backButton","marginRight","spacing","instructions","marginTop","marginBottom","StripeCheckout","postId","activeStep","setActiveStep","setSecret","setAuthor","steps","useEffect","get","fetchData","Dialog","keepMounted","onClose","aria-labelledby","fullWidth","Stepper","alternativeLabel","map","Step","key","StepLabel","qty","prevActiveStep","stripePromise","cover","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","right","backgroundColor","blueGrey","palette","common","white","breakpoints","down","avatar","action","marginLeft","bioBox","Header","profile","location","useLocation","isFollow","setIsFollow","disable","setDisable","follow","followers","includes","isDisable","pathname","handleFollow","userId","put","variant","startIcon","Container","maxWidth","mt","alignItems","Avatar","Typography","Hidden","smDown","bio","flexGrow","size","component","RouterLink","to","mdUp","iconRoot","likedButton","red","likedIcon","commentIcon","Reactions","isLiked","setLiked","liked","count","likes","setLikes","setOpen","handleLike","prevLikes","handleOpen","IconButton","Tooltip","ml","mr","comments","length","date","media","PostOverViewCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","moment","createdAt","fromNow","Link","px","pb","slug","large","initialStatus","published","pending","tags","blueAvatar","secondary","main","redAvatar","cardContent","paddingTop","About","history","useHistory","setStatus","setDisabled","Divider","CardContent","List","ListItem","disableGutters","divider","ListItemAvatar","ListItemText","primary","primaryTypographyProps","Chip","push","borderRight","Posts","isMountedRef","useIsMountedRef","activities","setActivities","getActivities","useCallback","current","disablePadding","activity","i","id","customer","getInitials","underline","p","justifyContent","endIcon","Profile","posts","setPosts","isAuthor","setIsAuthor","page","setPage","getPosts","xs","lg","background","dark","minHeight","ProfileView","setProfile","Page","py"],"mappings":"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","file":"static/js/6.128c20c9.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\nimport useAuth from 'src/hooks/useAuth';\r\n\r\ninterface CheckoutFormProps {\r\n  className?: string;\r\n  open: boolean;\r\n  secret: string;\r\n  author: User;\r\n  amount: number;\r\n  onOpen: () => void;\r\n  onBack: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: colors.grey[500],\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: 'antialiased',\r\n      fontSize: '16px',\r\n      '::placeholder': {\r\n        color: colors.grey[500]\r\n      }\r\n    },\r\n    invalid: {\r\n      color: '#fa755a',\r\n      iconColor: '#fa755a'\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst CheckoutForm: FC<CheckoutFormProps> = ({\r\n  className,\r\n  open,\r\n  author,\r\n  secret,\r\n  amount,\r\n  onOpen,\r\n  onBack,\r\n  onSuccess,\r\n  ...rest\r\n}) => {\r\n  const { user } = useAuth();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const result = await stripe.confirmCardPayment(secret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          email: author.email\r\n        }\r\n      }\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      console.log(result.error.message);\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n        const params = {\r\n          user: author._id,\r\n          type: 'tips_success',\r\n          title: `New payment received`,\r\n          description: `You got the new tips. You received $${amount} from ${user.name}`,\r\n          isRead: false,\r\n          url: '#'\r\n        };\r\n        await axios.post<{ notification: Notification }>(\r\n          '/notifications/create',\r\n          params\r\n        );\r\n        onSuccess();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  const handleBack = () => onBack();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent>\r\n          <Box border={1} padding={2} borderRadius={5}>\r\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleBack} color=\"primary\">\r\n            Back\r\n          </Button>\r\n          <Button disabled={!stripe} type=\"submit\" color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutForm.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onBack: PropTypes.func\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { FC, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Grid,\r\n  DialogContent,\r\n  DialogActions,\r\n  InputAdornment,\r\n  Button,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\nimport axios from 'src/utils/axios';\r\n\r\ninterface CustomFormProps {\r\n  className?: string;\r\n  open: boolean;\r\n  author: User;\r\n  onOpen: () => void;\r\n  onNext: (secret: string, amount: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst CustomForm: FC<CustomFormProps> = ({\r\n  className,\r\n  author,\r\n  open,\r\n  onOpen,\r\n  onNext,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [amount, setAmount] = useState<number>();\r\n\r\n  const handleSubmit = async () => {\r\n    const params = { stripeId: author.stripeId, amount };\r\n    const response = await axios.post<{ secret: string }>(\r\n      '/stripe/secret',\r\n      params\r\n    );\r\n    if (response.data) {\r\n      onNext(response.data.secret, (amount * 4) / 5);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => setAmount(event.target.value);\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <DialogContent>\r\n        <Grid container justify=\"center\">\r\n          <Grid item md={5}>\r\n            <TextField\r\n              label=\"Name\"\r\n              defaultValue={author.name}\r\n              InputProps={{\r\n                readOnly: true\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item md={5}>\r\n            <TextField\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              placeholder=\"Must be larger than 3\"\r\n              value={amount}\r\n              onChange={handleChange}\r\n              error={amount < 3}\r\n              InputProps={{\r\n                inputProps: { min: 3 },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          disabled={amount < 3 || !amount}\r\n          color=\"primary\"\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomForm.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onNext: PropTypes.func\r\n};\r\n\r\nexport default CustomForm;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport {\r\n  Dialog,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\nimport axios from 'src/utils/axios';\r\nimport { stripePromise } from 'src/constants';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport CustomForm from './CustomForm';\r\nimport { PostWithAuthor } from 'src/types/post';\r\n\r\ninterface StripeCheckoutProps {\r\n  className?: string;\r\n  postId: string;\r\n  open: boolean;\r\n  onOpen: () => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst getSteps = () => ['Author Info', 'Card Details'];\r\n\r\nconst StripeCheckout: FC<StripeCheckoutProps> = ({\r\n  className,\r\n  postId,\r\n  open,\r\n  onOpen,\r\n  onSuccess,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState<number>(0);\r\n  const [secret, setSecret] = useState<string>();\r\n  const [amount, setAmount] = useState<number>(0);\r\n  const [author, setAuthor] = useState<User>();\r\n  const steps = getSteps();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<{ post: PostWithAuthor }>(\r\n        '/posts/getById/' + postId\r\n      );\r\n\r\n      if (response.data) {\r\n        setAuthor(response.data.post.author);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  const handleNext = (value: string, qty: number) => {\r\n    setSecret(value);\r\n    setAmount(qty);\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleClose = () => onOpen();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {author && (\r\n        <Dialog\r\n          open={open}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"checkform-dialog\"\r\n          fullWidth\r\n        >\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map(label => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === 0 && (\r\n            <CustomForm\r\n              open={open}\r\n              author={author}\r\n              onOpen={onOpen}\r\n              onNext={handleNext}\r\n            />\r\n          )}\r\n          {activeStep === 1 && (\r\n            <Elements stripe={stripePromise}>\r\n              <CheckoutForm\r\n                open={open}\r\n                author={author}\r\n                amount={amount}\r\n                secret={secret}\r\n                onOpen={onOpen}\r\n                onBack={handleBack}\r\n                onSuccess={onSuccess}\r\n              />\r\n            </Elements>\r\n          )}\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport axios from 'src/utils/axios';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\nimport useAuth from 'src/hooks/useAuth';\n\ninterface HeaderProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 260,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100,\n      left: theme.spacing(1)\n    }\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  },\n  bioBox: {\n    marginLeft: '160px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '120px'\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const location = useLocation();\n  const [isFollow, setIsFollow] = useState(false);\n  const [disable, setDisable] = useState(false);\n\n  useEffect(() => {\n    const follow =\n      profile.followers && user && profile.followers.includes(user._id);\n    const isDisable = user\n      ? user._id !== profile._id\n      : location.pathname !== '/account/profile';\n\n    setDisable(isDisable);\n    setIsFollow(follow);\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, profile]);\n\n  const handleFollow = async () => {\n    const params = { userId: profile._id, isFollow };\n    await axios.put<{ user: User }>(`/account/follow`, params);\n    setIsFollow(!isFollow);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        {!disable && (\n          <Button\n            className={classes.changeButton}\n            variant=\"contained\"\n            startIcon={<AddPhotoIcon />}\n          >\n            Change Cover\n          </Button>\n        )}\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box className={classes.bioBox} mt={1}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n            <Hidden smDown>\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {profile.bio}\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box flexGrow={1} />\n          {!disable ? (\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/account/setting\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Edit Profile\n            </Button>\n          ) : (\n            <>\n              {user && (\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  className={classes.action}\n                  onClick={handleFollow}\n                >\n                  {isFollow ? 'Unfollow' : 'Follow'}\n                </Button>\n              )}\n            </>\n          )}\n        </Box>\n        <Hidden mdUp>\n          <Box textAlign=\"center\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from '../CustomIcon';\nimport { PostWithAuthor } from 'src/types/post';\nimport StripeCheckout from 'src/components/PaymentIntent';\nimport useAuth from 'src/hooks/useAuth';\n\ninterface ReactionsProps {\n  className?: string;\n  author: boolean;\n  post: PostWithAuthor;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  likedIcon: {\n    display: 'flex',\n    height: 'inherit',\n    width: 'inherit'\n  },\n  commentIcon: {\n    color: colors.grey[500]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  const handleOpen = (): void => setOpen(!open);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {author && (\n        <IconButton onClick={handleLike} disabled={author}>\n          <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n        </IconButton>\n      )}\n      {!author && (\n        <>\n          {isLiked ? (\n            <Tooltip title=\"Unlike\">\n              <IconButton\n                className={classes.likedButton}\n                onClick={handleUnlike}\n              >\n                <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      {user._id !== post.author._id && (\n        <IconButton onClick={handleOpen}>\n          <AttachMoneyIcon fontSize=\"small\" />\n        </IconButton>\n      )}\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n      {open && (\n        <StripeCheckout\n          open={open}\n          postId={post._id}\n          onOpen={handleOpen}\n          onSuccess={handleOpen}\n        />\n      )}\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default Reactions;\n","import React, { useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { PostWithAuthor } from 'src/types/post';\nimport Reactions from './Reactions';\nimport { Theme } from 'src/theme';\n\ninterface PostOverViewCardProps {\n  className?: string;\n  author: boolean;\n  post: PostWithAuthor;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst PostOverViewCard: FC<PostOverViewCardProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={typeof post.author !== 'string' && post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {typeof post.author !== 'string' && post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={1} className={classes.title}>\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to={'/posts/public/' + post.slug}\n            variant=\"h3\"\n          >\n            {post.title}\n          </Link>\n        </Box>\n        <Box mt={2} pb={2} px={3}>\n          <Reactions post={post} author={author} />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostOverViewCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default PostOverViewCard;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors,\n  makeStyles,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {\n  Hash as HashIcon,\n  MessageCircle as MessageCircleIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport { User, Status } from 'src/types/user';\n\ninterface AboutProps {\n  className?: string;\n  profile: User;\n}\n\nconst initialStatus = {\n  published: 0,\n  pending: 0,\n  comments: 0,\n  tags: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  blueAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  redAvatar: {\n    backgroundColor: colors.red[600]\n  },\n  cardContent: {\n    paddingTop: 0\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response: any;\n\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/status');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/status'\n        );\n      }\n      setStatus(response.data.status);\n    };\n    fetchData();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const disable = user && user.email !== profile.email;\n    setDisabled(disable ?? true);\n  }, [user, profile]);\n\n  const handleClick = () => history.push('/posts/new');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box mt={2}>\n        <Card>\n          <CardHeader title=\"Profile Status\" />\n          <Divider />\n          <CardContent className={classes.cardContent}>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <DescriptionOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.published} posts published`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n                {!disabled && (\n                  <Chip\n                    color=\"secondary\"\n                    size=\"small\"\n                    label=\"Contribute\"\n                    onClick={handleClick}\n                  />\n                )}\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <MoreHorizIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.pending} posts pended`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <MessageCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.comments} comments written`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <HashIcon size={22} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.tags} tag followed`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, { useCallback, useEffect, useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\n\ninterface PostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Recent Comments\" />\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostOverViewCard from 'src/components/PostOverViewCard';\nimport { PostWithAuthor } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport About from './About';\nimport Posts from './Posts';\nimport useAuth from 'src/hooks/useAuth';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Profile: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { user } = useAuth();\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\n  const [isAuthor, setIsAuthor] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(0);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: profile.email, page: page ? page : 0, user };\n      const response = await axios.post<{\n        posts: PostWithAuthor[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n        setIsAuthor(response.data.isAuthor);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page, profile, user]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <About profile={profile} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          {posts.map(post => (\n            <Box mt={2} key={post._id}>\n              <PostOverViewCard post={post} author={isAuthor} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Profile;\n","import React, { useCallback, useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Box, Container, Divider, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Profile from './Profile';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const isMountedRef = useIsMountedRef();\n  const [profile, setProfile] = useState<User | null>(null);\n\n  const getPosts = useCallback(async () => {\n    let response: any;\n\n    try {\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/about');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/about'\n        );\n      }\n\n      if (isMountedRef.current) {\n        setProfile(response.data.user);\n      }\n    } catch (err) {\n      history.push('/404');\n    }\n  }, [isMountedRef, location.pathname, history]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box py={3} pb={6}>\n          <Profile profile={profile} />\n        </Box>\n        <Divider />\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}