{"version":3,"sources":["views/post/PostCreateView/PostDetails.tsx","components/QuillEditor.tsx","views/post/PostCreateView/PostContent.tsx","views/post/PostCreateView/PostDisclosure.tsx","views/post/PostCreateView/PostReview/index.tsx","views/post/PostCreateView/index.tsx"],"names":["useStyles","makeStyles","theme","root","addTab","marginLeft","spacing","tag","datePicker","initialTag","symbol","securityName","PostDetails","className","post","onPost","onNext","rest","classes","useState","options","setOptions","search","setSearch","setTag","useEffect","a","axios","get","IEX_BASE_URL","params","token","env","IEX_TOKEN","response","data","length","map","item","fecthData","handleChangeTag","event","value","val","split","initialValues","title","tags","submit","validationSchema","Yup","shape","min","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","console","log","trim","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","clsx","onKeyPress","e","key","preventDefault","Typography","variant","color","Box","mt","TextField","error","Boolean","fullWidth","helperText","label","name","placeholder","onBlur","onChange","display","alignItems","Autocomplete","freeSolo","disableClearable","option","renderInput","InputProps","style","width","target","IconButton","onClick","SvgIcon","i","Chip","onDelete","newTags","filter","t","FormHelperText","flexGrow","Button","disabled","type","size","defaultProps","borderLeft","borderTop","borderRight","borderBottom","palette","divider","secondary","main","stroke","text","primary","padding","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","fontFamily","typography","fontSize","QuillEditor","editorContainer","marginTop","editor","height","PostContent","onBack","content","setContent","setError","Paper","PostDisclosure","disclosure","setDisclosure","typeOption","marginBottom","stepButton","chip","box","breakpoints","down","colors","grey","PostReview","onComplete","Grid","container","xs","md","parse","Divider","steps","icon","BriefcaseIcon","FileIcon","GavelIcon","RateReviewIcon","initialPost","slug","CustomStepConnector","withStyles","vertical","line","borderColor","StepConnector","useCustomStepIconStyles","active","contrastText","completed","CustomStepIcon","Icon","Avatar","dark","minHeight","paddingTop","paddingBottom","avatar","red","stepper","PostCreateView","activeStep","setActiveStep","setCompleted","setPost","handleNext","prevActiveStep","handleBack","handleComplete","specialReg","replace","join","toLowerCase","handlePost","prevState","Page","Container","maxWidth","mb","Card","CardContent","mx","justifyContent","align","component","RouterLink","to","Stepper","connector","orientation","step","Step","StepLabel","StepIconComponent","p"],"mappings":"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","file":"static/js/22.c000c92a.chunk.js","sourcesContent":["import React, { useState, useEffect, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport {\n  Box,\n  Button,\n  Chip,\n  FormHelperText,\n  IconButton,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Plus as PlusIcon } from 'react-feather';\nimport { Theme } from 'src/theme';\nimport { Post, Tag } from 'src/types/post';\nimport { IEX_BASE_URL } from 'src/constants';\nimport { env } from 'src/config';\n\ninterface PostDetailsProps {\n  className?: string;\n  post?: Post;\n  onPost?: (param: any) => void;\n  onNext?: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  addTab: {\n    marginLeft: theme.spacing(2)\n  },\n  tag: {\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst initialTag: Tag = {\n  symbol: '',\n  securityName: ''\n};\n\nconst PostDetails: FC<PostDetailsProps> = ({\n  className,\n  post,\n  onPost,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [options, setOptions] = useState<Tag[]>([]);\n  const [search, setSearch] = useState<string>('');\n  const [tag, setTag] = useState<Tag>(initialTag);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      const response = await axios.get<Tag[]>(\n        `${IEX_BASE_URL}/search/${search}`,\n        {\n          params: { token: env.IEX_TOKEN }\n        }\n      );\n\n      if (response.data && response.data.length > 0) {\n        let data = response.data.map(item => {\n          return { symbol: item.symbol, securityName: item.securityName };\n        });\n        setOptions(data);\n      }\n    };\n    search !== '' ? fecthData() : setOptions([]);\n  }, [search]);\n\n  const handleChangeTag = (event, value) => {\n    const val = value.split(': ');\n    setTag({ symbol: val[0], securityName: val[1] });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: post.title || '',\n        tags: post.tags || [],\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string()\n          .min(3, 'Must be at least 3 characters')\n          .max(255)\n          .required('Required'),\n        tags: Yup.array().required()\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          console.log(values.tags);\n          onPost({ title: values.title.trim(), tags: values.tags });\n          setStatus({ success: true });\n          setSubmitting(false);\n\n          if (onNext) {\n            onNext();\n          }\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          onKeyPress={e => {\n            e.key === 'Enter' && e.preventDefault();\n          }}\n          {...rest}\n        >\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Details\n          </Typography>\n          <Box mt={2}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              Do not spam tags. <br />\n              Title should not be spammy. <br />\n              Title and article contents may be subject to grammatical and\n              punctual editing to ensure quality.\n            </Typography>\n          </Box>\n          <Box mt={2}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Article Title\"\n              name=\"title\"\n              placeholder=\"Please type article title.\"\n              value={values.title}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              variant=\"outlined\"\n            />\n            <Box mt={3} display=\"flex\" alignItems=\"center\">\n              <Autocomplete\n                freeSolo\n                disableClearable\n                options={options.map(\n                  option => option.symbol + ': ' + option.securityName\n                )}\n                onChange={handleChangeTag}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') {\n                    if (tag.symbol === '' || tag.securityName === '') {\n                      return;\n                    }\n                    setFieldValue('tags', [...values.tags, tag]);\n                    setTag(initialTag);\n                    setSearch('');\n                  }\n                }}\n                value={search}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    name=\"tags\"\n                    label=\"Article Tags\"\n                    placeholder=\"Please choose at least one tag.\"\n                    variant=\"outlined\"\n                    InputProps={{\n                      ...params.InputProps\n                    }}\n                    style={{ width: '52vw' }}\n                    onChange={event => setSearch(event.target.value)}\n                  />\n                )}\n              />\n              <IconButton\n                className={classes.addTab}\n                onClick={() => {\n                  if (tag.symbol === '' || tag.securityName === '') {\n                    return;\n                  }\n                  setFieldValue('tags', [...values.tags, tag]);\n                  setTag(initialTag);\n                  setSearch('');\n                }}\n              >\n                <SvgIcon>\n                  <PlusIcon />\n                </SvgIcon>\n              </IconButton>\n            </Box>\n            <Box mt={2}>\n              {values.tags.map((tag, i) => (\n                <Chip\n                  variant=\"outlined\"\n                  key={i}\n                  label={tag.symbol}\n                  className={classes.tag}\n                  onDelete={() => {\n                    const newTags = values.tags.filter(\n                      t =>\n                        t.symbol !== tag.symbol &&\n                        t.securityName !== tag.securityName\n                    );\n                    setFieldValue('tags', newTags);\n                  }}\n                />\n              ))}\n            </Box>\n            {Boolean(touched.tags && errors.tags) && (\n              <Box mt={2}>\n                <FormHelperText error>{errors.tags}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Box mt={6} display=\"flex\">\n            <Box flexGrow={1} />\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              Next\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nPostDetails.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func\n};\n\nPostDetails.defaultProps = {\n  onPost: () => {},\n  onNext: () => {}\n};\n\nexport default PostDetails;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\n\ninterface QuillEditorProps {\n  className?: string;\n  [key: string]: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  }\n}));\n\nconst QuillEditor: FC<QuillEditorProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    /* @ts-ignore */\n    <ReactQuill className={clsx(classes.root, className)} {...rest} />\n  );\n};\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostContentProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  }\n}));\n\nconst PostContent: FC<PostContentProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [content, setContent] = useState<string>(post.content || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setContent(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ content: content.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Content\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Do not advise people to make any financial decisions. <br />\n          Plagiarism is not tolerated.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={content}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostContent.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostContent.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostContent;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostDisclosureProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 300\n    },\n    '& .ql-toolbar': {\n      '& .ql-formats > .ql-picker': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\nconst PostDisclosure: FC<PostDisclosureProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [disclosure, setDisclosure] = useState<string>(post.disclosure || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setDisclosure(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ disclosure: disclosure.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Disclosure\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Let the readers know if you hold or do not hold any position in the\n          companies you are talking about. Make sure to also let readers know if\n          you are receiving compensation for the article. You may receive one\n          from us if your article is approved and you may receive tips from\n          readers.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={disclosure}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostDisclosure.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostDisclosure.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostDisclosure;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport parse from 'html-react-parser';\nimport {\n  Box,\n  FormHelperText,\n  Typography,\n  Button,\n  Grid,\n  Chip,\n  Divider,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Post, Tag } from 'src/types/post';\n\ninterface PostReviewProps {\n  className?: string;\n  post?: Post;\n  onBack?: () => void;\n  onComplete?: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  typeOption: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  chip: {\n    marginLeft: theme.spacing(1)\n  },\n  box: {\n    padding: theme.spacing(7),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  content: {\n    fontFamily: theme.typography.fontFamily,\n    marginBottom: theme.spacing(2)\n  },\n  disclosure: {\n    fontFamily: theme.typography.fontFamily,\n    color: colors.grey[500],\n    fontSize: '0.9rem',\n  }\n}));\n\nconst PostReview: FC<PostReviewProps> = ({\n  className,\n  post,\n  onBack,\n  onComplete,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n\n      if (onComplete) {\n        onComplete();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Review\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Make sure everything looks good.\n        </Typography>\n      </Box>\n      <Box mt={3} border={1} className={classes.box}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={10}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {post.title}\n            </Typography>\n            <Box mt={3}>\n              <Box mt={1}>\n                {post.tags.map((tag: Tag) => (\n                  <Chip\n                    key={tag.symbol}\n                    variant=\"outlined\"\n                    label={tag.symbol}\n                    className={classes.chip}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3} className={classes.content}>\n          {parse(post.content)}\n        </Box>\n        <Divider />\n        <Box mt={3} className={classes.disclosure}>\n          {parse(post.disclosure)}\n        </Box>\n      </Box>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{error}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Complete\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostReview.propTypes = {\n  className: PropTypes.string,\n  onComplete: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostReview.defaultProps = {\n  onComplete: () => {},\n  onBack: () => {}\n};\n\nexport default PostReview;\n","import React, { useState, FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Step,\n  StepConnector,\n  StepLabel,\n  Stepper,\n  Typography,\n  colors,\n  makeStyles,\n  withStyles\n} from '@material-ui/core';\nimport {\n  Star as StarIcon,\n  Briefcase as BriefcaseIcon,\n  File as FileIcon\n} from 'react-feather';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport axios from 'src/utils/axios';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\nimport Page from 'src/components/Page';\nimport PostDetails from './PostDetails';\nimport PostContent from './PostContent';\nimport PostDisclosure from './PostDisclosure';\nimport PostReview from './PostReview';\n\ninterface CustomStepIconProps {\n  active?: boolean;\n  completed?: boolean;\n  icon: number;\n}\n\nconst steps = [\n  {\n    label: 'Details',\n    icon: BriefcaseIcon\n  },\n  {\n    label: 'Content',\n    icon: FileIcon\n  },\n  {\n    label: 'Disclosure',\n    icon: GavelIcon\n  },\n  {\n    label: 'Review',\n    icon: RateReviewIcon\n  }\n];\n\nconst initialPost = {\n  slug: '',\n  title: '',\n  content: '',\n  disclosure: '',\n  tags: [],\n  \n};\n\nconst CustomStepConnector = withStyles((theme: Theme) => ({\n  vertical: {\n    marginLeft: 19,\n    padding: 0\n  },\n  line: {\n    borderColor: theme.palette.divider\n  }\n}))(StepConnector);\n\nconst useCustomStepIconStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  active: {\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: theme.shadows[10],\n    color: theme.palette.secondary.contrastText\n  },\n  completed: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst CustomStepIcon: FC<CustomStepIconProps> = ({\n  active,\n  completed,\n  icon\n}) => {\n  const classes = useCustomStepIconStyles();\n\n  const Icon = steps[icon - 1].icon;\n\n  return (\n    <Avatar\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed\n      })}\n    >\n      <Icon size=\"20\" />\n    </Avatar>\n  );\n};\n\nCustomStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  avatar: {\n    backgroundColor: colors.red[600]\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  }\n}));\n\nconst PostCreateView: FC = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [completed, setCompleted] = useState<boolean>(false);\n  const [post, setPost] = useState<Post>(initialPost);\n\n  const handleNext = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleComplete = async (): Promise<void> => {\n    const specialReg = /[^\\w\\s]/gi;\n    const slug = post.title\n      .replace(specialReg, '')\n      .replace('/', '-')\n      .split(' ')\n      .join('-')\n      .trim()\n      .toLowerCase();\n\n    await axios.post<{ post: Post }>('/posts/new', { ...post, slug });\n    setCompleted(true);\n  };\n\n  const handlePost = (values): void => {\n    setPost(prevState => ({ ...prevState, ...values }));\n  };\n\n  return (\n    <Page className={classes.root} title=\"Project Create\">\n      <Container maxWidth=\"lg\">\n        <Box mb={3}>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Post New Article\n          </Typography>\n        </Box>\n        {!completed ? (\n          <Paper>\n            <Grid container>\n              <Grid item xs={12} md={3}>\n                <Stepper\n                  activeStep={activeStep}\n                  className={classes.stepper}\n                  connector={<CustomStepConnector />}\n                  orientation=\"vertical\"\n                >\n                  {steps.map(step => (\n                    <Step key={step.label}>\n                      <StepLabel StepIconComponent={CustomStepIcon}>\n                        {step.label}\n                      </StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n              </Grid>\n              <Grid item xs={12} md={9}>\n                <Box p={3}>\n                  {activeStep === 0 && (\n                    <PostDetails\n                      post={post}\n                      onPost={handlePost}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 1 && (\n                    <PostContent\n                      post={post}\n                      onPost={handlePost}\n                      onBack={handleBack}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 2 && (\n                    <PostDisclosure\n                      post={post}\n                      onPost={handlePost}\n                      onBack={handleBack}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 3 && (\n                    <PostReview\n                      post={post}\n                      onBack={handleBack}\n                      onComplete={handleComplete}\n                    />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n        ) : (\n          <Card>\n            <CardContent>\n              <Box maxWidth={450} mx=\"auto\">\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <Avatar className={classes.avatar}>\n                    <StarIcon />\n                  </Avatar>\n                </Box>\n                <Box mt={2}>\n                  <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                    You are all done!\n                  </Typography>\n                </Box>\n                <Box mt={2}>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    align=\"center\"\n                  >\n                    Thank you for submitting your contribution to us. Your\n                    article is now in review and we will come back to you with\n                    our final decision.\n                  </Typography>\n                </Box>\n                <Box mt={2} display=\"flex\" justifyContent=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    component={RouterLink}\n                    to=\"/account/profile\"\n                  >\n                    Back to Profile\n                  </Button>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </Page>\n  );\n};\n\nexport default PostCreateView;\n"],"sourceRoot":""}