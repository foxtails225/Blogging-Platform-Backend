{"version":3,"sources":["views/symbol/SymbolView/Header/HighchartsWrapper.tsx","views/symbol/SymbolView/Header/index.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/Financials/index.tsx","views/symbol/SymbolView/News.tsx","views/symbol/SymbolView/index.tsx"],"names":["useStyles","makeStyles","theme","root","HighchartsWrapper","className","path","rest","classes","useTheme","useState","source","setSource","mobileDevice","useMediaQuery","breakpoints","down","darkUnica","Highcharts","fetchHistory","value","type","a","axios","get","params","response","data","useEffect","clsx","length","highcharts","options","title","text","undefined","chart","height","legend","enabled","xAxis","min","max","minRange","time","useUTC","rangeSelector","buttons","count","events","click","this","selected","allButtonsEnabled","series","name","threshold","pointInterval","tooltip","valueDecimals","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","colors","color","setOpacity","initialColor","quote","green","preQuote","action","backgroundColor","palette","common","white","image","width","maxHeight","item","padding","spacing","textAlign","up","borderRight","divider","borderBottom","label","marginLeft","overline","marginTop","Header","setName","setQuote","setColor","quoteData","latestPrice","change","changePercent","extendedPrice","extendedChange","extendedChangePercent","companyName","fecthQuote","quoteColor","red","preQuoteColor","Grid","alignItems","container","justify","md","xs","Typography","variant","display","style","Math","abs","Box","mt","chips","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","picker","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","useCallback","current","Card","CardHeader","Divider","Table","TableBody","map","post","TableRow","hover","key","_id","TableCell","Avatar","alt","src","author","avatar","component","RouterLink","to","getInitials","ml","Link","slug","flexGrow","Chip","find","p","justifyContent","Button","size","endIcon","collapse","textOverflow","overflow","box","ProfileGlance","profile","setProfile","expanded","setExpanded","fetchData","Paper","my","lg","description","onClick","Hidden","mdDown","align","sector","industry","numeral","employees","format","address","city","state","zip","country","phone","displayType","CEO","lgUp","gutterBottom","href","website","target","KeyGlance","avg10Volume","week52high","week52low","marketcap","sharesOutstanding","beta","paddingTop","Opinions","Container","maxWidth","minHeight","Financials","marginRight","content","paddingBottom","chip","margin","News","results","setResults","amount","setAmount","CardContent","List","result","id","ListItem","disableGutters","image_url","ListItemText","primary","news_url","primaryTypographyProps","secondary","tickers","slice","ticker","i","date","disabled","fullWidth","tabs","background","dark","SymbolView","location","useLocation","setPath","currentTab","setCurrentTab","pathname","split","Page","Tabs","onChange","event","scrollButtons","textColor","tab","Tab","py","pb"],"mappings":"uYAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,OAqJOC,EAlJuC,SAAC,GAIhD,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,KACGC,EACC,oCACEC,EAAUR,IACVE,EAAQO,cAFV,EAGwBC,mBAAgB,IAHxC,mBAGGC,EAHH,KAGWC,EAHX,KAIEC,EAAeC,YAAcZ,EAAMa,YAAYC,KAAK,OAC1DC,IAAUC,KAEV,IAAMC,EAAY,uCAAG,WAAOC,EAAeC,GAAtB,eAAAC,EAAA,sEACIC,IAAMC,IAAN,uBAAmCJ,GAAS,CACjEK,OAAQ,CAAEJ,UAFO,OACbK,EADa,OAInBd,EAAUc,EAASC,MAJA,2CAAH,wDAWlB,OAJAC,qBAAU,WACRtB,GAAQa,EAAab,EAAM,QAC1B,CAACA,IAGF,uCAAKD,UAAWwB,YAAKrB,EAAQL,KAAME,IAAgBE,GAChDI,EAAOmB,OAAS,GACf,kBAAC,IAAD,CACEC,WAAYb,IACZc,QAAS,CACPC,MAAO,CACLC,UAAMC,GAERC,MAAO,CAAEC,OAAQxB,EAAe,MAAQ,OACxCyB,OAAQ,CACNC,SAAS,GAEXC,MAAO,CACLnB,KAAM,WACNoB,IAAK9B,EAAO,GAAG,GACf+B,IAAK/B,EAAOA,EAAOmB,OAAS,GAAG,GAC/Ba,SAAU,OAEZC,KAAM,CACJC,QAAQ,GAEVC,cAAe,CACbC,QAAS,CACP,CACE1B,KAAM,UACN2B,MAAO,EACPd,KAAM,KACNe,OAAQ,CAENC,MAAO,WAEL/B,EAAab,EAAM,cAIzB,CACEe,KAAM,KACN2B,MAAO,EACPd,KAAM,KACNe,OAAQ,CACNC,MAAO,WAEL/B,EAAab,EAAM,SAIzB,CACEe,KAAM,KACN2B,MAAO,EACPd,KAAM,KACNe,OAAQ,CACNC,MAAO,WAEL/B,EAAab,EAAM6C,KAAKjB,SAI9B,CACEb,KAAM,KACN2B,MAAO,EACPd,KAAM,KACNe,OAAQ,CACNC,MAAO,WAEL/B,EAAab,EAAM6C,KAAKjB,SAI9B,CACEb,KAAM,MACNa,KAAM,MACNe,OAAQ,CACNC,MAAO,WAEL/B,EAAab,EAAM,WAK3B8C,SAAU,EACVb,SAAS,EACTc,mBAAmB,GAErBC,OAAQ,CACN,CACEC,KAAMjD,GAAc,GACpBqB,KAAMhB,EACN6C,UAAW,KACXC,cAAe,KACfC,QAAS,CACPC,cAAe,GAEjBC,UAAW,CACTC,eAAgB,CACdC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAENC,MAAO,CACL,CAAC,EAAGhD,IAAWiD,aAAaC,OAAO,IACnC,CACE,EACAlD,IAAWmD,MAAMnD,IAAWiD,aAAaC,OAAO,IAC7CE,WAAW,GACX9C,IAAI,kBCjIvB+C,EAAsB,CAC1BC,MAAOJ,IAAOK,MAAM,KACpBC,SAAUN,IAAOK,MAAM,MAGnBzE,EAAYC,aAAW,SAACC,GAAD,YAAmB,CAC9CC,KAAM,GACNwE,OAAQ,CACNC,gBAAiB1E,EAAM2E,QAAQC,OAAOC,OAExCC,MAAO,CACLC,MAAO,OACPC,UAAW,KAEbC,MAAI,GACFC,QAASlF,EAAMmF,QAAQ,GACvBC,UAAW,UAFT,cAGDpF,EAAMa,YAAYwE,GAAG,MAAQ,CAC5B,uBAAwB,CACtBC,YAAY,aAAD,OAAetF,EAAM2E,QAAQY,YAL1C,cAQDvF,EAAMa,YAAYC,KAAK,MAAQ,CAC9B,uBAAwB,CACtB0E,aAAa,aAAD,OAAexF,EAAM2E,QAAQY,YAV3C,GAcJE,MAAO,CACLC,WAAY1F,EAAMmF,QAAQ,IAE5BQ,SAAU,CACRC,UAAW5F,EAAMmF,QAAQ,QA+FdU,EA3FiB,SAAC,GAAkC,IAAhC1F,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAASC,EAAW,oCAC1DC,EAAUR,IADgD,EAExCU,mBAAiB,IAFuB,mBAEzD6C,EAFyD,KAEnDyC,EAFmD,OAGtCtF,qBAHsC,mBAGzD8D,EAHyD,KAGlDyB,EAHkD,OAItCvF,mBAAgB6D,GAJsB,mBAIzDF,EAJyD,KAIlD6B,EAJkD,KAuChE,OAjCAtE,qBAAU,WACHtB,GAEW,uCAAG,WAAOc,GAAP,6BAAAE,EAAA,sEACMC,IAAMC,IAAN,uBAAiCJ,IADvC,QACXM,EADW,QAGJC,OACPwE,EAAY,CACdC,YAAW,UAAE1E,EAASC,KAAKyE,mBAAhB,QAA+B,MAC1CC,OAAM,UAAE3E,EAASC,KAAK0E,cAAhB,QAA0B,MAChCC,cAAa,UAAE5E,EAASC,KAAK2E,qBAAhB,QAAiC,MAC9CC,cAAa,UAAE7E,EAASC,KAAK4E,qBAAhB,QAAiC,MAC9CC,eAAc,UAAE9E,EAASC,KAAK6E,sBAAhB,QAAkC,MAChDC,sBAAqB,UAAE/E,EAASC,KAAK8E,6BAAhB,QAAyC,OAGhER,EAASE,GACTH,EAAQ5E,EAAQ,MAAQM,EAASC,KAAK+E,cAdvB,2CAAH,qDAkBhBC,CAAWrG,KACV,CAACA,IAEJsB,qBAAU,WACR,GAAK4C,EAAL,CACA,IAAIoC,EAAapC,EAAM6B,QAAU,EAAIjC,IAAOK,MAAM,KAAOL,IAAOyC,IAAI,KAChEC,EACFtC,EAAMgC,gBAAkB,EAAIpC,IAAOK,MAAM,KAAOL,IAAOyC,IAAI,KAE7DX,EAAS,CAAE1B,MAAOoC,EAAYlC,SAAUoC,OACvC,CAACtC,IAGF,uCAAKnE,UAAWwB,YAAKrB,EAAQL,KAAME,IAAgBE,GACjD,kBAACwG,EAAA,EAAD,CAAMC,WAAW,SAASC,WAAS,EAACC,QAAQ,gBAAgB7B,QAAS,GACnE,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,EAACgC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKjD,MAAM,cAAckD,QAAQ,UAArD,UACMhE,EADN,QAGCiB,GACC,kBAAC6C,EAAA,EAAD,CACEC,QAAQ,QACRC,QAAQ,SACRC,MAAO,CAAEnD,MAAOA,EAAMG,QAHxB,IAKIA,EAAM4B,YALV,IAKwB5B,EAAM6B,QAAU,EAAI,IAAM,IALlD,IAM2B,kBAAjB7B,EAAM6B,OACVoB,KAAKC,IAAIlD,EAAM6B,QACf7B,EAAM6B,OAAQ,IARpB,IASI7B,EAAM8B,eAAiB,GAAK,IAC7B9B,EAAM8B,cAVT,MAaF,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAAYjD,MAAM,iBAAtC,iBAEGG,GACC,kBAAC6C,EAAA,EAAD,CACEC,QAAQ,QACRC,QAAQ,SACRC,MAAO,CAAEnD,MAAOA,EAAMK,WAHxB,IAKIF,EAAM+B,cALV,IAK0B/B,EAAMgC,gBAAkB,EAAI,IAAM,IAL5D,IAMmC,kBAAzBhC,EAAMgC,eACViB,KAAKC,IAAIlD,EAAMgC,gBACfhC,EAAMgC,eAAgB,IAR5B,IASIhC,EAAMiC,uBAAyB,GAAK,IACrCjC,EAAMiC,sBAVT,OAcJ,kBAACkB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAmBtH,KAAMA,S,kKC/F/BuH,GAAwB,CAC5B,CAAEtE,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,UAAWrB,KAAM,WACzB,CAAEqB,KAAM,aAAcrB,KAAM,eAGxBlC,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACN6E,MAAO,CACL8C,WAAY,EACZzF,OAAQ,GACR4C,MAAO,IAET8C,cAAe,CACbC,WAAY9H,EAAM+H,WAAWC,kBAE/B9G,MAAO,CACLiD,MAAOD,IAAOK,MAAM,KACpBuD,WAAY9H,EAAM+H,WAAWC,kBAE/BC,OAAQ,OA8FKC,GA3FqB,SAAC,GAAkC,IAAhC/H,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAASC,EAAW,oCAC9DC,EAAUR,KACVqI,EAAeC,cAF+C,EAG1C5H,mBAA2B,IAHe,mBAG7D6H,EAH6D,KAGtDC,EAHsD,KAK9DC,EAAWC,sBAAW,sBAAC,4BAAApH,EAAA,yDACtBhB,EADsB,0EAIFiB,IAAMC,IAAN,2BACDlB,IALG,OAInBoB,EAJmB,OAQrB2G,EAAaM,SACfH,EAAS9G,EAASC,KAAK4G,OATA,gDAYzBC,EAAS,IAZgB,yDAc1B,CAACH,EAAc/H,IAMlB,OAJAsB,qBAAU,WACR6G,MACC,CAACA,IAGF,kBAACG,EAAA,EAAD,eAAMvI,UAAWwB,YAAKrB,EAAQL,KAAME,IAAgBE,GAClD,kBAACsI,EAAA,EAAD,CAAY5G,MAAM,cAClB,kBAAC6G,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACnB,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGT,EAAMU,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,IAAKH,EAAKI,KACxB,kBAACC,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CAAKJ,QAAQ,OAAOP,WAAW,UAC7B,kBAACwC,EAAA,EAAD,CACEC,IAAI,SACJC,IAAKR,EAAKS,OAAOC,OACjBC,UAAWC,IACXC,GAAI,UAAYb,EAAKS,OAAOpG,MAE3ByG,YAAYd,EAAKS,OAAOpG,OAE3B,kBAACoE,EAAA,EAAD,CAAKsC,GAAI,GACP,kBAACC,EAAA,EAAD,CACE7F,MAAM,cACNwF,UAAWC,IACXC,GAAI,iBAAmBb,EAAKiB,KAC5B7C,QAAQ,MAEP4B,EAAKjH,QAGV,kBAAC0F,EAAA,EAAD,CAAKyC,SAAU,IACf,kBAACC,EAAA,EAAD,CACE/C,QAAQ,WACRjD,MAAM,UACNsB,MACEkC,GAAMyC,MAAK,SAAAnF,GAAI,OAAIA,EAAK5B,OAAS2F,EAAKf,UAAQjG,KAEhD7B,UAAWG,EAAQ2H,mBAUrC,kBAACR,EAAA,EAAD,CAAK4C,EAAG,EAAGhD,QAAQ,OAAOiD,eAAe,YACvC,kBAACC,EAAA,EAAD,CACEZ,UAAWC,IACXY,KAAK,QACLX,GAAG,IACHY,QAAS,kBAAC,IAAD,OAJX,c,sDC3GF3K,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNyK,SAAU,CACRC,aAAc,WACdC,SAAU,SACVvD,QAAS,cACT,qBAAsB,WACtB,qBAAsB,KAExBwD,IAAI,aACF3F,QAASlF,EAAMmF,QAAQ,IACtBnF,EAAMa,YAAYC,KAAK,MAAQ,CAC9BoE,QAASlF,EAAMmF,QAAQ,SA+Kd2F,GA1K+B,SAAC,GAIxC,IAAD,EAHJ3K,EAGI,EAHJA,UACAC,EAEI,EAFJA,KACGC,EACC,oCACEC,EAAUR,KADZ,EAE0BU,mBAAkB,MAF5C,mBAEGuK,EAFH,KAEYC,EAFZ,OAG4BxK,oBAAkB,GAH9C,mBAGGyK,EAHH,KAGaC,EAHb,KAKJxJ,qBAAU,WAQRtB,GAPe,uCAAG,4BAAAgB,EAAA,sEACOC,IAAMC,IAAN,yBAAqClB,IAD5C,QACVoB,EADU,QAGHC,MACXuJ,EAAWxJ,EAASC,MAJN,2CAAH,oDAOP0J,KACP,CAAC/K,IAIJ,OACE,kBAACgL,GAAA,EAAD,eAAOjL,UAAWwB,YAAKrB,EAAQL,KAAME,IAAgBE,GACnD,kBAAC,IAAD,KACE,kBAACoH,EAAA,EAAD,CAAKtH,UAAWG,EAAQuK,KACtB,kBAAChE,EAAA,EAAD,CAAME,WAAS,EAACC,QAAQ,iBACtB,kBAACH,EAAA,EAAD,CAAM5B,MAAI,GACR,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKjD,MAAM,eAA/B,qBAKH4G,GACC,oCACE,kBAACtD,EAAA,EAAD,CAAK4D,GAAI,GACP,kBAACxE,EAAA,EAAD,CAAME,WAAS,EAACC,QAAQ,gBAAgB7B,QAAS,GAC9C,IACD,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,GAAIpE,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAM,cACNhE,UAAWwB,aAAMsJ,GAAY3K,EAAQoK,WAEpCK,EAAQQ,aAEX,kBAACvB,EAAA,EAAD,CAAMwB,QA1BH,kBAAMN,GAAaD,KA0BtB,QACQA,EAAW,OAAS,SAG9B,kBAACQ,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC7E,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,EAAGpE,GAAI,IACpB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,UACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQa,SAGb,kBAAC3C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,YACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQc,WAGb,kBAAC5C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,aACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQf,EAAQgB,WAAWC,OAAO,YAM7C,kBAACnF,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,EAAGpE,GAAI,IACpB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,WACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQkB,QADX,IACqBlB,EAAQmB,KAD7B,IACoCnB,EAAQoB,MAAO,IAChDpB,EAAQqB,IAFX,IAEiBrB,EAAQsB,UAG3B,kBAACpD,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQuB,OACP,kBAAC,KAAD,CACEpL,MAAO6J,EAAQuB,MACfC,YAAa,OACbP,OAAO,wBAKf,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,OACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UAAUZ,EAAQyB,UAM7C,kBAACf,GAAA,EAAD,CAAQgB,MAAI,GACV,kBAAC5F,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,GAAIpE,GAAI,IACrB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,UACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQa,SAGb,kBAAC3C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,YACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQc,WAGb,kBAAC5C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,aACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQf,EAAQgB,WAAWC,OAAO,SAGvC,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,WACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQkB,QADX,IACqBlB,EAAQmB,KAD7B,IACoCnB,EAAQoB,MAAO,IAChDpB,EAAQqB,IAFX,IAEiBrB,EAAQsB,UAG3B,kBAACpD,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UAAjB,IACIZ,EAAQuB,QAGd,kBAACrD,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,OACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UAAUZ,EAAQyB,YAQjD,kBAAC/E,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACP,EAAA,EAAD,CAAYuF,cAAY,EAACtF,QAAQ,KAAKjD,MAAM,eAC1C,kBAAC6F,EAAA,EAAD,CAAM2C,KAAI,UAAE5B,EAAQ6B,eAAV,QAAqB,IAAKC,OAAO,SACxC9B,EAAQ6B,gBC9KvB9M,GAAYC,aAAW,iBAAO,CAClCE,KAAM,OA+EO6M,GA5EuB,SAAC,GAAkC,IAAhC3M,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAASC,EAAW,oCAChEC,EAAUR,KADsD,EAE1CU,mBAAmB,MAFuB,mBAE/DC,EAF+D,KAEvDC,EAFuD,KAiBtE,OAbAgB,qBAAU,WAURtB,GATe,uCAAG,4BAAAgB,EAAA,sEACOC,IAAMC,IAAN,gCACIlB,IAFX,QACVoB,EADU,QAKHC,MACXf,EAAUc,EAASC,MANL,2CAAH,oDASP0J,KACP,CAAC/K,IAGF,kBAACsI,EAAA,EAAD,eAAMvI,UAAWwB,YAAKrB,EAAQL,KAAME,IAAgBE,GAClD,kBAACsI,EAAA,EAAD,CAAY5G,MAAM,cAClB,kBAAC6G,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACnB,EAAA,EAAD,KACGhH,GACC,kBAACoI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,iBACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAOsM,aAAaf,OAAO,SAGxC,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAOuM,YAAYhB,OAAO,YAGvC,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,eACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAOwM,WAAWjB,OAAO,YAGtC,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,cACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAOyM,WAAWlB,OAAO,SAGtC,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,sBACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAO0M,mBAAmBnB,OAAO,SAG9C,kBAAC/C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWsC,MAAM,UAAjB,QACA,kBAACtC,EAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQrL,EAAO2M,MAAMpB,OAAO,kBC7E3ClM,GAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJoN,WAAY,QAwBDC,GApBqB,SAAC,GAAc,IAAZlN,EAAW,EAAXA,KAC/BE,EAAUR,KAEhB,OACE,kBAACyN,EAAA,EAAD,CAAWpN,UAAWG,EAAQL,KAAMuN,UAAU,GAC5C,kBAAC3G,EAAA,EAAD,CAAME,WAAS,EAAC5B,QAAS,GACvB,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,EAAGpE,GAAI,IACpB,kBAAC,GAAD,CAAU9G,KAAMA,KAElB,kBAACyG,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,EAAGpE,GAAI,IACpB,kBAAC,GAAD,CAAW9G,KAAMA,KAEnB,kBAACyG,EAAA,EAAD,CAAM5B,MAAI,EAACqG,GAAI,GAAIpE,GAAI,IACrB,kBAAC,GAAD,CAAe9G,KAAMA,QCtBzBN,GAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJoN,WAAY,GACZI,UAAW,YAoBAC,GAhByB,SAAC,GAAa,EAAXtN,KAAY,IAC/CE,EAAUR,KAEhB,OACE,kBAACyN,EAAA,EAAD,CAAWpN,UAAWG,EAAQL,KAAMuN,UAAU,GAC5C,kBAAC3G,EAAA,EAAD,CAAME,WAAS,EAACC,QAAQ,SAASF,WAAW,SAAS3B,QAAS,GAC5D,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,GACR,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKuC,UAAU,IAAIxF,MAAM,iBAA7C,uB,0CCEJrE,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJoN,WAAY,IAEdvI,MAAM,aACJ3C,OAAQ,OACRwL,YAAa,OACZ3N,EAAMa,YAAYC,KAAK,MAAQ,CAC9BqB,OAAQ,SAGZyL,QAAS,CACPP,WAAY,EACZQ,cAAe,GAEjB5I,KAAK,eACFjF,EAAMa,YAAYC,KAAK,MAAQ,CAC9BuG,QAAS,QACTjC,UAAW,WAGf0I,KAAM,CACJC,OAAQ/N,EAAMmF,QAAQ,SAuGX6I,GAnGa,SAAC,GAAc,IAAZ5N,EAAW,EAAXA,KACvBE,EAAUR,KADwB,EAEVU,mBAAsB,IAFZ,mBAEjCyN,EAFiC,KAExBC,EAFwB,OAGZ1N,mBAAiB,IAHL,mBAGjC2N,EAHiC,KAGzBC,EAHyB,KAKxC1M,qBAAU,WAURtB,GATe,uCAAG,WAAOc,GAAP,eAAAE,EAAA,sEACOC,IAAMC,IAAN,sBACNJ,EADM,kBACSiN,IAFhB,QACV3M,EADU,QAKHC,KAAKA,MAAQD,EAASC,KAAKA,KAAKG,OAAS,GACpDsM,EAAW1M,EAASC,KAAKA,MANX,2CAAH,qDASP0J,CAAU/K,KACjB,CAACA,EAAM+N,IAIV,OACE,kBAACZ,EAAA,EAAD,CAAWpN,UAAWG,EAAQL,KAAMuN,UAAU,GAC3CS,EAAQrM,OAAS,GAChB,kBAACiF,EAAA,EAAD,CAAME,WAAS,EAAC5B,QAAS,EAAG6B,QAAQ,UAClC,kBAACH,EAAA,EAAD,CAAM5B,MAAI,EAACiC,GAAI,GAAID,GAAI,GAAIqE,GAAI,IAC7B,kBAAC5C,EAAA,EAAD,KACE,kBAAC2F,GAAA,EAAD,CAAalO,UAAWG,EAAQsN,SAC9B,kBAACU,GAAA,EAAD,KACGL,EAAQlF,KAAI,SAACwF,EAAmBC,GAApB,OACX,kBAACC,GAAA,EAAD,CACEtF,IAAKqF,EACLE,gBAAc,EACdnJ,SAAO,EACPpF,UAAWG,EAAQ2E,MAEnB,yBACEsE,IAAI,aACJC,IAAK+E,EAAOI,UACZxO,UAAWG,EAAQwE,QAErB,kBAAC8J,GAAA,EAAD,CACEC,QACE,kBAAC7E,EAAA,EAAD,CACE7F,MAAM,cACN0I,OAAO,SACPF,KAAM4B,EAAOO,SACb1H,QAAQ,MAEPmH,EAAOxM,OAGZgN,uBAAwB,CACtB3H,QAAS,QACTjD,MAAO,eAET6K,UACE,kBAAC7H,EAAA,EAAD,CACEC,QAAQ,UACRjD,MAAM,gBACNwF,UAAW,QAEV4E,EAAOvM,KACR,6BACCuM,EAAOU,QAAQC,MAAM,EAAG,GAAGnG,KAAI,SAACoG,EAAQC,GAAT,OAC9B,kBAACjF,EAAA,EAAD,CACE/C,QAAQ,WACR+B,IAAKiG,EACL5E,KAAK,QACL/E,MAAO0J,EACPhP,UAAWG,EAAQwN,UAbzB,eAgBgBS,EAAOc,gBAUvC,kBAACxI,EAAA,EAAD,CAAM5B,MAAI,EAACgC,GAAI,GACb,kBAACsD,EAAA,EAAD,CACEpG,MAAM,UACNiD,QAAQ,YACRoE,QApEQ,kBAAY4C,EAAUD,EAAS,KAqEvCmB,SAAUnB,EAAS,GACnBoB,WAAS,GALX,iBCnHNC,GAAO,CACX,CAAEtO,MAAO,WAAYuE,MAAO,YAC5B,CAAEvE,MAAO,OAAQuE,MAAO,QACxB,CAAEvE,MAAO,aAAcuE,MAAO,uBAC9B,CAAEvE,MAAO,MAAOuE,MAAO,gBAGnB3F,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyE,gBAAiB1E,EAAM2E,QAAQ8K,WAAWC,KAC1CrC,WAAYrN,EAAMmF,QAAQ,GAC1B0I,cAAe7N,EAAMmF,QAAQ,QAgDlBwK,UA5CQ,WACrB,IAAMrP,EAAUR,KACV8P,EAAWC,cAFU,EAGHrP,mBAAiB,MAHd,mBAGpBJ,EAHoB,KAGd0P,EAHc,OAIStP,mBAAiB,YAJ1B,mBAIpBuP,EAJoB,KAIRC,EAJQ,KAM3BtO,qBAAU,WACR,IAAMR,EAAQ0O,EAASK,SAASC,MAAM,KAAK,GAC3ChP,GAAS4O,EAAQ5O,KAChB,CAAC0O,IAMJ,OACE,kBAACO,EAAA,EAAD,CAAMhQ,UAAWG,EAAQL,KAAM8B,MAAO3B,EAAI,UAAMA,EAAN,gBAA2B,IACnE,kBAACmN,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,CAAQpN,KAAMA,IACd,kBAACqH,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC0I,EAAA,EAAD,CACEC,SAVe,SAACC,EAAoBpP,GAC5C8O,EAAc9O,IAUNqP,cAAc,OACdrP,MAAO6O,EACPS,UAAU,YACVpJ,QAAQ,cAEPoI,GAAKzG,KAAI,SAAA0H,GAAG,OACX,kBAACC,EAAA,EAAD,CAAKvH,IAAKsH,EAAIvP,MAAOuE,MAAOgL,EAAIhL,MAAOvE,MAAOuP,EAAIvP,aAIxD,kBAAC0H,EAAA,EAAD,MACA,kBAACnB,EAAA,EAAD,CAAKkJ,GAAI,EAAGC,GAAI,GACE,aAAfb,GAA6B,kBAAC,GAAD,CAAU3P,KAAMA,IAC9B,SAAf2P,GAAyB,kBAAC,GAAD,CAAM3P,KAAMA,IACtB,eAAf2P,GAA+B,kBAAC,GAAD,CAAY3P,KAAMA,IAClC,QAAf2P,GAAwB,kBAAC,GAAD,CAAY3P,KAAMA","file":"static/js/35.fbdce37f.chunk.js","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport Highcharts from 'highcharts/highstock';\r\nimport darkUnica from 'highcharts/themes/dark-unica';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { makeStyles, useTheme, useMediaQuery } from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { Chart } from 'src/types/stock';\r\n\r\ninterface HighchartsWrapperProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst HighchartsWrapper: FC<HighchartsWrapperProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [source, setSource] = useState<any[]>([]);\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  darkUnica(Highcharts);\r\n\r\n  const fetchHistory = async (value: string, type: string) => {\r\n    const response = await axios.get<Chart[]>(`/stock/chart/${value}`, {\r\n      params: { type }\r\n    });\r\n    setSource(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    path && fetchHistory(path, '5d');\r\n  }, [path]);\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {source.length > 0 && (\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={{\r\n            title: {\r\n              text: undefined\r\n            },\r\n            chart: { height: mobileDevice ? '70%' : '40%' },\r\n            legend: {\r\n              enabled: false\r\n            },\r\n            xAxis: {\r\n              type: 'datetime',\r\n              min: source[0][0],\r\n              max: source[source.length - 1][0],\r\n              minRange: 3600 * 1000 * 7\r\n            },\r\n            time: {\r\n              useUTC: false\r\n            },\r\n            rangeSelector: {\r\n              buttons: [\r\n                {\r\n                  type: 'dynamic',\r\n                  count: 1,\r\n                  text: '1d',\r\n                  events: {\r\n                    //@ts-ignore\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, 'dynamic');\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '5d',\r\n                  count: 1,\r\n                  text: '1w',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, '5d');\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '1m',\r\n                  count: 1,\r\n                  text: '1m',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, this.text);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '1y',\r\n                  count: 1,\r\n                  text: '1y',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, this.text);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: 'max',\r\n                  text: 'All',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, 'max');\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              selected: 1,\r\n              enabled: true,\r\n              allButtonsEnabled: true\r\n            },\r\n            series: [\r\n              {\r\n                name: path ? path : '',\r\n                data: source,\r\n                threshold: null,\r\n                pointInterval: 3600 * 1000,\r\n                tooltip: {\r\n                  valueDecimals: 2\r\n                },\r\n                fillColor: {\r\n                  linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                  },\r\n                  stops: [\r\n                    [0, Highcharts.getOptions().colors[0]],\r\n                    [\r\n                      1,\r\n                      Highcharts.color(Highcharts.getOptions().colors[0])\r\n                        .setOpacity(0)\r\n                        .get('rgba')\r\n                    ]\r\n                  ]\r\n                }\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHighchartsWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default HighchartsWrapper;\r\n","import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport { Grid, Typography, Box, makeStyles, colors } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Quote } from 'src/types/stock';\nimport HighchartsWrapper from './HighchartsWrapper';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(`/stock/quote/${value}`);\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    fecthQuote(path);\n  }, [path]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\n            {`${name} - `}\n          </Typography>\n          {quote && (\n            <Typography\n              variant=\"body1\"\n              display=\"inline\"\n              style={{ color: color.quote }}\n            >\n              ${quote.latestPrice} {quote.change >= 0 ? '+' : '-'}$\n              {typeof quote.change === 'number'\n                ? Math.abs(quote.change)\n                : quote.change}{' '}\n              ({quote.changePercent >= 0 && '+'}\n              {quote.changePercent}%)\n            </Typography>\n          )}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`After Hours - `}\n            {quote && (\n              <Typography\n                variant=\"body1\"\n                display=\"inline\"\n                style={{ color: color.preQuote }}\n              >\n                ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\n                {typeof quote.extendedChange === 'number'\n                  ? Math.abs(quote.extendedChange)\n                  : quote.extendedChange}{' '}\n                ({quote.extendedChangePercent >= 0 && '+'}\n                {quote.extendedChangePercent}%)\n              </Typography>\n            )}\n          </Typography>\n          <Box mt={3}>\n            <HighchartsWrapper path={path} />\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Chip,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor, Picker } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\ninterface PickerStatus {\r\n  name: Picker;\r\n  text: string;\r\n}\r\n\r\nconst chips: PickerStatus[] = [\r\n  { name: 'bullish', text: 'Bullish' },\r\n  { name: 'bearish', text: 'Bearish' },\r\n  { name: 'neutral', text: 'Neutral' },\r\n  { name: 'no_opinion', text: 'No Opinion' }\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  picker: {}\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank News\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                      <Box flexGrow={1} />\r\n                      <Chip\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        label={\r\n                          chips.find(item => item.name === post.picker).text\r\n                        }\r\n                        className={classes.picker}\r\n                      />\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport NumberFormat from 'react-number-format';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Hidden,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  collapse: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    display: '-webkit-box',\r\n    '-webkit-box-orient': 'vertical',\r\n    '-webkit-line-clamp': '3'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(`/stock/company/${path}`);\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  const handleExpand = () => setExpanded(!expanded);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box className={classes.box}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className={clsx(!expanded && classes.collapse)}\r\n                    >\r\n                      {profile.description}\r\n                    </Typography>\r\n                    <Link onClick={handleExpand}>\r\n                      Read {expanded ? 'less' : 'more'}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Hidden mdDown>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.phone && (\r\n                                <NumberFormat\r\n                                  value={profile.phone}\r\n                                  displayType={'text'}\r\n                                  format=\"+1 (###) ###-####\"\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                  <Hidden lgUp>\r\n                    <Grid item lg={12} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              +{profile.phone}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\" color=\"textPrimary\">\r\n                  <Link href={profile.website ?? '#'} target=\"blank\">\r\n                    {profile.website}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `/stock/advanced-stats/${path}`\r\n      );\r\n\r\n      if (response.data) {\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Key Stats\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          {source && (\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.avg10Volume).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week High</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52high).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week Low</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52low).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Market Cap</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.marketcap).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.sharesOutstanding).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Beta</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.beta).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={6} xs={12}>\r\n          <DankNews path={path} />\r\n        </Grid>\r\n        <Grid item lg={6} xs={12}>\r\n          <KeyGlance path={path} />\r\n        </Grid>\r\n        <Grid item lg={12} xs={12}>\r\n          <ProfileGlance path={path} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\ninterface FinancialsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32,\r\n    minHeight: '30vh'\r\n  }\r\n}));\r\n\r\nconst Financials: FC<FinancialsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"b\" color=\"textSecondary\">\r\n            Being worked on\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Financials;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { StockNews } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 32\r\n  },\r\n  image: {\r\n    height: '15vh',\r\n    marginRight: '2vw',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '20vh'\r\n    }\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst News: FC<NewsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState<StockNews[]>([]);\r\n  const [amount, setAmount] = useState<number>(10);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (value: string) => {\r\n      const response = await axios.get<{ data: StockNews[] }>(\r\n        `/stock/news/${value}?items=${amount}`\r\n      );\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        setResults(response.data.data);\r\n      }\r\n    };\r\n    path && fetchData(path);\r\n  }, [path, amount]);\r\n\r\n  const handleClick = (): void => setAmount(amount + 10);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      {results.length > 0 && (\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Card>\r\n              <CardContent className={classes.content}>\r\n                <List>\r\n                  {results.map((result: StockNews, id) => (\r\n                    <ListItem\r\n                      key={id}\r\n                      disableGutters\r\n                      divider\r\n                      className={classes.item}\r\n                    >\r\n                      <img\r\n                        alt=\"Stock News\"\r\n                        src={result.image_url}\r\n                        className={classes.image}\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            target=\"_blank\"\r\n                            href={result.news_url}\r\n                            variant=\"h5\"\r\n                          >\r\n                            {result.title}\r\n                          </Link>\r\n                        }\r\n                        primaryTypographyProps={{\r\n                          variant: 'body1',\r\n                          color: 'textPrimary'\r\n                        }}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component={'span'}\r\n                          >\r\n                            {result.text}\r\n                            <br />\r\n                            {result.tickers.slice(0, 2).map((ticker, i) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                key={i}\r\n                                size=\"small\"\r\n                                label={ticker}\r\n                                className={classes.chip}\r\n                              />\r\n                            ))}\r\n                            {` | Date`}: {result.date}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClick}\r\n              disabled={amount > 40}\r\n              fullWidth\r\n            >\r\n              Read More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\nimport Financials from './Financials';\nimport News from './News';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'news', label: 'News' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'sec', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('opinions');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n          {currentTab === 'news' && <News path={path} />}\n          {currentTab === 'financials' && <Financials path={path} />}\n          {currentTab === 'sec' && <Financials path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}