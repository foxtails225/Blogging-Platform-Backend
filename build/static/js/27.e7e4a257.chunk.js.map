{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/auth/PasswordRecovery/PasswordRecovery.tsx","views/auth/PasswordRecovery/index.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","useStyles","makeStyles","PasswordRecovery","rest","history","useHistory","isMountedRef","useIsMountedRef","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","axios","post","current","success","push","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","error","Boolean","fullWidth","autoFocus","helperText","label","margin","onBlur","onChange","type","value","variant","Box","mt","Button","color","disabled","size","theme","backgroundColor","palette","background","dark","display","flexDirection","minHeight","banner","paper","spacing","paddingTop","borderBottom","divider","bannerChip","marginRight","methodIcon","height","marginLeft","cardContainer","cardContent","PasswordRecoveryView","method","useAuth","Page","title","Container","maxWidth","mb","justifyContent","to","Logo","Card","alignItems","Typography","gutterBottom","flexGrow","my","Divider","Link","RouterLink"],"mappings":"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","file":"static/js/27.e7e4a257.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { FC } from 'react';\nimport { useHistory } from 'react-router';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, TextField, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface JWTLoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst PasswordRecovery: FC<JWTLoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const isMountedRef = useIsMountedRef();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await axios.post('/recovery-password', { email: values.email });\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n            history.push('/');\n          }\n        } catch (err) {\n          if (isMountedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Send Link\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nPasswordRecovery.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PasswordRecovery;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Link,\n  Card,\n  CardContent,\n  Divider,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport useAuth from 'src/hooks/useAuth';\nimport PasswordRecovery from './PasswordRecovery';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80,\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n}));\n\nconst PasswordRecoveryView: FC = () => {\n  const classes = useStyles();\n  const { method } = useAuth();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Password Recovery\"\n    >\n      <Container\n        className={classes.cardContainer}\n        maxWidth=\"sm\"\n      >\n        <Box\n          mb={8}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              mb={3}\n            >\n              <div>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"h2\"\n                >\n                  Password Recovery\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  Tell us your email so we can send you a reset link\n                </Typography>\n              </div>\n            </Box>\n            <Box\n              flexGrow={1}\n              mt={3}\n            >\n              {method === 'JWT' && <PasswordRecovery /> }\n            </Box>\n            <Box my={3}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Have an account?\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default PasswordRecoveryView;\n"],"sourceRoot":""}