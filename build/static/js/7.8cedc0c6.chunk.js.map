{"version":3,"sources":["views/post/PostCreateView/PostDetails.tsx","components/QuillEditor.tsx","views/post/PostCreateView/PostContent.tsx","views/post/PostCreateView/PostDisclosure.tsx","views/post/PostCreateView/PostReview/index.tsx","views/post/PostCreateView/index.tsx"],"names":["useStyles","makeStyles","theme","root","addTab","marginLeft","spacing","tag","datePicker","initialTag","symbol","name","PostDetails","className","post","onPost","onNext","rest","classes","useState","setTag","handleChangeTag","event","value","target","initialValues","title","tags","submit","validationSchema","Yup","shape","min","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","trim","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","clsx","onKeyPress","e","key","preventDefault","Typography","variant","color","Box","mt","TextField","error","Boolean","fullWidth","helperText","label","placeholder","onBlur","onChange","display","alignItems","IconButton","onClick","SvgIcon","map","i","Chip","onDelete","newTags","filter","t","FormHelperText","flexGrow","Button","disabled","type","size","defaultProps","borderLeft","borderTop","borderRight","borderBottom","palette","divider","secondary","main","stroke","text","primary","padding","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","fontFamily","typography","fontSize","QuillEditor","editorContainer","marginTop","editor","height","PostContent","onBack","content","setContent","setError","Paper","PostDisclosure","disclosure","setDisclosure","typeOption","marginBottom","stepButton","chip","box","breakpoints","down","colors","grey","PostReview","onComplete","Grid","container","item","xs","md","parse","Divider","steps","icon","BriefcaseIcon","FileIcon","GavelIcon","RateReviewIcon","initialPost","slug","week","moment","month","year","CustomStepConnector","withStyles","vertical","line","borderColor","StepConnector","useCustomStepIconStyles","active","contrastText","completed","CustomStepIcon","Icon","Avatar","dark","minHeight","paddingTop","paddingBottom","avatar","red","stepper","PostCreateView","activeStep","setActiveStep","setCompleted","setPost","handleNext","prevActiveStep","handleBack","handleComplete","specialReg","replace","split","join","toLowerCase","axios","handlePost","prevState","Page","Container","maxWidth","mb","Card","CardContent","mx","justifyContent","align","component","RouterLink","to","Stepper","connector","orientation","step","Step","StepLabel","StepIconComponent","p"],"mappings":"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","file":"static/js/7.8cedc0c6.chunk.js","sourcesContent":["import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Chip,\n  FormHelperText,\n  IconButton,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Plus as PlusIcon } from 'react-feather';\nimport { Theme } from 'src/theme';\nimport { Post, Tag } from 'src/types/post';\n\ninterface PostDetailsProps {\n  className?: string;\n  post?: Post;\n  onPost?: (param: any) => void;\n  onNext?: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  addTab: {\n    marginLeft: theme.spacing(2)\n  },\n  tag: {\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst initialTag: Tag = {\n  symbol: '',\n  name: ''\n};\n\nconst PostDetails: FC<PostDetailsProps> = ({\n  className,\n  post,\n  onPost,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [tag, setTag] = useState<Tag>(initialTag);\n\n  const handleChangeTag = event => {\n    const { value } = event.target;\n    setTag({ symbol: value, name: value });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: post.title || '',\n        tags: post.tags || [],\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string()\n          .min(3, 'Must be at least 3 characters')\n          .max(255)\n          .required('Required'),\n        tags: Yup.array().required()\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          onPost({ title: values.title.trim(), tags: values.tags });\n          setStatus({ success: true });\n          setSubmitting(false);\n\n          if (onNext) {\n            onNext();\n          }\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          onKeyPress={e => {\n            e.key === 'Enter' && e.preventDefault();\n          }}\n          {...rest}\n        >\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Details\n          </Typography>\n          <Box mt={2}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              Do not spam tags. <br />\n              Title should not be spammy. <br />\n              Title and article contents may be subject to grammatical and\n              punctual editing to ensure quality.\n            </Typography>\n          </Box>\n          <Box mt={2}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Article Title\"\n              name=\"title\"\n              placeholder=\"Please type article title.\"\n              value={values.title}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              variant=\"outlined\"\n            />\n            <Box mt={3} display=\"flex\" alignItems=\"center\">\n              <TextField\n                fullWidth\n                label=\"Article Tags\"\n                name=\"tags\"\n                value={tag.symbol}\n                placeholder=\"Please choose at least one tag.\"\n                onChange={handleChangeTag}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') {\n                    if (tag.symbol === '' || tag.name === '') {\n                      return;\n                    }\n                    setFieldValue('tags', [...values.tags, tag]);\n                    setTag(initialTag);\n                  }\n                }}\n                variant=\"outlined\"\n              />\n              <IconButton\n                className={classes.addTab}\n                onClick={() => {\n                  if (tag.symbol === '' || tag.name === '') {\n                    return;\n                  }\n                  setFieldValue('tags', [...values.tags, tag]);\n                  setTag(initialTag);\n                }}\n              >\n                <SvgIcon>\n                  <PlusIcon />\n                </SvgIcon>\n              </IconButton>\n            </Box>\n            <Box mt={2}>\n              {values.tags.map((tag, i) => (\n                <Chip\n                  variant=\"outlined\"\n                  key={i}\n                  label={tag.symbol}\n                  className={classes.tag}\n                  onDelete={() => {\n                    const newTags = values.tags.filter(\n                      t => t.symbol !== tag.symbol && t.name !== tag.name\n                    );\n                    setFieldValue('tags', newTags);\n                  }}\n                />\n              ))}\n            </Box>\n            {Boolean(touched.tags && errors.tags) && (\n              <Box mt={2}>\n                <FormHelperText error>{errors.tags}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Box mt={6} display=\"flex\">\n            <Box flexGrow={1} />\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              Next\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nPostDetails.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func\n};\n\nPostDetails.defaultProps = {\n  onPost: () => {},\n  onNext: () => {}\n};\n\nexport default PostDetails;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\n\n// NOTE: At this moment, this ReactQuill does not export\n// the types for props and we cannot extend them\ninterface QuillEditorProps {\n  className?: string;\n  [key: string]: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  }\n}));\n\nconst QuillEditor: FC<QuillEditorProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    /* @ts-ignore */\n    <ReactQuill className={clsx(classes.root, className)} {...rest} />\n  );\n};\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostContentProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  }\n}));\n\nconst PostContent: FC<PostContentProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [content, setContent] = useState<string>(post.content || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setContent(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ content: content.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Content\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Do not advise people to make any financial decisions. <br />\n          Plagiarism is not tolerated.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={content}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostContent.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostContent.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostContent;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostDisclosureProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 300\n    },\n    '& .ql-toolbar': {\n      '& .ql-formats > .ql-picker': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\nconst PostDisclosure: FC<PostDisclosureProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [disclosure, setDisclosure] = useState<string>(post.disclosure || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setDisclosure(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ disclosure: disclosure.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Disclosure\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Let the readers know if you hold or do not hold any position in the\n          companies you are talking about. Make sure to also let readers know if\n          you are receiving compensation for the article. You may receive one\n          from us if your article is approved and you may receive tips from\n          readers.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={disclosure}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostDisclosure.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostDisclosure.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostDisclosure;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport parse from 'html-react-parser';\nimport {\n  Box,\n  FormHelperText,\n  Typography,\n  Button,\n  Grid,\n  Chip,\n  Divider,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Post, Tag } from 'src/types/post';\n\ninterface PostReviewProps {\n  className?: string;\n  post?: Post;\n  onBack?: () => void;\n  onComplete?: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  typeOption: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  chip: {\n    marginLeft: theme.spacing(1)\n  },\n  box: {\n    padding: theme.spacing(7),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  content: {\n    fontFamily: theme.typography.fontFamily,\n    marginBottom: theme.spacing(2)\n  },\n  disclosure: {\n    fontFamily: theme.typography.fontFamily,\n    '& p': {\n      color: colors.grey[500],\n      fontSize: '0.9rem'\n    }\n  }\n}));\n\nconst PostReview: FC<PostReviewProps> = ({\n  className,\n  post,\n  onBack,\n  onComplete,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n\n      if (onComplete) {\n        onComplete();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Review\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Make sure everything looks good.\n        </Typography>\n      </Box>\n      <Box mt={3} border={1} className={classes.box}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {post.title}\n            </Typography>\n            <Box mt={3}>\n              <Box mt={1}>\n                {post.tags.map((tag: Tag) => (\n                  <Chip\n                    key={tag.symbol}\n                    variant=\"outlined\"\n                    label={tag.symbol}\n                    className={classes.chip}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3} className={classes.content}>\n          {parse(post.content)}\n        </Box>\n        <Divider />\n        <Box mt={3} className={classes.disclosure}>\n          {parse(post.disclosure)}\n        </Box>\n      </Box>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{error}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Complete\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostReview.propTypes = {\n  className: PropTypes.string,\n  onComplete: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostReview.defaultProps = {\n  onComplete: () => {},\n  onBack: () => {}\n};\n\nexport default PostReview;\n","import React, { useState, FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Step,\n  StepConnector,\n  StepLabel,\n  Stepper,\n  Typography,\n  colors,\n  makeStyles,\n  withStyles\n} from '@material-ui/core';\nimport {\n  Star as StarIcon,\n  Briefcase as BriefcaseIcon,\n  File as FileIcon\n} from 'react-feather';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport axios from 'src/utils/axios';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\nimport Page from 'src/components/Page';\nimport PostDetails from './PostDetails';\nimport PostContent from './PostContent';\nimport PostDisclosure from './PostDisclosure';\nimport PostReview from './PostReview';\n\ninterface CustomStepIconProps {\n  active?: boolean;\n  completed?: boolean;\n  icon: number;\n}\n\nconst steps = [\n  {\n    label: 'Details',\n    icon: BriefcaseIcon\n  },\n  {\n    label: 'Content',\n    icon: FileIcon\n  },\n  {\n    label: 'Disclosure',\n    icon: GavelIcon\n  },\n  {\n    label: 'Review',\n    icon: RateReviewIcon\n  }\n];\n\nconst initialPost = {\n  slug: '',\n  title: '',\n  content: '',\n  disclosure: '',\n  tags: [],\n  week: moment().week(),\n  month: moment().month(),\n  year: moment().year()\n};\n\nconst CustomStepConnector = withStyles((theme: Theme) => ({\n  vertical: {\n    marginLeft: 19,\n    padding: 0\n  },\n  line: {\n    borderColor: theme.palette.divider\n  }\n}))(StepConnector);\n\nconst useCustomStepIconStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  active: {\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: theme.shadows[10],\n    color: theme.palette.secondary.contrastText\n  },\n  completed: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst CustomStepIcon: FC<CustomStepIconProps> = ({\n  active,\n  completed,\n  icon\n}) => {\n  const classes = useCustomStepIconStyles();\n\n  const Icon = steps[icon - 1].icon;\n\n  return (\n    <Avatar\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed\n      })}\n    >\n      <Icon size=\"20\" />\n    </Avatar>\n  );\n};\n\nCustomStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  avatar: {\n    backgroundColor: colors.red[600]\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  }\n}));\n\nconst PostCreateView: FC = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [completed, setCompleted] = useState<boolean>(false);\n  const [post, setPost] = useState<Post>(initialPost);\n\n  const handleNext = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleComplete = async (): Promise<void> => {\n    const specialReg = /[^\\w\\s]/gi;\n    const slug = post.title\n      .replace(specialReg, '')\n      .replace('/', '-')\n      .split(' ')\n      .join('-')\n      .trim()\n      .toLowerCase();\n\n    await axios.post<{ post: Post }>('/posts/new', { ...post, slug });\n    setCompleted(true);\n  };\n\n  const handlePost = (values): void => {\n    setPost(prevState => ({ ...prevState, ...values }));\n  };\n\n  return (\n    <Page className={classes.root} title=\"Project Create\">\n      <Container maxWidth=\"lg\">\n        <Box mb={3}>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Post New Article\n          </Typography>\n        </Box>\n        {!completed ? (\n          <Paper>\n            <Grid container>\n              <Grid item xs={12} md={3}>\n                <Stepper\n                  activeStep={activeStep}\n                  className={classes.stepper}\n                  connector={<CustomStepConnector />}\n                  orientation=\"vertical\"\n                >\n                  {steps.map(step => (\n                    <Step key={step.label}>\n                      <StepLabel StepIconComponent={CustomStepIcon}>\n                        {step.label}\n                      </StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n              </Grid>\n              <Grid item xs={12} md={9}>\n                <Box p={3}>\n                  {activeStep === 0 && (\n                    <PostDetails\n                      post={post}\n                      onPost={handlePost}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 1 && (\n                    <PostContent\n                      post={post}\n                      onPost={handlePost}\n                      onBack={handleBack}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 2 && (\n                    <PostDisclosure\n                      post={post}\n                      onPost={handlePost}\n                      onBack={handleBack}\n                      onNext={handleNext}\n                    />\n                  )}\n                  {activeStep === 3 && (\n                    <PostReview\n                      post={post}\n                      onBack={handleBack}\n                      onComplete={handleComplete}\n                    />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n        ) : (\n          <Card>\n            <CardContent>\n              <Box maxWidth={450} mx=\"auto\">\n                <Box display=\"flex\" justifyContent=\"center\">\n                  <Avatar className={classes.avatar}>\n                    <StarIcon />\n                  </Avatar>\n                </Box>\n                <Box mt={2}>\n                  <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                    You are all done!\n                  </Typography>\n                </Box>\n                <Box mt={2}>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    align=\"center\"\n                  >\n                    Thank you for submitting your contribution to us. Your\n                    article is now in review and we will come back to you with\n                    our final decision.\n                  </Typography>\n                </Box>\n                <Box mt={2} display=\"flex\" justifyContent=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    component={RouterLink}\n                    to=\"/account/profile\"\n                  >\n                    Back to Profile\n                  </Button>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </Page>\n  );\n};\n\nexport default PostCreateView;\n"],"sourceRoot":""}