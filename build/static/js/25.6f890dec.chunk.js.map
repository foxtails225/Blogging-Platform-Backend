{"version":3,"sources":["utils/getInitials.ts","components/StockVisxWrapper.tsx","views/symbol/SymbolView/Header/index.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/Financials/IncomeStatement.tsx","views/symbol/SymbolView/Financials/BalanceSheet.tsx","views/symbol/SymbolView/Financials/CashFlow.tsx","views/symbol/SymbolView/Financials/index.tsx","views/symbol/SymbolView/News.tsx","views/symbol/SymbolView/index.tsx"],"names":["getInitials","name","replace","split","slice","map","v","toUpperCase","join","tooltipStyles","defaultStyles","background","color","boxShadow","formatDate","timeFormat","getDate","d","Date","date","getStockValue","close","bisectDate","bisector","left","withTooltip","path","period","width","ratio","quote","margin","top","right","bottom","showTooltip","hideTooltip","tooltipData","tooltipTop","tooltipLeft","theme","useTheme","useState","results","setResults","innerWidth","useMediaQuery","breakpoints","down","innerHeight","getData","value","type","a","axios","get","params","response","data","useEffect","dateScale","useMemo","scaleTime","range","domain","extent","stockValueScale","Math","abs","max","min","scaleLinear","nice","handleTooltip","useCallback","event","x","localPoint","x0","invert","index","d0","d1","valueOf","Typography","variant","display","style","latestPrice","change","changePercent","preQuote","extendedPrice","extendedChange","extendedChangePercent","Box","mt","position","length","height","y","fill","rx","LinearGradient","id","from","to","toOpacity","GridRows","scale","strokeDasharray","stroke","strokeOpacity","pointerEvents","AreaClosed","yScale","strokeWidth","curve","curveMonotoneX","Bar","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","Line","cx","cy","r","fillOpacity","TooltipWithBounds","key","random","initialColor","colors","green","buttons","label","visible","useStyles","makeStyles","root","action","backgroundColor","palette","common","white","image","maxHeight","item","padding","spacing","textAlign","up","borderRight","divider","borderBottom","marginLeft","overline","marginTop","Header","className","rest","classes","setName","setQuote","setColor","setPeriod","quoteData","companyName","fecthQuote","quoteColor","red","preQuoteColor","handleClick","currentTarget","clsx","Grid","container","md","xs","StockVisxWrapper","ButtonGroup","size","button","Button","onClick","chips","text","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","picker","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","current","Card","CardHeader","title","Divider","Table","TableBody","post","TableRow","hover","_id","TableCell","alignItems","Avatar","alt","src","author","avatar","component","RouterLink","ml","Link","slug","flexGrow","Chip","find","p","justifyContent","endIcon","collapse","textOverflow","overflow","box","link","more","fontFamily","ProfileGlance","profile","setProfile","expanded","setExpanded","fetchData","Paper","justify","my","lg","description","Hidden","mdDown","align","sector","industry","numeral","employees","format","address","city","state","zip","country","phone","displayType","CEO","lgUp","gutterBottom","href","website","target","KeyGlance","source","setSource","avg10Volume","week52high","week52low","marketcap","sharesOutstanding","beta","paddingTop","Opinions","labels","totalRevenue","costOfRevenue","grossProfit","researchAndDevelopment","sellingGeneralAndAdmin","operatingExpense","operatingIncome","otherIncomeExpenseNet","ebit","interestIncome","pretaxIncome","incomeTax","minorityInterest","netIncome","netIncomeBasic","fiscalYear","IncomeStatement","columns","setColumns","temp","Object","keys","forEach","result","shift","minWidth","TableHead","column","filter","Array","idx","currentCash","shortTermInvestments","receivables","inventory","otherCurrentAssets","currentAssets","longTermInvestments","propertyPlantEquipment","goodwill","intangibleAssets","otherAssets","totalAssets","accountsPayable","currentLongTermDebt","otherCurrentLiabilities","totalCurrentLiabilities","longTermDebt","otherLiabilities","totalLiabilities","commonStock","retainedEarnings","treasuryStock","capitalSurplus","shareholderEquity","netTangibleAssets","BalanceSheet","depreciation","changesInReceivables","changesInInventories","cashChange","cashFlow","capitalExpenditures","investments","netBorrowings","otherFinancingCashFlows","cashFlowFinancing","exchangeRateEffect","totalInvestingCashFlows","CashFlow","minHeight","Financials","currentTab","setCurrentTab","handleTab","Container","maxWidth","mr","pb","marginRight","content","paddingBottom","chip","News","amount","setAmount","CardContent","List","ListItem","disableGutters","image_url","ListItemText","primary","news_url","primaryTypographyProps","secondary","tickers","ticker","i","disabled","fullWidth","tabs","dark","SymbolView","location","useLocation","setPath","pathname","Page","Tabs","onChange","scrollButtons","textColor","tab","Tab"],"mappings":"gIASeA,IATK,WAAwB,IAAvBC,EAAsB,uDAAP,GAClC,OAAOA,EACJC,QAAQ,MAAO,KACfC,MAAM,KACNC,MAAM,EAAG,GACTC,KAAI,SAAAC,GAAC,OAAIA,GAAKA,EAAE,GAAGC,iBACnBC,KAAK,M,sbCqBJC,EAAa,2BACdC,KADc,IAEjBC,WAAY,cACZC,MAAO,OACPC,UAAW,SAEPC,EAAaC,YAAW,cACxBC,EAAU,SAACC,GAAD,OAAmB,IAAIC,KAAKD,EAAEE,OACxCC,EAAgB,SAACH,GAAD,OAAmBA,EAAEI,OACrCC,EAAaC,aAA2B,SAAAN,GAAC,OAAI,IAAIC,KAAKD,EAAEE,SAAOK,KActDC,eACb,YAcsE,IAbpEC,EAamE,EAbnEA,KACAC,EAYmE,EAZnEA,OACAC,EAWmE,EAXnEA,MACAC,EAUmE,EAVnEA,MACAC,EASmE,EATnEA,MACA7B,EAQmE,EARnEA,KACAW,EAOmE,EAPnEA,MAOmE,IANnEmB,cAMmE,MAN1D,CAAEC,IAAK,EAAGC,MAAO,GAAIC,OAAQ,EAAGV,KAAM,IAMoB,EALnEW,EAKmE,EALnEA,YACAC,EAImE,EAJnEA,YACAC,EAGmE,EAHnEA,YAGmE,IAFnEC,kBAEmE,MAFtD,EAEsD,MADnEC,mBACmE,MADrD,EACqD,EAC7DC,EAAQC,cADqD,EAErCC,mBAAgB,IAFqB,mBAE5DC,EAF4D,KAEnDC,EAFmD,KAI7DC,EADeC,YAAcN,EAAMO,YAAYC,KAAK,OACxB,IAAMpB,EAClCqB,EAAcJ,EAAahB,EAAQE,EAAOC,IAE1CkB,EAAO,uCAAG,WAAOC,EAAeC,GAAtB,eAAAC,EAAA,sEACSC,IAAMC,IAAN,uBAAmCJ,GAAS,CACjEK,OAAQ,CAAEJ,UAFE,OACRK,EADQ,OAIdb,EAAWa,EAASC,MAJN,2CAAH,wDAObC,qBAAU,WACRjC,GAAQwB,EAAQxB,EAAMC,KACrB,CAACD,EAAMC,IAEV,IAAMiC,EAAYC,mBAChB,kBACEC,YAAU,CACRC,MAAO,CAAC,EAAGlB,EAAad,EAAOP,MAC/BwC,OAAQC,YAAOtB,EAAS3B,OAE5B,CAAC6B,EAAYF,EAASZ,EAAOP,OAGzB0C,GAAkBL,mBAAQ,WAC9B,IAAMV,EACJgB,KAAKC,IAAIC,YAAI1B,EAASvB,GAAiBkD,YAAI3B,EAASvB,IAAkB,EAExE,OAAOmD,YAAY,CACjBR,MAAO,CAACd,EAAclB,EAAOC,IAAKD,EAAOC,KACzCgC,OAAQ,CACNM,YAAI3B,EAASvB,GAAiB+B,EAAQ,GAAK,EAC3CkB,YAAI1B,EAASvB,GAAiB+B,GAAS,GAEzCqB,MAAM,MAEP,CAACvB,EAAaN,EAASZ,EAAOC,MAE3ByC,GAAgBC,uBACpB,SACEC,GAGI,IACIC,GAAMC,YAAWF,IAAU,CAAEC,EAAG,IAAhCA,EACFE,EAAKlB,EAAUmB,OAAOH,GACtBI,EAAQ1D,EAAWqB,EAASmC,EAAI,GAChCG,EAAKtC,EAAQqC,EAAQ,GACrBE,EAAKvC,EAAQqC,GACf/D,EAAIgE,EACJC,GAAMlE,EAAQkE,KAChBjE,EACE6D,EAAGK,UAAYnE,EAAQiE,GAAIE,UAC3BnE,EAAQkE,GAAIC,UAAYL,EAAGK,UACvBD,EACAD,GAER9C,EAAY,CACVE,YAAapB,EACbsB,YAAaqC,EACbtC,WAAY4B,GAAgB9C,EAAcH,QAG9C,CAACkB,EAAa+B,GAAiBN,EAAWjB,IAG5C,OACE,6BACE,kBAACyC,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,MAAM,cAAc0E,QAAQ,UAArD,UACMrF,EADN,QAGC6B,GACC,kBAACsD,EAAA,EAAD,CACEC,QAAQ,QACRC,QAAQ,SACRC,MAAO,CAAE3E,MAAOA,EAAMkB,QAHxB,IAKIO,EAAcjB,EAAciB,GAAeP,EAAM0D,YAAa,IAC/D1D,EAAM2D,QAAU,EAAI,IAAM,IAN7B,IAO2B,kBAAjB3D,EAAM2D,OACVtB,KAAKC,IAAItC,EAAM2D,QACf3D,EAAM2D,OAAQ,IATpB,IAUI3D,EAAM4D,eAAiB,GAAK,IACK,IAAjC5D,EAAM4D,cAXV,MAcF,kBAACN,EAAA,EAAD,CAAYC,QAAQ,YAAYzE,MAAM,iBAAtC,iBAEGkB,GACC,kBAACsD,EAAA,EAAD,CACEC,QAAQ,QACRC,QAAQ,SACRC,MAAO,CAAE3E,MAAOA,EAAM+E,WAHxB,IAKI7D,EAAM8D,cALV,IAK0B9D,EAAM+D,gBAAkB,EAAI,IAAM,IAL5D,IAMmC,kBAAzB/D,EAAM+D,eACV1B,KAAKC,IAAItC,EAAM+D,gBACf/D,EAAM+D,eAAgB,IAR5B,IASI/D,EAAMgE,uBAAyB,GAAK,IACK,IAAzChE,EAAMgE,sBAVV,OAcJ,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKT,MAAO,CAAEU,SAAU,aACrBtD,EAAQuD,OAAS,GAChB,oCACE,yBAAKtE,MAAOiB,EAAYsD,OAAQlD,GAC9B,0BACE2B,EAAG,EACHwB,EAAG,EACHxE,MAAOiB,EACPsD,OAAQlD,EACRoD,KAAK,iCACLC,GAAI,IAEN,kBAACC,EAAA,EAAD,CACEC,GAAG,2BACHC,KAnKD,UAoKCC,GAnKA,YAqKF,kBAACH,EAAA,EAAD,CACEC,GAAG,gBACHC,KAtKA,UAuKAC,GAvKA,UAwKAC,UAAW,KAEb,kBAACC,EAAA,EAAD,CACEpF,KAAM,EACNqF,MAAO3C,GACPtC,MAAOiB,EACPiE,gBAAgB,MAChBC,OA/KA,UAgLAC,cAAe,EACfC,cAAc,SAEhB,kBAACC,EAAA,EAAD,CACExD,KAAMf,EACNiC,EAAG,SAAA3D,GAAC,uBAAI2C,EAAU5C,EAAQC,WAAtB,QAA6B,GACjCmF,EAAG,SAAAnF,GAAC,uBAAIiD,GAAgB9C,EAAcH,WAAlC,QAAyC,GAC7CkG,OAAQjD,GACRkD,YAAa,EACbL,OAAO,sBACPV,KAAK,sBACLgB,MAAOC,MAET,kBAACC,EAAA,EAAD,CACE3C,EAAG,EACHwB,EAAGrE,EAAOC,IACVJ,MAAOiB,EAAad,EAAOP,KAC3B2E,OAAQlD,EACRoD,KAAK,cACLC,GAAI,GACJkB,aAAc/C,GACdgD,YAAahD,GACbiD,YAAajD,GACbkD,aAAc,kBAAMvF,OAErBC,GACC,2BACE,kBAACuF,EAAA,EAAD,CACEnB,KAAM,CAAE7B,EAAGrC,EAAa6D,EAAGrE,EAAOC,KAClC0E,GAAI,CAAE9B,EAAGrC,EAAa6D,EAAGnD,EAAclB,EAAOC,KAC9C+E,OA7MA,UA8MAK,YAAa,EACbH,cAAc,OACdH,gBAAgB,QAElB,4BACEe,GAAItF,EACJuF,GAAIxF,EAAa,EACjByF,EAAG,EACH1B,KAAK,QACL2B,YAAa,GACbjB,OAAO,QACPC,cAAe,GACfI,YAAa,EACbH,cAAc,SAEhB,4BACEY,GAAItF,EACJuF,GAAIxF,EACJyF,EAAG,EACH1B,KAjOA,UAkOAU,OAAO,QACPK,YAAa,EACbH,cAAc,WAKrB5E,GACC,6BACE,kBAAC4F,EAAA,EAAD,CACEC,IAAK/D,KAAKgE,SACVnG,IAAKM,EAAa,GAClBd,KAAMe,EAAc,GACpBgD,MAAO9E,GAENK,EAAWE,EAAQqB,aCjPpC+F,EAAsB,CAC1BtG,MAAOuG,IAAOC,MAAM,KACpB3C,SAAU0C,IAAOC,MAAM,MAGnBC,EAAU,CACd,CAAEtI,KAAM,UAAWuI,MAAO,KAAMC,SAAS,GACzC,CAAExI,KAAM,KAAMuI,MAAO,KAAMC,SAAS,GACpC,CAAExI,KAAM,KAAMuI,MAAO,KAAMC,SAAS,GACpC,CAAExI,KAAM,KAAMuI,MAAO,KAAMC,SAAS,GACpC,CAAExI,KAAM,KAAMuI,MAAO,KAAMC,SAAS,GACpC,CAAExI,KAAM,KAAMuI,MAAO,KAAMC,SAAS,GACpC,CAAExI,KAAM,MAAOuI,MAAO,MAAOC,SAAS,IAGlCC,GAAYC,aAAW,SAACnG,GAAD,YAAmB,CAC9CoG,KAAM,GACNC,OAAQ,CACNC,gBAAiBtG,EAAMuG,QAAQC,OAAOC,OAExCC,MAAO,CACLtH,MAAO,OACPuH,UAAW,KAEbC,MAAI,GACFC,QAAS7G,EAAM8G,QAAQ,GACvBC,UAAW,UAFT,cAGD/G,EAAMO,YAAYyG,GAAG,MAAQ,CAC5B,uBAAwB,CACtBC,YAAY,aAAD,OAAejH,EAAMuG,QAAQW,YAL1C,cAQDlH,EAAMO,YAAYC,KAAK,MAAQ,CAC9B,uBAAwB,CACtB2G,aAAa,aAAD,OAAenH,EAAMuG,QAAQW,YAV3C,GAcJlB,MAAO,CACLoB,WAAYpH,EAAM8G,QAAQ,IAE5BO,SAAU,CACRC,UAAWtH,EAAM8G,QAAQ,QAsFdS,GAlFiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWtI,EAAoB,EAApBA,KAASuI,EAAW,oCAC1DC,EAAUxB,KADgD,EAExChG,mBAAiB,IAFuB,mBAEzDzC,EAFyD,KAEnDkK,EAFmD,OAGtCzH,qBAHsC,mBAGzDZ,EAHyD,KAGlDsI,EAHkD,OAItC1H,mBAAgB0F,GAJsB,mBAIzDxH,EAJyD,KAIlDyJ,EAJkD,OAKpC3H,mBAAiB,WALmB,mBAKzDf,EALyD,KAKjD2I,EALiD,KAOhE3G,qBAAU,WACHjC,GAEW,uCAAG,WAAOyB,GAAP,6BAAAE,EAAA,sEACMC,IAAMC,IAAN,uBAAiCJ,IADvC,QACXM,EADW,QAGJC,OACP6G,EAAY,CACd/E,YAAW,UAAE/B,EAASC,KAAK8B,mBAAhB,QAA+B,MAC1CC,OAAM,UAAEhC,EAASC,KAAK+B,cAAhB,QAA0B,MAChCC,cAAa,UAAEjC,EAASC,KAAKgC,qBAAhB,QAAiC,MAC9CE,cAAa,UAAEnC,EAASC,KAAKkC,qBAAhB,QAAiC,MAC9CC,eAAc,UAAEpC,EAASC,KAAKmC,sBAAhB,QAAkC,MAChDC,sBAAqB,UAAErC,EAASC,KAAKoC,6BAAhB,QAAyC,OAGhEsE,EAASG,GACTJ,EAAQhH,EAAQ,MAAQM,EAASC,KAAK8G,cAdvB,2CAAH,qDAkBhBC,CAAW/I,KACV,CAACA,IAEJiC,qBAAU,WACR,GAAK7B,EAAL,CACA,IAAI4I,EAAa5I,EAAM2D,QAAU,EAAI4C,IAAOC,MAAM,KAAOD,IAAOsC,IAAI,KAChEC,EACF9I,EAAM+D,gBAAkB,EAAIwC,IAAOC,MAAM,KAAOD,IAAOsC,IAAI,KAE7DN,EAAS,CAAEvI,MAAO4I,EAAY/E,SAAUiF,OACvC,CAAC9I,IAEJ,IAAM+I,EAAc,SAAClG,GAAD,OAAiB2F,EAAU3F,EAAMmG,cAAc7K,OAEnE,OACE,uCAAK+J,UAAWe,YAAKb,EAAQtB,KAAMoB,IAAgBC,GACjD,kBAACe,EAAA,EAAD,CAAMC,WAAS,EAAC3B,QAAS,GACvB,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,EAAC8B,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAD,CACEzJ,OAAQA,EACRD,KAAMA,EACNzB,KAAMA,EACN6B,MAAOA,EACPlB,MAAOA,EACPgB,MAAO,IACPC,MAAO,MAGX,kBAACmJ,EAAA,EAAD,CAAM5B,MAAI,EAAC8B,GAAI,GACb,kBAACnF,EAAA,EAAD,CAAKC,GAAI,EAAGT,MAAO,CAAEgE,UAAW,QAC9B,kBAAC8B,EAAA,EAAD,CAAazK,MAAM,UAAU0K,KAAK,SAC/B/C,EAAQlI,KAAI,SAAAkL,GAAM,OACjB,kBAACC,EAAA,EAAD,CACEtD,IAAKqD,EAAOtL,KACZA,KAAMsL,EAAOtL,KACbwL,QAASZ,EACTxF,QAAS1D,IAAW4J,EAAOtL,KAAO,YAAc,YAE/CsL,EAAO/C,gB,2KCpGpBkD,GAAwB,CAC5B,CAAEzL,KAAM,UAAW0L,KAAM,WACzB,CAAE1L,KAAM,UAAW0L,KAAM,WACzB,CAAE1L,KAAM,UAAW0L,KAAM,WACzB,CAAE1L,KAAM,aAAc0L,KAAM,eAGxBjD,GAAYC,aAAW,SAACnG,GAAD,MAAmB,CAC9CoG,KAAM,GACNM,MAAO,CACL0C,WAAY,EACZzF,OAAQ,GACRvE,MAAO,IAETiK,cAAe,CACbC,WAAYtJ,EAAMuJ,WAAWC,kBAE/B7I,MAAO,CACLvC,MAAOyH,IAAOC,MAAM,KACpBwD,WAAYtJ,EAAMuJ,WAAWC,kBAE/BC,OAAQ,OA8FKC,GA3FqB,SAAC,GAAkC,IAAhClC,EAA+B,EAA/BA,UAAWtI,EAAoB,EAApBA,KAASuI,EAAW,oCAC9DC,EAAUxB,KACVyD,EAAeC,eAF+C,EAG1C1J,mBAA2B,IAHe,mBAG7D2J,EAH6D,KAGtDC,EAHsD,KAK9DC,EAAW7H,sBAAW,sBAAC,4BAAArB,EAAA,yDACtB3B,EADsB,0EAIF4B,IAAMC,IAAN,2BACD7B,IALG,OAInB+B,EAJmB,OAQrB0I,EAAaK,SACfF,EAAS7I,EAASC,KAAK2I,OATA,gDAYzBC,EAAS,IAZgB,yDAc1B,CAACH,EAAczK,IAMlB,OAJAiC,qBAAU,WACR4I,MACC,CAACA,IAGF,kBAACE,GAAA,EAAD,eAAMzC,UAAWe,YAAKb,EAAQtB,KAAMoB,IAAgBC,GAClD,kBAACyC,GAAA,EAAD,CAAYC,MAAM,eAClB,kBAACC,EAAA,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC7G,EAAA,EAAD,KACE,kBAAC8G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGT,EAAMhM,KAAI,SAAA0M,GAAI,OACb,kBAACC,GAAA,EAAD,CAAUC,OAAK,EAAC/E,IAAK6E,EAAKG,KACxB,kBAACC,GAAA,EAAD,KACE,kBAACpH,EAAA,EAAD,CAAKT,QAAQ,OAAO8H,WAAW,UAC7B,kBAACC,GAAA,EAAD,CACEC,IAAI,SACJC,IAAKR,EAAKS,OAAOC,OACjBC,UAAWC,KACXjH,GAAI,UAAYqG,EAAKS,OAAOvN,MAE3BD,aAAY+M,EAAKS,OAAOvN,OAE3B,kBAAC8F,EAAA,EAAD,CAAK6H,GAAI,GACP,kBAACC,GAAA,EAAD,CACEjN,MAAM,cACN8M,UAAWC,KACXjH,GAAI,iBAAmBqG,EAAKe,KAC5BzI,QAAQ,MAEP0H,EAAKJ,QAGV,kBAAC5G,EAAA,EAAD,CAAKgI,SAAU,IACf,kBAACC,GAAA,EAAD,CACE3I,QAAQ,WACRzE,MAAM,UACN4H,MACEkD,GAAMuC,MAAK,SAAA7E,GAAI,OAAIA,EAAKnJ,OAAS8M,EAAKd,UAAQN,KAEhD3B,UAAWE,EAAQ+B,mBAUrC,kBAAClG,EAAA,EAAD,CAAKmI,EAAG,EAAG5I,QAAQ,OAAO6I,eAAe,YACvC,kBAAC3C,EAAA,EAAD,CACEkC,UAAWC,KACXrC,KAAK,QACL5E,GAAG,IACH0H,QAAS,kBAAC,KAAD,OAJX,c,sDC3GF1F,GAAYC,aAAW,SAACnG,GAAD,MAAmB,CAC9CoG,KAAM,GACNyF,SAAU,CACRC,aAAc,WACdC,SAAU,SACVjJ,QAAS,cACT,qBAAsB,WACtB,qBAAsB,KAExBkJ,IAAI,aACFnF,QAAS7G,EAAM8G,QAAQ,IACtB9G,EAAMO,YAAYC,KAAK,MAAQ,CAC9BqG,QAAS7G,EAAM8G,QAAQ,KAG3BmF,KAAM,CACJ7N,MAAO,QAET8N,KAAM,CACJC,WAAY,6CACZ7C,WAAY,YAkLD8C,GA9K+B,SAAC,GAIxC,IAAD,EAHJ5E,EAGI,EAHJA,UACAtI,EAEI,EAFJA,KACGuI,EACC,oCACEC,EAAUxB,KADZ,EAE0BhG,mBAAkB,MAF5C,mBAEGmM,EAFH,KAEYC,EAFZ,OAG4BpM,oBAAkB,GAH9C,mBAGGqM,EAHH,KAGaC,EAHb,KAKJrL,qBAAU,WAQRjC,GAPe,uCAAG,4BAAA2B,EAAA,sEACOC,IAAMC,IAAN,yBAAqC7B,IAD5C,QACV+B,EADU,QAGHC,MACXoL,EAAWrL,EAASC,MAJN,2CAAH,oDAOPuL,KACP,CAACvN,IAIJ,OACE,kBAACwN,GAAA,EAAD,eAAOlF,UAAWe,YAAKb,EAAQtB,KAAMoB,IAAgBC,GACnD,kBAAC,KAAD,KACE,kBAAClE,EAAA,EAAD,CAAKiE,UAAWE,EAAQsE,KACtB,kBAACxD,EAAA,EAAD,CAAMC,WAAS,EAACkE,QAAQ,iBACtB,kBAACnE,EAAA,EAAD,CAAM5B,MAAI,GACR,kBAAChE,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,MAAM,eAA/B,qBAKHiO,GACC,oCACE,kBAAC9I,EAAA,EAAD,CAAKqJ,GAAI,GACP,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAACkE,QAAQ,gBAAgB7F,QAAS,GAC9C,IACD,kBAAC0B,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,GAAIlE,GAAI,IACrB,kBAAC/F,EAAA,EAAD,CACEC,QAAQ,QACRzE,MAAM,cACNoJ,UAAWe,aAAMgE,GAAY7E,EAAQmE,WAEpCQ,EAAQS,aAEX,kBAACzB,GAAA,EAAD,CAAMpC,QA1BH,kBAAMuD,GAAaD,IA0BO/E,UAAWE,EAAQwE,MAAhD,QACQK,EAAW,OAAS,SAG9B,kBAACQ,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACxE,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,EAAGlE,GAAI,IACpB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,UACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQa,SAGb,kBAAC1C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,YACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQc,WAGb,kBAAC3C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,aACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQf,EAAQgB,WAAWC,OAAO,YAM7C,kBAAC9E,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,EAAGlE,GAAI,IACpB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,WACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQkB,QADX,IACqBlB,EAAQmB,KAD7B,IACoCnB,EAAQoB,MAAO,IAChDpB,EAAQqB,IAFX,IAEiBrB,EAAQsB,UAG3B,kBAACnD,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQuB,OACP,kBAAC,KAAD,CACEjN,MAAO0L,EAAQuB,MACfC,YAAa,OACbP,OAAO,wBAKf,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,OACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAUZ,EAAQyB,UAM7C,kBAACf,GAAA,EAAD,CAAQgB,MAAI,GACV,kBAACvF,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,GAAIlE,GAAI,IACrB,kBAAC0B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,UACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQa,SAGb,kBAAC1C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,YACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQc,WAGb,kBAAC3C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,aACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQf,EAAQgB,WAAWC,OAAO,SAGvC,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,WACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdZ,EAAQkB,QADX,IACqBlB,EAAQmB,KAD7B,IACoCnB,EAAQoB,MAAO,IAChDpB,EAAQqB,IAFX,IAEiBrB,EAAQsB,UAG3B,kBAACnD,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAjB,IACIZ,EAAQuB,QAGd,kBAACpD,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,OACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAUZ,EAAQyB,YAQjD,kBAACvK,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACZ,EAAA,EAAD,CAAYoL,cAAY,EAACnL,QAAQ,MAC/B,kBAACwI,GAAA,EAAD,CACE4C,KAAI,UAAE5B,EAAQ6B,eAAV,QAAqB,IACzBC,OAAO,QACP3G,UAAWE,EAAQuE,MAElBI,EAAQ6B,gBCzLvBhI,GAAYC,aAAW,iBAAO,CAClCC,KAAM,OA+EOgI,GA5EuB,SAAC,GAAkC,IAAhC5G,EAA+B,EAA/BA,UAAWtI,EAAoB,EAApBA,KAASuI,EAAW,oCAChEC,EAAUxB,KADsD,EAE1ChG,mBAAmB,MAFuB,mBAE/DmO,EAF+D,KAEvDC,EAFuD,KAiBtE,OAbAnN,qBAAU,WAURjC,GATe,uCAAG,4BAAA2B,EAAA,sEACOC,IAAMC,IAAN,gCACI7B,IAFX,QACV+B,EADU,QAKHC,MACXoN,EAAUrN,EAASC,MANL,2CAAH,oDASPuL,KACP,CAACvN,IAGF,kBAAC+K,GAAA,EAAD,eAAMzC,UAAWe,YAAKb,EAAQtB,KAAMoB,IAAgBC,GAClD,kBAACyC,GAAA,EAAD,CAAYC,MAAM,cAClB,kBAACC,EAAA,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC7G,EAAA,EAAD,KACG8K,GACC,kBAAChE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,iBACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOE,aAAajB,OAAO,SAGxC,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,gBACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOG,YAAYlB,OAAO,YAGvC,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,eACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOI,WAAWnB,OAAO,YAGtC,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,cACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOK,WAAWpB,OAAO,SAGtC,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,sBACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOM,mBAAmBrB,OAAO,SAG9C,kBAAC9C,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,UAAjB,QACA,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UACdG,KAAQiB,EAAOO,MAAMtB,OAAO,kBC7E3CpH,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJyI,WAAY,QAsBDC,GAlBqB,SAAC,GAAc,IAAZ5P,EAAW,EAAXA,KAC/BwI,EAAUxB,KAEhB,OACE,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAAC3B,QAAS,EAAGU,UAAWE,EAAQtB,MAC7C,kBAACoC,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,EAAGlE,GAAI,IACpB,kBAAC,GAAD,CAAUzJ,KAAMA,KAElB,kBAACsJ,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,EAAGlE,GAAI,IACpB,kBAAC,GAAD,CAAWzJ,KAAMA,KAEnB,kBAACsJ,EAAA,EAAD,CAAM5B,MAAI,EAACiG,GAAI,GAAIlE,GAAI,IACrB,kBAAC,GAAD,CAAezJ,KAAMA,O,WCVvB6P,GAAS,CACbC,aAAc,gBACdC,cAAe,kBACfC,YAAa,eACbC,uBAAwB,yBACxBC,uBAAwB,kCACxBC,iBAAkB,oBAClBC,gBAAiB,mBACjBC,sBAAuB,6BACvBC,KAAM,OACNC,eAAgB,kBAChBC,aAAc,gBACdC,UAAW,aACXC,iBAAkB,oBAClBC,UAAW,aACXC,eAAgB,mBAChBC,WAAY,QAqFCC,GAlFyB,SAAC,GAAc,IAAZ9Q,EAAW,EAAXA,KAAW,EACtBgB,mBAAmB,IADG,mBAC7CC,EAD6C,KACpCC,EADoC,OAEtBF,mBAAmB,IAFG,mBAE7C+P,EAF6C,KAEpCC,EAFoC,KA8BpD,OA1BA/O,qBAAU,WAeRjC,GAda,uCAAG,8BAAA2B,EAAA,sEACSC,IAAMC,IAAN,wBAA2B7B,IADpC,QACR+B,EADQ,QAGDC,OACLA,EAAOD,EAASC,KAAKrD,KAAI,SAAA+I,GAC7B,IAAMuJ,EAAO,GAIb,OAHAC,OAAOC,KAAKtB,IAAQuB,SAAQ,SAAAtK,GAC1BmK,EAAKnK,GAASY,EAAKZ,MAEdmK,KAET/P,EAAWc,IAXC,2CAAH,oDAcLR,KACP,CAACxB,IAEJiC,qBAAU,WACR,GAAuB,IAAnBhB,EAAQuD,OAAZ,CAEA,IAAMxC,EAAOf,EAAQtC,KAAI,SAAA0S,GAAM,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQR,cAC3C7O,EAAKsP,QACLN,EAAWhP,MACV,CAACf,IAGF,kBAACoD,EAAA,EAAD,CAAKkN,SAAU,KACb,kBAACpG,GAAA,EAAD,KACE,kBAACqG,GAAA,EAAD,KACE,kBAAClG,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,WACjB,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAjB,OACCgD,EAAQpS,KAAI,SAAA8S,GAAM,OACjB,kBAAChG,GAAA,EAAD,CAAWjF,IAAKiL,EAAQ1D,MAAM,UAC3B0D,QAKRxQ,EAAQuD,OAAS,GAChB,kBAAC4G,GAAA,EAAD,KACG8F,OAAOC,KAAKlQ,EAAQ,IAClByQ,QAAO,SAAAlL,GAAG,MAAY,eAARA,KACd7H,KAAI,SAAA6H,GAAG,OACN,kBAAC8E,GAAA,EAAD,CAAUC,OAAK,EAAC/E,IAAKA,GACnB,kBAACiF,GAAA,EAAD,CAAWsC,MAAM,SAAS7N,MAAO,KAC9B2P,GAAOrJ,IAETmL,MAAM5M,KAAK,CAAEP,OAAQuM,EAAQvM,OAAS,IAAK7F,KAAI,SAACC,EAAGgT,GAAJ,OAC9C,kBAACnG,GAAA,EAAD,CAAWjF,IAAKoL,EAAK7D,MAAM,UACzB9M,EAAQ2Q,GAAKpL,GACoB,kBAAtBvF,EAAQ2Q,GAAKpL,GAClBvF,EAAQ2Q,GAAKpL,IAAQ,EACnB0H,KAAQjN,EAAQ2Q,GAAKpL,GAAb,IAA8B4H,OACpC,OAFJ,WAIMF,KAEFzL,KAAKC,IAAIzB,EAAQ2Q,GAAKpL,GAAb,KACT4H,OAAO,OAPX,KAQAnN,EAAQ2Q,GAAKpL,GACf,gBCrFpBqJ,GAAS,CACbgC,YAAa,eACbC,qBAAsB,yBACtBC,YAAa,cACbC,UAAW,YACXC,mBAAoB,uBACpBC,cAAe,iBACfC,oBAAqB,wBACrBC,uBAAwB,2BACxBC,SAAU,WACVC,iBAAkB,oBAClBC,YAAa,eACbC,YAAa,eACbC,gBAAiB,mBACjBC,oBAAqB,yBACrBC,wBAAyB,4BACzBC,wBAAyB,4BACzBC,aAAc,iBACdC,iBAAkB,oBAClBpC,iBAAkB,oBAClBqC,iBAAkB,oBAClBC,YAAa,eACbC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,kBAAmB,qBACnBC,kBAAmB,sBACnBxC,WAAY,QAqFCyC,GAlFsB,SAAC,GAAc,IAAZtT,EAAW,EAAXA,KAAW,EACnBgB,mBAAoB,IADD,mBAC1CC,EAD0C,KACjCC,EADiC,OAEnBF,mBAAmB,IAFA,mBAE1C+P,EAF0C,KAEjCC,EAFiC,KA8BjD,OA1BA/O,qBAAU,WAeRjC,GAda,uCAAG,8BAAA2B,EAAA,sEACSC,IAAMC,IAAN,+BAAkC7B,IAD3C,QACR+B,EADQ,QAGDC,OACLA,EAAOD,EAASC,KAAKrD,KAAI,SAAA+I,GAC7B,IAAMuJ,EAAO,GAIb,OAHAC,OAAOC,KAAKtB,IAAQuB,SAAQ,SAAAtK,GAC1BmK,EAAKnK,GAASY,EAAKZ,MAEdmK,KAET/P,EAAWc,IAXC,2CAAH,oDAcLR,KACP,CAACxB,IAEJiC,qBAAU,WACR,GAAuB,IAAnBhB,EAAQuD,OAAZ,CAEA,IAAMxC,EAAOf,EAAQtC,KAAI,SAAA0S,GAAM,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQR,cAC3C7O,EAAKsP,QACLN,EAAWhP,MACV,CAACf,IAGF,kBAACoD,EAAA,EAAD,CAAKkN,SAAU,KACb,kBAACpG,GAAA,EAAD,KACE,kBAACqG,GAAA,EAAD,KACE,kBAAClG,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,WACjB,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAjB,OACCgD,EAAQpS,KAAI,SAAA8S,GAAM,OACjB,kBAAChG,GAAA,EAAD,CAAWjF,IAAKiL,EAAQ1D,MAAM,UAC3B0D,QAKRxQ,EAAQuD,OAAS,GAChB,kBAAC4G,GAAA,EAAD,KACG8F,OAAOC,KAAKlQ,EAAQ,IAClByQ,QAAO,SAAAlL,GAAG,MAAY,eAARA,KACd7H,KAAI,SAAA6H,GAAG,OACN,kBAAC8E,GAAA,EAAD,CAAUC,OAAK,EAAC/E,IAAKA,GACnB,kBAACiF,GAAA,EAAD,CAAWsC,MAAM,SAAS7N,MAAO,KAC9B2P,GAAOrJ,IAETmL,MAAM5M,KAAK,CAAEP,OAAQuM,EAAQvM,OAAS,IAAK7F,KAAI,SAACC,EAAGgT,GAAJ,OAC9C,kBAACnG,GAAA,EAAD,CAAWjF,IAAKoL,EAAK7D,MAAM,UACxB9M,EAAQ2Q,GAAKpL,GACmB,kBAAtBvF,EAAQ2Q,GAAKpL,GAClBvF,EAAQ2Q,GAAKpL,IAAQ,EACnB0H,KAAQjN,EAAQ2Q,GAAKpL,GAAb,IAA8B4H,OACpC,OAFJ,WAIMF,KAEFzL,KAAKC,IAAIzB,EAAQ2Q,GAAKpL,GAAb,KACT4H,OAAO,OAPX,KAQAnN,EAAQ2Q,GAAKpL,GACf,gBChGpBqJ,GAAS,CACbc,UAAW,aACX4C,aAAc,eACdC,qBAAsB,yBACtBC,qBAAsB,uBACtBC,WAAY,iBACZC,SAAU,YACVC,oBAAqB,uBACrBC,YAAa,cACbC,cAAe,iBACfC,wBAAyB,6BACzBC,kBAAmB,sBACnBC,mBAAoB,uBACpBC,wBAAyB,sCACzBrD,WAAY,QAqFCsD,GAlFkB,SAAC,GAAc,IAAZnU,EAAW,EAAXA,KAAW,EACfgB,mBAAiB,IADF,mBACtCC,EADsC,KAC7BC,EAD6B,OAEfF,mBAAmB,IAFJ,mBAEtC+P,EAFsC,KAE7BC,EAF6B,KA8B7C,OA1BA/O,qBAAU,WAeRjC,GAda,uCAAG,8BAAA2B,EAAA,sEACSC,IAAMC,IAAN,2BAA8B7B,IADvC,QACR+B,EADQ,QAGDC,OACLA,EAAOD,EAASC,KAAKrD,KAAI,SAAA+I,GAC7B,IAAMuJ,EAAO,GAIb,OAHAC,OAAOC,KAAKtB,IAAQuB,SAAQ,SAAAtK,GAC1BmK,EAAKnK,GAASY,EAAKZ,MAEdmK,KAET/P,EAAWc,IAXC,2CAAH,oDAcLR,KACP,CAACxB,IAEJiC,qBAAU,WACR,GAAuB,IAAnBhB,EAAQuD,OAAZ,CAEA,IAAMxC,EAAOf,EAAQtC,KAAI,SAAA0S,GAAM,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQR,cAC3C7O,EAAKsP,QACLN,EAAWhP,MACV,CAACf,IAGF,kBAACoD,EAAA,EAAD,CAAKkN,SAAU,KACb,kBAACpG,GAAA,EAAD,KACE,kBAACqG,GAAA,EAAD,KACE,kBAAClG,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAWsC,MAAM,WACjB,kBAACtC,GAAA,EAAD,CAAWsC,MAAM,UAAjB,OACCgD,EAAQpS,KAAI,SAAA8S,GAAM,OACjB,kBAAChG,GAAA,EAAD,CAAWjF,IAAKiL,EAAQ1D,MAAM,UAC3B0D,QAKRxQ,EAAQuD,OAAS,GAChB,kBAAC4G,GAAA,EAAD,KACG8F,OAAOC,KAAKlQ,EAAQ,IAClByQ,QAAO,SAAAlL,GAAG,MAAY,eAARA,KACd7H,KAAI,SAAA6H,GAAG,OACN,kBAAC8E,GAAA,EAAD,CAAUC,OAAK,EAAC/E,IAAKA,GACnB,kBAACiF,GAAA,EAAD,CAAWsC,MAAM,SAAS7N,MAAO,KAC9B2P,GAAOrJ,IAETmL,MAAM5M,KAAK,CAAEP,OAAQuM,EAAQvM,OAAS,IAAK7F,KAAI,SAACC,EAAGgT,GAAJ,OAC9C,kBAACnG,GAAA,EAAD,CAAWjF,IAAKoL,EAAK7D,MAAM,UACxB9M,EAAQ2Q,GAAKpL,GACmB,kBAAtBvF,EAAQ2Q,GAAKpL,GAClBvF,EAAQ2Q,GAAKpL,IAAQ,EACnB0H,KAAQjN,EAAQ2Q,GAAKpL,GAAb,IAA8B4H,OACpC,OAFJ,WAIMF,KAEFzL,KAAKC,IAAIzB,EAAQ2Q,GAAKpL,GAAb,KACT4H,OAAO,OAPX,KAQAnN,EAAQ2Q,GAAKpL,GACf,gBCrFpBK,GAAU,CACd,CAAEpF,MAAO,SAAUqF,MAAO,oBAC1B,CAAErF,MAAO,UAAWqF,MAAO,iBAC3B,CAAErF,MAAO,OAAQqF,MAAO,cAGpBE,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJyI,WAAY,GACZyE,UAAW,YA0CAC,GAtCyB,SAAC,GAAc,IAAZrU,EAAW,EAAXA,KACnCwI,EAAUxB,KADoC,EAEhBhG,mBAAiB,UAFD,mBAE7CsT,EAF6C,KAEjCC,EAFiC,KAI9CC,EAAY,SAACvR,GAAD,OAAiBsR,EAActR,EAAMmG,cAAc3H,QAErE,OACE,kBAACgT,EAAA,EAAD,CAAWnM,UAAWE,EAAQtB,KAAMwN,UAAU,GAC5C,kBAACrQ,EAAA,EAAD,CAAKC,GAAI,EAAGV,QAAQ,QACjBiD,GAAQlI,KAAI,SAAA+I,GAAI,OACf,kBAACrD,EAAA,EAAD,CAAKmC,IAAKkB,EAAKjG,MAAOkT,GAAI,GACxB,kBAAC7K,EAAA,EAAD,CACErI,MAAOiG,EAAKjG,MACZkC,QAAQ,WACRiG,KAAK,QACLG,QAASyK,EACTtV,MAAOwI,EAAKjG,QAAU6S,EAAa,UAAY,WAE9C5M,EAAKZ,WAIZ,kBAACzC,EAAA,EAAD,CAAKgI,SAAU,IACf,kBAAChI,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKqI,UAAU,KAAK9M,MAAM,eAA9C,mBAKJ,kBAACmF,EAAA,EAAD,CAAKuQ,GAAI,GACS,WAAfN,GAA2B,kBAAC,GAAD,CAAiBtU,KAAMA,IACnC,YAAfsU,GAA4B,kBAAC,GAAD,CAActU,KAAMA,IACjC,SAAfsU,GAAyB,kBAAC,GAAD,CAAUtU,KAAMA,O,0CCtC5CgH,GAAYC,aAAW,SAACnG,GAAD,MAAmB,CAC9CoG,KAAM,CACJyI,WAAY,IAEdnI,MAAM,aACJ/C,OAAQ,OACRoQ,YAAa,OACZ/T,EAAMO,YAAYC,KAAK,MAAQ,CAC9BmD,OAAQ,SAGZqQ,QAAS,CACPnF,WAAY,EACZoF,cAAe,GAEjBrN,KAAK,eACF5G,EAAMO,YAAYC,KAAK,MAAQ,CAC9BsC,QAAS,QACTiE,UAAW,WAGfmN,KAAM,CACJ3U,OAAQS,EAAM8G,QAAQ,SAuGXqN,GAnGa,SAAC,GAAc,IAAZjV,EAAW,EAAXA,KACvBwI,EAAUxB,KADwB,EAEVhG,mBAAsB,IAFZ,mBAEjCC,EAFiC,KAExBC,EAFwB,OAGZF,mBAAiB,IAHL,mBAGjCkU,EAHiC,KAGzBC,EAHyB,KAKxClT,qBAAU,WAURjC,GATe,uCAAG,WAAOyB,GAAP,eAAAE,EAAA,sEACOC,IAAMC,IAAN,sBACNJ,EADM,kBACSyT,IAFhB,QACVnT,EADU,QAKHC,KAAKA,MAAQD,EAASC,KAAKA,KAAKwC,OAAS,GACpDtD,EAAWa,EAASC,KAAKA,MANX,2CAAH,qDASPuL,CAAUvN,KACjB,CAACA,EAAMkV,IAIV,OACE,kBAACT,EAAA,EAAD,CAAWnM,UAAWE,EAAQtB,KAAMwN,UAAU,GAC3CzT,EAAQuD,OAAS,GAChB,kBAAC8E,EAAA,EAAD,CAAMC,WAAS,EAAC3B,QAAS,EAAG6F,QAAQ,UAClC,kBAACnE,EAAA,EAAD,CAAM5B,MAAI,EAAC+B,GAAI,GAAID,GAAI,GAAImE,GAAI,IAC7B,kBAAC5C,GAAA,EAAD,KACE,kBAACqK,GAAA,EAAD,CAAa9M,UAAWE,EAAQsM,SAC9B,kBAACO,GAAA,EAAD,KACGpU,EAAQtC,KAAI,SAAC0S,EAAmBvM,GAApB,OACX,kBAACwQ,GAAA,EAAD,CACE9O,IAAK1B,EACLyQ,gBAAc,EACdvN,SAAO,EACPM,UAAWE,EAAQd,MAEnB,yBACEkE,IAAI,aACJC,IAAKwF,EAAOmE,UACZlN,UAAWE,EAAQhB,QAErB,kBAACiO,GAAA,EAAD,CACEC,QACE,kBAACvJ,GAAA,EAAD,CACEjN,MAAM,cACN+P,OAAO,SACPF,KAAMsC,EAAOsE,SACbhS,QAAQ,MAEP0N,EAAOpG,OAGZ2K,uBAAwB,CACtBjS,QAAS,QACTzE,MAAO,eAET2W,UACE,kBAACnS,EAAA,EAAD,CACEC,QAAQ,UACRzE,MAAM,gBACN8M,UAAW,QAEVqF,EAAOpH,KACR,6BACCoH,EAAOyE,QAAQpX,MAAM,EAAG,GAAGC,KAAI,SAACoX,EAAQC,GAAT,OAC9B,kBAAC1J,GAAA,EAAD,CACE3I,QAAQ,WACR6C,IAAKwP,EACLpM,KAAK,QACL9C,MAAOiP,EACPzN,UAAWE,EAAQwM,UAbzB,eAgBgB3D,EAAO5R,gBAUvC,kBAAC6J,EAAA,EAAD,CAAM5B,MAAI,EAAC8B,GAAI,GACb,kBAACM,EAAA,EAAD,CACE5K,MAAM,UACNyE,QAAQ,YACRoG,QApEQ,kBAAYoL,EAAUD,EAAS,KAqEvCe,SAAUf,EAAS,GACnBgB,WAAS,GALX,iBCnHNC,GAAO,CACX,CAAE1U,MAAO,WAAYqF,MAAO,YAC5B,CAAErF,MAAO,OAAQqF,MAAO,QACxB,CAAErF,MAAO,aAAcqF,MAAO,uBAC9B,CAAErF,MAAO,MAAOqF,MAAO,gBAGnBE,GAAYC,aAAW,SAACnG,GAAD,MAAmB,CAC9CoG,KAAM,CACJE,gBAAiBtG,EAAMuG,QAAQpI,WAAWmX,KAC1CzG,WAAY7O,EAAM8G,QAAQ,GAC1BmN,cAAejU,EAAM8G,QAAQ,QAgDlByO,UA5CQ,WACrB,IAAM7N,EAAUxB,KACVsP,EAAWC,cAFU,EAGHvV,mBAAiB,MAHd,mBAGpBhB,EAHoB,KAGdwW,EAHc,OAISxV,mBAAiB,YAJ1B,mBAIpBsT,EAJoB,KAIRC,EAJQ,KAM3BtS,qBAAU,WACR,IAAMR,EAAQ6U,EAASG,SAAShY,MAAM,KAAK,GAC3CgD,GAAS+U,EAAQ/U,KAChB,CAAC6U,IAMJ,OACE,kBAACI,EAAA,EAAD,CAAMpO,UAAWE,EAAQtB,KAAM+D,MAAOjL,EAAI,UAAMA,EAAN,gBAA2B,IACnE,kBAACyU,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,GAAD,CAAQ1U,KAAMA,IACd,kBAACqE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACqS,EAAA,EAAD,CACEC,SAVe,SAAC3T,EAAoBxB,GAC5C8S,EAAc9S,IAUNoV,cAAc,OACdpV,MAAO6S,EACPwC,UAAU,YACVnT,QAAQ,cAEPwS,GAAKxX,KAAI,SAAAoY,GAAG,OACX,kBAACC,EAAA,EAAD,CAAKxQ,IAAKuQ,EAAItV,MAAOqF,MAAOiQ,EAAIjQ,MAAOrF,MAAOsV,EAAItV,aAIxD,kBAACyJ,EAAA,EAAD,MACA,kBAAC7G,EAAA,EAAD,CAAKuQ,GAAI,GACS,aAAfN,GAA6B,kBAAC,GAAD,CAAUtU,KAAMA,IAC9B,SAAfsU,GAAyB,kBAAC,GAAD,CAAMtU,KAAMA,IACtB,eAAfsU,GAA+B,kBAAC,GAAD,CAAYtU,KAAMA,IAClC,QAAfsU,GAAwB,kBAAC,GAAD,CAAYtU,KAAMA","file":"static/js/25.6f890dec.chunk.js","sourcesContent":["const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport { AreaClosed, Line, Bar } from '@visx/shape';\r\nimport { AppleStock } from '@visx/mock-data/lib/mocks/appleStock';\r\nimport { curveMonotoneX } from '@visx/curve';\r\nimport { GridRows } from '@visx/grid';\r\nimport { scaleTime, scaleLinear } from '@visx/scale';\r\nimport { withTooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\r\nimport { WithTooltipProvidedProps } from '@visx/tooltip/lib/enhancers/withTooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { LinearGradient } from '@visx/gradient';\r\nimport { max, min, extent, bisector } from 'd3-array';\r\nimport { timeFormat } from 'd3-time-format';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { Chart, Quote } from 'src/types/stock';\r\n\r\ntype TooltipData = AppleStock;\r\n\r\nconst background = '#3b6978';\r\nconst background2 = '#204051';\r\nconst accentColor = '#edffea';\r\nconst accentColorDark = '#75daad';\r\nconst tooltipStyles = {\r\n  ...defaultStyles,\r\n  background: 'transparent',\r\n  color: '#fff',\r\n  boxShadow: 'none'\r\n};\r\nconst formatDate = timeFormat(\"%b %d, '%y\");\r\nconst getDate = (d: AppleStock) => new Date(d.date);\r\nconst getStockValue = (d: AppleStock) => d.close;\r\nconst bisectDate = bisector<AppleStock, Date>(d => new Date(d.date)).left;\r\n\r\ninterface StockVisxWrapperProps {\r\n  className?: string;\r\n  path: string;\r\n  period: string;\r\n  width?: number;\r\n  ratio?: number;\r\n  name: string;\r\n  color?: any;\r\n  quote?: Quote;\r\n  margin?: { top: number; right: number; bottom: number; left: number };\r\n}\r\n\r\nexport default withTooltip<StockVisxWrapperProps, TooltipData>(\r\n  ({\r\n    path,\r\n    period,\r\n    width,\r\n    ratio,\r\n    quote,\r\n    name,\r\n    color,\r\n    margin = { top: 0, right: 15, bottom: 0, left: 15 },\r\n    showTooltip,\r\n    hideTooltip,\r\n    tooltipData,\r\n    tooltipTop = 0,\r\n    tooltipLeft = 0\r\n  }: StockVisxWrapperProps & WithTooltipProvidedProps<TooltipData>) => {\r\n    const theme = useTheme();\r\n    const [results, setResults] = useState<any[]>([]);\r\n    const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const innerWidth = mobileDevice ? 150 : width;\r\n    const innerHeight = innerWidth * ratio - margin.top;\r\n\r\n    const getData = async (value: string, type: string) => {\r\n      const response = await axios.get<Chart[]>(`/stock/chart/${value}`, {\r\n        params: { type }\r\n      });\r\n      setResults(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n      path && getData(path, period);\r\n    }, [path, period]);\r\n\r\n    const dateScale = useMemo(\r\n      () =>\r\n        scaleTime({\r\n          range: [0, innerWidth - margin.left],\r\n          domain: extent(results, getDate) as [Date, Date]\r\n        }),\r\n      [innerWidth, results, margin.left]\r\n    );\r\n\r\n    const stockValueScale = useMemo(() => {\r\n      const value =\r\n        Math.abs(max(results, getStockValue) - min(results, getStockValue)) / 2;\r\n\r\n      return scaleLinear({\r\n        range: [innerHeight + margin.top, margin.top],\r\n        domain: [\r\n          min(results, getStockValue) - value / 3 || 0,\r\n          max(results, getStockValue) + value || 0\r\n        ],\r\n        nice: true\r\n      });\r\n    }, [innerHeight, results, margin.top]);\r\n\r\n    const handleTooltip = useCallback(\r\n      (\r\n        event:\r\n          | React.TouchEvent<SVGRectElement>\r\n          | React.MouseEvent<SVGRectElement>\r\n      ) => {\r\n        const { x } = localPoint(event) || { x: 0 };\r\n        const x0 = dateScale.invert(x);\r\n        const index = bisectDate(results, x0, 1);\r\n        const d0 = results[index - 1];\r\n        const d1 = results[index];\r\n        let d = d0;\r\n        if (d1 && getDate(d1)) {\r\n          d =\r\n            x0.valueOf() - getDate(d0).valueOf() >\r\n            getDate(d1).valueOf() - x0.valueOf()\r\n              ? d1\r\n              : d0;\r\n        }\r\n        showTooltip({\r\n          tooltipData: d,\r\n          tooltipLeft: x,\r\n          tooltipTop: stockValueScale(getStockValue(d))\r\n        });\r\n      },\r\n      [showTooltip, stockValueScale, dateScale, results]\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\r\n          {`${name} - `}\r\n        </Typography>\r\n        {quote && (\r\n          <Typography\r\n            variant=\"body1\"\r\n            display=\"inline\"\r\n            style={{ color: color.quote }}\r\n          >\r\n            ${tooltipData ? getStockValue(tooltipData) : quote.latestPrice}{' '}\r\n            {quote.change >= 0 ? '+' : '-'}$\r\n            {typeof quote.change === 'number'\r\n              ? Math.abs(quote.change)\r\n              : quote.change}{' '}\r\n            ({quote.changePercent >= 0 && '+'}\r\n            {(quote.changePercent as number) * 100}%)\r\n          </Typography>\r\n        )}\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n          {`After Hours - `}\r\n          {quote && (\r\n            <Typography\r\n              variant=\"body1\"\r\n              display=\"inline\"\r\n              style={{ color: color.preQuote }}\r\n            >\r\n              ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\r\n              {typeof quote.extendedChange === 'number'\r\n                ? Math.abs(quote.extendedChange)\r\n                : quote.extendedChange}{' '}\r\n              ({quote.extendedChangePercent >= 0 && '+'}\r\n              {(quote.extendedChangePercent as number) * 100}%)\r\n            </Typography>\r\n          )}\r\n        </Typography>\r\n        <Box mt={3}>\r\n          <div style={{ position: 'relative' }}>\r\n            {results.length > 0 && (\r\n              <>\r\n                <svg width={innerWidth} height={innerHeight}>\r\n                  <rect\r\n                    x={0}\r\n                    y={0}\r\n                    width={innerWidth}\r\n                    height={innerHeight}\r\n                    fill=\"url(#area-background-gradient)\"\r\n                    rx={3}\r\n                  />\r\n                  <LinearGradient\r\n                    id=\"area-background-gradient\"\r\n                    from={background}\r\n                    to={background2}\r\n                  />\r\n                  <LinearGradient\r\n                    id=\"area-gradient\"\r\n                    from={accentColor}\r\n                    to={accentColor}\r\n                    toOpacity={0.1}\r\n                  />\r\n                  <GridRows\r\n                    left={0}\r\n                    scale={stockValueScale}\r\n                    width={innerWidth}\r\n                    strokeDasharray=\"1,3\"\r\n                    stroke={accentColor}\r\n                    strokeOpacity={0}\r\n                    pointerEvents=\"none\"\r\n                  />\r\n                  <AreaClosed<AppleStock>\r\n                    data={results}\r\n                    x={d => dateScale(getDate(d)) ?? 0}\r\n                    y={d => stockValueScale(getStockValue(d)) ?? 0}\r\n                    yScale={stockValueScale}\r\n                    strokeWidth={1}\r\n                    stroke=\"url(#area-gradient)\"\r\n                    fill=\"url(#area-gradient)\"\r\n                    curve={curveMonotoneX}\r\n                  />\r\n                  <Bar\r\n                    x={0}\r\n                    y={margin.top}\r\n                    width={innerWidth - margin.left}\r\n                    height={innerHeight}\r\n                    fill=\"transparent\"\r\n                    rx={14}\r\n                    onTouchStart={handleTooltip}\r\n                    onTouchMove={handleTooltip}\r\n                    onMouseMove={handleTooltip}\r\n                    onMouseLeave={() => hideTooltip()}\r\n                  />\r\n                  {tooltipData && (\r\n                    <g>\r\n                      <Line\r\n                        from={{ x: tooltipLeft, y: margin.top }}\r\n                        to={{ x: tooltipLeft, y: innerHeight + margin.top }}\r\n                        stroke={accentColorDark}\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                        strokeDasharray=\"5,2\"\r\n                      />\r\n                      <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop + 1}\r\n                        r={4}\r\n                        fill=\"black\"\r\n                        fillOpacity={0.1}\r\n                        stroke=\"black\"\r\n                        strokeOpacity={0.1}\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                      />\r\n                      <circle\r\n                        cx={tooltipLeft}\r\n                        cy={tooltipTop}\r\n                        r={4}\r\n                        fill={accentColorDark}\r\n                        stroke=\"white\"\r\n                        strokeWidth={2}\r\n                        pointerEvents=\"none\"\r\n                      />\r\n                    </g>\r\n                  )}\r\n                </svg>\r\n                {tooltipData && (\r\n                  <div>\r\n                    <TooltipWithBounds\r\n                      key={Math.random()}\r\n                      top={tooltipTop - 12}\r\n                      left={tooltipLeft + 12}\r\n                      style={tooltipStyles}\r\n                    >\r\n                      {formatDate(getDate(tooltipData))}\r\n                    </TooltipWithBounds>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport {\n  Grid,\n  ButtonGroup,\n  Button,\n  Box,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Quote } from 'src/types/stock';\nimport StockVisxWrapper from 'src/components/StockVisxWrapper';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst buttons = [\n  { name: 'dynamic', label: '1D', visible: true },\n  { name: '5d', label: '5D', visible: true },\n  { name: '1m', label: '1M', visible: true },\n  { name: '3m', label: '3M', visible: false },\n  { name: '1y', label: '1Y', visible: true },\n  { name: '5y', label: '5Y', visible: false },\n  { name: 'max', label: 'ALL', visible: true }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n  const [period, setPeriod] = useState<string>('dynamic');\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(`/stock/quote/${value}`);\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    fecthQuote(path);\n  }, [path]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  const handleClick = (event): void => setPeriod(event.currentTarget.name);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item md={6} xs={12}>\n          <StockVisxWrapper\n            period={period}\n            path={path}\n            name={name}\n            quote={quote}\n            color={color}\n            width={700}\n            ratio={0.4}\n          />\n        </Grid>\n        <Grid item md={6}>\n          <Box mt={9} style={{ textAlign: 'end' }}>\n            <ButtonGroup color=\"primary\" size=\"small\">\n              {buttons.map(button => (\n                <Button\n                  key={button.name}\n                  name={button.name}\n                  onClick={handleClick}\n                  variant={period === button.name ? 'contained' : 'outlined'}\n                >\n                  {button.label}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Chip,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor, Picker } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\ninterface PickerStatus {\r\n  name: Picker;\r\n  text: string;\r\n}\r\n\r\nconst chips: PickerStatus[] = [\r\n  { name: 'bullish', text: 'Bullish' },\r\n  { name: 'bearish', text: 'Bearish' },\r\n  { name: 'neutral', text: 'Neutral' },\r\n  { name: 'no_opinion', text: 'No Opinion' }\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  picker: {}\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank Reads\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                      <Box flexGrow={1} />\r\n                      <Chip\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        label={\r\n                          chips.find(item => item.name === post.picker).text\r\n                        }\r\n                        className={classes.picker}\r\n                      />\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport NumberFormat from 'react-number-format';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Hidden,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  collapse: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    display: '-webkit-box',\r\n    '-webkit-box-orient': 'vertical',\r\n    '-webkit-line-clamp': '3'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3)\r\n    }\r\n  },\r\n  link: {\r\n    color: '#fff'\r\n  },\r\n  more: {\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontWeight: 'bold'\r\n  }\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(`/stock/company/${path}`);\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  const handleExpand = () => setExpanded(!expanded);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box className={classes.box}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className={clsx(!expanded && classes.collapse)}\r\n                    >\r\n                      {profile.description}\r\n                    </Typography>\r\n                    <Link onClick={handleExpand} className={classes.more}>\r\n                      Read {expanded ? 'less' : 'more'}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Hidden mdDown>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.phone && (\r\n                                <NumberFormat\r\n                                  value={profile.phone}\r\n                                  displayType={'text'}\r\n                                  format=\"+1 (###) ###-####\"\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                  <Hidden lgUp>\r\n                    <Grid item lg={12} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              +{profile.phone}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                  <Link\r\n                    href={profile.website ?? '#'}\r\n                    target=\"blank\"\r\n                    className={classes.link}\r\n                  >\r\n                    {profile.website}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `/stock/advanced-stats/${path}`\r\n      );\r\n\r\n      if (response.data) {\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Key Stats\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          {source && (\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.avg10Volume).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week High</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52high).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week Low</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52low).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Market Cap</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.marketcap).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.sharesOutstanding).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Beta</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.beta).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.root}>\r\n      <Grid item lg={6} xs={12}>\r\n        <DankNews path={path} />\r\n      </Grid>\r\n      <Grid item lg={6} xs={12}>\r\n        <KeyGlance path={path} />\r\n      </Grid>\r\n      <Grid item lg={12} xs={12}>\r\n        <ProfileGlance path={path} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { Income } from 'src/types/stock';\n\ninterface PostsProps {\n  path: string;\n}\n\nconst labels = {\n  totalRevenue: 'Total Revenue',\n  costOfRevenue: 'Cost of Revenue',\n  grossProfit: 'Gross Profit',\n  researchAndDevelopment: 'Research & Development',\n  sellingGeneralAndAdmin: 'General, Selling, & Admin Costs',\n  operatingExpense: 'Operating Expense',\n  operatingIncome: 'Operating Income',\n  otherIncomeExpenseNet: 'Other Income Next Expenses',\n  ebit: 'EBIT',\n  interestIncome: 'Interest Income',\n  pretaxIncome: 'Pretax Income',\n  incomeTax: 'Income Tax',\n  minorityInterest: 'Minority Interest',\n  netIncome: 'Net Income',\n  netIncomeBasic: 'Net Income Basic',\n  fiscalYear: 'Year'\n};\n\nconst IncomeStatement: FC<PostsProps> = ({ path }) => {\n  const [results, setResults] = useState<Income[]>([]);\n  const [columns, setColumns] = useState<number[]>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get(`/stock/income/${path}`);\n\n      if (response.data) {\n        const data = response.data.map(item => {\n          const temp = {};\n          Object.keys(labels).forEach(label => {\n            temp[label] = item[label];\n          });\n          return temp;\n        });\n        setResults(data);\n      }\n    };\n    path && getData();\n  }, [path]);\n\n  useEffect(() => {\n    if (results.length === 0) return;\n\n    const data = results.map(result => result?.fiscalYear);\n    data.shift();\n    setColumns(data);\n  }, [results]);\n\n  return (\n    <Box minWidth={700}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" />\n            <TableCell align=\"center\">YTD</TableCell>\n            {columns.map(column => (\n              <TableCell key={column} align=\"center\">\n                {column}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {results.length > 0 && (\n          <TableBody>\n            {Object.keys(results[0])\n              .filter(key => key !== 'fiscalYear')\n              .map(key => (\n                <TableRow hover key={key}>\n                  <TableCell align=\"center\" width={100}>\n                    {labels[key]}\n                  </TableCell>\n                  {Array.from({ length: columns.length + 1 }).map((v, idx) => (\n                    <TableCell key={idx} align=\"center\">\n                     {results[idx][key]\n                        ? typeof results[idx][key] === 'number'\n                          ? results[idx][key] >= 0\n                            ? numeral(results[idx][key] / (10 ^ 6)).format(\n                                '0,0'\n                              )\n                            : `(${numeral(\n                                // @ts-ignore\n                                Math.abs(results[idx][key] / (10 ^ 6))\n                              ).format('0,0')})`\n                          : results[idx][key]\n                        : '-'}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n          </TableBody>\n        )}\n      </Table>\n    </Box>\n  );\n};\n\nIncomeStatement.propTypes = {\n  path: PropTypes.string\n};\n\nexport default IncomeStatement;\n","import React, { FC, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { Balance } from 'src/types/stock';\n\ninterface PostsProps {\n  path: string;\n}\n\nconst labels = {\n  currentCash: 'Current Cash',\n  shortTermInvestments: 'Short Term Investments',\n  receivables: 'Receivables',\n  inventory: 'Inventory',\n  otherCurrentAssets: 'Other Current Assets',\n  currentAssets: 'Current Assets',\n  longTermInvestments: 'Long Term Investments',\n  propertyPlantEquipment: 'Property Plant Equipment',\n  goodwill: 'Goodwill',\n  intangibleAssets: 'Intangible Assets',\n  otherAssets: 'Other Assets',\n  totalAssets: 'Total Assets',\n  accountsPayable: 'Accounts Payable',\n  currentLongTermDebt: 'Current Long Term Debt',\n  otherCurrentLiabilities: 'Other Current Liabilities',\n  totalCurrentLiabilities: 'Total Current Liabilities',\n  longTermDebt: 'long Term Debt',\n  otherLiabilities: 'Other Liabilities',\n  minorityInterest: 'Minority Interest',\n  totalLiabilities: 'Total Liabilities',\n  commonStock: 'Common Stock',\n  retainedEarnings: 'Retained Earnings',\n  treasuryStock: 'Treasury Stock',\n  capitalSurplus: 'Capital Surplus',\n  shareholderEquity: 'Shareholder Equity',\n  netTangibleAssets: 'Net Tangible Assets',\n  fiscalYear: 'Year'\n};\n\nconst BalanceSheet: FC<PostsProps> = ({ path }) => {\n  const [results, setResults] = useState<Balance[]>([]);\n  const [columns, setColumns] = useState<number[]>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get(`/stock/balance-sheet/${path}`);\n\n      if (response.data) {\n        const data = response.data.map(item => {\n          const temp = {};\n          Object.keys(labels).forEach(label => {\n            temp[label] = item[label];\n          });\n          return temp;\n        });\n        setResults(data);\n      }\n    };\n    path && getData();\n  }, [path]);\n\n  useEffect(() => {\n    if (results.length === 0) return;\n\n    const data = results.map(result => result?.fiscalYear);\n    data.shift();\n    setColumns(data);\n  }, [results]);\n\n  return (\n    <Box minWidth={700}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" />\n            <TableCell align=\"center\">YTD</TableCell>\n            {columns.map(column => (\n              <TableCell key={column} align=\"center\">\n                {column}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {results.length > 0 && (\n          <TableBody>\n            {Object.keys(results[0])\n              .filter(key => key !== 'fiscalYear')\n              .map(key => (\n                <TableRow hover key={key}>\n                  <TableCell align=\"center\" width={100}>\n                    {labels[key]}\n                  </TableCell>\n                  {Array.from({ length: columns.length + 1 }).map((v, idx) => (\n                    <TableCell key={idx} align=\"center\">\n                      {results[idx][key]\n                        ? typeof results[idx][key] === 'number'\n                          ? results[idx][key] >= 0\n                            ? numeral(results[idx][key] / (10 ^ 6)).format(\n                                '0,0'\n                              )\n                            : `(${numeral(\n                                // @ts-ignore\n                                Math.abs(results[idx][key] / (10 ^ 6))\n                              ).format('0,0')})`\n                          : results[idx][key]\n                        : '-'}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n          </TableBody>\n        )}\n      </Table>\n    </Box>\n  );\n};\n\nBalanceSheet.propTypes = {\n  path: PropTypes.string\n};\n\nexport default BalanceSheet;\n","import React, { FC, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { Cash } from 'src/types/stock';\n\ninterface PostsProps {\n  path: string;\n}\n\nconst labels = {\n  netIncome: 'Net Income',\n  depreciation: 'Depreciation',\n  changesInReceivables: 'Changes In Receivables',\n  changesInInventories: 'Changes In Inventory',\n  cashChange: 'Change In Cash',\n  cashFlow: 'Cash Flow',\n  capitalExpenditures: 'Capital Expenditures',\n  investments: 'Investments',\n  netBorrowings: 'Net Borrowings',\n  otherFinancingCashFlows: 'Other Financing Cash Flows',\n  cashFlowFinancing: 'Cash Flow Financing',\n  exchangeRateEffect: 'Exchange Rate Effect',\n  totalInvestingCashFlows: 'Cash Flow from Investing Activities',\n  fiscalYear: 'Year'\n};\n\nconst CashFlow: FC<PostsProps> = ({ path }) => {\n  const [results, setResults] = useState<Cash[]>([]);\n  const [columns, setColumns] = useState<number[]>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await axios.get(`/stock/cash-flow/${path}`);\n\n      if (response.data) {\n        const data = response.data.map(item => {\n          const temp = {};\n          Object.keys(labels).forEach(label => {\n            temp[label] = item[label];\n          });\n          return temp;\n        });\n        setResults(data);\n      }\n    };\n    path && getData();\n  }, [path]);\n\n  useEffect(() => {\n    if (results.length === 0) return;\n\n    const data = results.map(result => result?.fiscalYear);\n    data.shift();\n    setColumns(data);\n  }, [results]);\n\n  return (\n    <Box minWidth={700}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" />\n            <TableCell align=\"center\">YTD</TableCell>\n            {columns.map(column => (\n              <TableCell key={column} align=\"center\">\n                {column}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        {results.length > 0 && (\n          <TableBody>\n            {Object.keys(results[0])\n              .filter(key => key !== 'fiscalYear')\n              .map(key => (\n                <TableRow hover key={key}>\n                  <TableCell align=\"center\" width={100}>\n                    {labels[key]}\n                  </TableCell>\n                  {Array.from({ length: columns.length + 1 }).map((v, idx) => (\n                    <TableCell key={idx} align=\"center\">\n                      {results[idx][key]\n                        ? typeof results[idx][key] === 'number'\n                          ? results[idx][key] >= 0\n                            ? numeral(results[idx][key] / (10 ^ 6)).format(\n                                '0,0'\n                              )\n                            : `(${numeral(\n                                // @ts-ignore\n                                Math.abs(results[idx][key] / (10 ^ 6))\n                              ).format('0,0')})`\n                          : results[idx][key]\n                        : '-'}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n          </TableBody>\n        )}\n      </Table>\n    </Box>\n  );\n};\n\nCashFlow.propTypes = {\n  path: PropTypes.string\n};\n\nexport default CashFlow;\n","import React, { FC, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport IncomeStatement from './IncomeStatement';\r\nimport BalanceSheet from './BalanceSheet';\r\nimport CashFlow from './CashFlow';\r\n\r\ninterface FinancialsProps {\r\n  path: string;\r\n}\r\n\r\nconst buttons = [\r\n  { value: 'income', label: 'Income Statement' },\r\n  { value: 'balance', label: 'Balance Sheet' },\r\n  { value: 'flow', label: 'Cash Flow' }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32,\r\n    minHeight: '30vh'\r\n  }\r\n}));\r\n\r\nconst Financials: FC<FinancialsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [currentTab, setCurrentTab] = useState<string>('income');\r\n\r\n  const handleTab = (event): void => setCurrentTab(event.currentTarget.value);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Box mt={1} display=\"flex\">\r\n        {buttons.map(item => (\r\n          <Box key={item.value} mr={2}>\r\n            <Button\r\n              value={item.value}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={handleTab}\r\n              color={item.value === currentTab ? 'primary' : 'default'}\r\n            >\r\n              {item.label}\r\n            </Button>\r\n          </Box>\r\n        ))}\r\n        <Box flexGrow={1} />\r\n        <Box>\r\n          <Typography variant=\"h5\" component=\"h5\" color=\"textPrimary\">\r\n            (In millions)\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Box pb={6}>\r\n        {currentTab === 'income' && <IncomeStatement path={path} />}\r\n        {currentTab === 'balance' && <BalanceSheet path={path} />}\r\n        {currentTab === 'flow' && <CashFlow path={path} />}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Financials;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { StockNews } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 32\r\n  },\r\n  image: {\r\n    height: '15vh',\r\n    marginRight: '2vw',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '20vh'\r\n    }\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst News: FC<NewsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState<StockNews[]>([]);\r\n  const [amount, setAmount] = useState<number>(10);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (value: string) => {\r\n      const response = await axios.get<{ data: StockNews[] }>(\r\n        `/stock/news/${value}?items=${amount}`\r\n      );\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        setResults(response.data.data);\r\n      }\r\n    };\r\n    path && fetchData(path);\r\n  }, [path, amount]);\r\n\r\n  const handleClick = (): void => setAmount(amount + 10);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      {results.length > 0 && (\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Card>\r\n              <CardContent className={classes.content}>\r\n                <List>\r\n                  {results.map((result: StockNews, id) => (\r\n                    <ListItem\r\n                      key={id}\r\n                      disableGutters\r\n                      divider\r\n                      className={classes.item}\r\n                    >\r\n                      <img\r\n                        alt=\"Stock News\"\r\n                        src={result.image_url}\r\n                        className={classes.image}\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            target=\"_blank\"\r\n                            href={result.news_url}\r\n                            variant=\"h5\"\r\n                          >\r\n                            {result.title}\r\n                          </Link>\r\n                        }\r\n                        primaryTypographyProps={{\r\n                          variant: 'body1',\r\n                          color: 'textPrimary'\r\n                        }}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component={'span'}\r\n                          >\r\n                            {result.text}\r\n                            <br />\r\n                            {result.tickers.slice(0, 2).map((ticker, i) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                key={i}\r\n                                size=\"small\"\r\n                                label={ticker}\r\n                                className={classes.chip}\r\n                              />\r\n                            ))}\r\n                            {` | Date`}: {result.date}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClick}\r\n              disabled={amount > 40}\r\n              fullWidth\r\n            >\r\n              Read More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\nimport Financials from './Financials';\nimport News from './News';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'news', label: 'News' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'sec', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('opinions');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n          {currentTab === 'news' && <News path={path} />}\n          {currentTab === 'financials' && <Financials path={path} />}\n          {currentTab === 'sec' && <Financials path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}