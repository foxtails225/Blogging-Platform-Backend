{"version":3,"sources":["views/symbol/SymbolView/Header.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/index.tsx"],"names":["initialColor","quote","colors","green","preQuote","useStyles","makeStyles","theme","root","action","backgroundColor","palette","common","white","image","width","maxHeight","item","padding","spacing","textAlign","breakpoints","up","borderRight","divider","down","borderBottom","label","marginLeft","overline","marginTop","Header","className","path","rest","classes","useState","name","setName","setQuote","color","setColor","source","setSource","options","setOptions","darkUnica","Highcharts","useEffect","fecthQuote","value","a","axios","get","IEX_BASE_URL","params","token","env","IEX_TOKEN","response","data","quoteData","latestPrice","change","changePercent","extendedPrice","extendedChange","extendedChangePercent","companyName","fetchHistory","length","map","Date","parse","date","close","title","text","chart","height","legend","enabled","xAxis","type","gapGridLineWidth","rangeSelector","buttons","count","selected","series","threshold","tooltip","valueDecimals","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","setOpacity","quoteColor","red","preQuoteColor","clsx","Grid","alignItems","container","justify","md","xs","Typography","variant","display","style","Math","abs","Box","mt","highcharts","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","useCallback","current","Card","CardHeader","Divider","Table","TableBody","post","TableRow","hover","key","_id","TableCell","Avatar","alt","src","author","avatar","component","RouterLink","to","getInitials","ml","Link","slug","p","justifyContent","Button","size","endIcon","ProfileGlance","profile","setProfile","fetchData","Paper","minWidth","my","lg","description","align","sector","industry","employees","address","city","state","zip","country","phone","CEO","gutterBottom","website","KeyGlance","console","log","avg10Volume","peHigh","peLow","marketcap","sharesOutstanding","beta","paddingTop","Opinions","Container","maxWidth","tabs","background","dark","paddingBottom","SymbolView","location","useLocation","setPath","currentTab","setCurrentTab","pathname","split","Page","Tabs","onChange","event","scrollButtons","textColor","tab","Tab","py","pb"],"mappings":"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","file":"static/js/24.41cd745d.chunk.js","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport Highcharts from 'highcharts/highstock';\nimport darkUnica from 'highcharts/themes/dark-unica';\nimport HighchartsReact from 'highcharts-react-official';\nimport { Grid, Typography, Box, makeStyles, colors } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Chart, Quote } from 'src/types/stock';\nimport { env } from 'src/config';\nimport { IEX_BASE_URL } from 'src/constants';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n  const [source, setSource] = useState<any[]>([]);\n  const [options, setOptions] = useState<any>();\n  darkUnica(Highcharts);\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(\n        `${IEX_BASE_URL}/stock/${value}/quote`,\n        {\n          params: { token: env.IEX_TOKEN }\n        }\n      );\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    const fetchHistory = async (value: string) => {\n      const response = await axios.get<Chart[]>(\n        `${IEX_BASE_URL}/stock/${value}/chart/max`,\n        {\n          params: { token: env.IEX_TOKEN }\n        }\n      );\n\n      if (response.data && response.data.length > 0) {\n        let data = response.data.map(item => {\n          return [Date.parse(item.date), item.close];\n        });\n        setSource(data);\n      }\n    };\n\n    fecthQuote(path);\n    fetchHistory(path);\n  }, [path]);\n\n  useEffect(() => {\n    const data = {\n      title: {\n        text: name ? name : ''\n      },\n      chart: { height: '40%' },\n      legend: {\n        enabled: false\n      },\n      xAxis: {\n        type: 'datetime',\n        gapGridLineWidth: 0\n      },\n      rangeSelector: {\n        buttons: [\n          {\n            type: 'day',\n            count: 1,\n            text: '1d'\n          },\n          {\n            type: 'week',\n            count: 1,\n            text: '1w'\n          },\n          {\n            type: 'month',\n            count: 1,\n            text: '1m'\n          },\n          {\n            type: 'year',\n            count: 1,\n            text: '1y'\n          },\n          {\n            type: 'all',\n            text: 'All'\n          }\n        ],\n        selected: 2,\n        enabled: true\n      },\n      series: [\n        {\n          name: name ? name : '',\n          data: source,\n          type: 'area',\n          threshold: null,\n          tooltip: {\n            valueDecimals: 2\n          },\n          fillColor: {\n            linearGradient: {\n              x1: 0,\n              y1: 0,\n              x2: 0,\n              y2: 1\n            },\n            stops: [\n              [0, Highcharts.getOptions().colors[0]],\n              [\n                1,\n                Highcharts.color(Highcharts.getOptions().colors[0])\n                  .setOpacity(0)\n                  .get('rgba')\n              ]\n            ]\n          }\n        }\n      ]\n    };\n    setOptions(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [source]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\n            {`${name} - `}\n          </Typography>\n          {quote && (\n            <Typography\n              variant=\"body1\"\n              display=\"inline\"\n              style={{ color: color.quote }}\n            >\n              ${quote.latestPrice} {quote.change >= 0 ? '+' : '-'}$\n              {typeof quote.change === 'number'\n                ? Math.abs(quote.change)\n                : quote.change}{' '}\n              ({quote.changePercent >= 0 && '+'}\n              {quote.changePercent}%)\n            </Typography>\n          )}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`After Hours - `}\n            {quote && (\n              <Typography\n                variant=\"body1\"\n                display=\"inline\"\n                style={{ color: color.preQuote }}\n              >\n                ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\n                {typeof quote.extendedChange === 'number'\n                  ? Math.abs(quote.extendedChange)\n                  : quote.extendedChange}{' '}\n                ({quote.extendedChangePercent >= 0 && '+'}\n                {quote.extendedChangePercent}%)\n              </Typography>\n            )}\n          </Typography>\n          {source.length > 0 && (\n            <Box mt={3}>\n              <HighchartsReact highcharts={Highcharts} options={options} />\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  }\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank News\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { IEX_BASE_URL } from 'src/constants';\r\nimport { env } from 'src/config';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(\r\n        `${IEX_BASE_URL}/stock/${path}/company`,\r\n        {\r\n          params: { token: env.IEX_TOKEN }\r\n        }\r\n      );\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800} p={6}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography variant=\"body1\" color=\"textPrimary\">\r\n                      {profile.description}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Sector</TableCell>\r\n                          <TableCell align=\"center\">{profile.sector}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Industry</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.industry}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Employees</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.employees}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Address</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.address} {profile.city} {profile.state}{' '}\r\n                            {profile.zip} {profile.country}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Phone Number</TableCell>\r\n                          <TableCell align=\"center\">+{profile.phone}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">CEO</TableCell>\r\n                          <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\" color=\"textPrimary\">\r\n                  Official Website: {profile.website}\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\nimport { IEX_BASE_URL } from 'src/constants';\r\nimport { env } from 'src/config';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `${IEX_BASE_URL}/stock/${path}/advanced-stats`,\r\n        {\r\n          params: { token: env.IEX_TOKEN }\r\n        }\r\n      );\r\n\r\n      if (response.data) {\r\n        console.log(response.data);\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800} p={6}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Key Stats\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {source && (\r\n            <Box my={4}>\r\n              <Grid container justify=\"space-between\" spacing={3}>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Table>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {source.avg10Volume}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Day High</TableCell>\r\n                        <TableCell align=\"center\">{source.peHigh}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Day Low</TableCell>\r\n                        <TableCell align=\"center\">{source.peLow}</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </Grid>\r\n                <Grid item lg={6} xs={12}>\r\n                  <Table>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Market Cap</TableCell>\r\n                        <TableCell align=\"center\">{source.marketcap}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          +{source.sharesOutstanding}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell align=\"center\">Beta</TableCell>\r\n                        <TableCell align=\"center\">{source.beta}</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={12} xs={12}>\r\n          <ProfileGlance path={path} />\r\n        </Grid>\r\n        <Grid item lg={12} xs={12}>\r\n          <KeyGlance path={path} />\r\n        </Grid>\r\n        <Grid item lg={6} xs={12}>\r\n          <DankNews path={path} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'filings', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('opinions');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}