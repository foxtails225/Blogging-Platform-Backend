{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","views/symbol/SymbolView/Header/HighchartsWrapper.tsx","views/symbol/SymbolView/Header/index.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/Financials/index.tsx","views/symbol/SymbolView/News.tsx","views/symbol/SymbolView/index.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","Table","_props$padding","_props$size","size","_props$stickyHeader","stickyHeader","table","TableContext","Provider","value","role","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","tablelvl2","variant","TableBody","Tablelvl2Context","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","action","fade","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","borderBottom","type","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","useStyles","makeStyles","HighchartsWrapper","path","rest","useTheme","useState","source","setSource","mobileDevice","useMediaQuery","breakpoints","down","darkUnica","Highcharts","fetchHistory","a","axios","get","params","response","data","useEffect","length","highcharts","options","title","undefined","chart","height","legend","enabled","xAxis","min","max","minRange","time","useUTC","rangeSelector","buttons","count","events","click","this","allButtonsEnabled","series","threshold","pointInterval","tooltip","valueDecimals","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","colors","setOpacity","initialColor","quote","green","preQuote","common","white","image","maxHeight","item","up","borderRight","label","marginLeft","overline","marginTop","Header","setName","setQuote","setColor","quoteData","latestPrice","change","changePercent","extendedPrice","extendedChange","extendedChangePercent","companyName","fecthQuote","quoteColor","red","preQuoteColor","Grid","alignItems","container","justify","md","xs","Typography","style","Math","abs","Box","mt","flexShrink","subscriptions","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","useCallback","current","Card","CardHeader","Divider","map","post","key","_id","Avatar","alt","src","author","avatar","RouterLink","to","getInitials","ml","Link","slug","p","justifyContent","Button","endIcon","collapse","textOverflow","overflow","box","ProfileGlance","profile","setProfile","expanded","setExpanded","fetchData","Paper","my","lg","description","onClick","sector","industry","numeral","employees","format","address","city","state","zip","country","phone","CEO","gutterBottom","href","website","target","KeyGlance","avg10Volume","peHigh","peLow","marketcap","sharesOutstanding","beta","paddingTop","Opinions","Container","maxWidth","minHeight","Financials","marginRight","content","chip","margin","News","results","setResults","amount","setAmount","List","result","id","ListItem","disableGutters","image_url","ListItemText","news_url","primaryTypographyProps","tickers","slice","ticker","i","Chip","date","disabled","fullWidth","tabs","dark","SymbolView","location","useLocation","setPath","currentTab","setCurrentTab","pathname","split","Page","Tabs","onChange","event","scrollButtons","textColor","tab","Tab","py","pb"],"mappings":"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","file":"static/js/16.74f04523.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport Highcharts from 'highcharts/highstock';\r\nimport darkUnica from 'highcharts/themes/dark-unica';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { makeStyles, useTheme, useMediaQuery } from '@material-ui/core';\r\nimport { Theme } from 'src/theme';\r\nimport { Chart } from 'src/types/stock';\r\n\r\ninterface HighchartsWrapperProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst HighchartsWrapper: FC<HighchartsWrapperProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [source, setSource] = useState<any[]>([]);\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n  darkUnica(Highcharts);\r\n\r\n  const fetchHistory = async (value: string, type: string) => {\r\n    const response = await axios.get<Chart[]>(`/stock/chart/${value}`, {\r\n      params: { type }\r\n    });\r\n    setSource(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    path && fetchHistory(path, '5d');\r\n  }, [path]);\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {source.length > 0 && (\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={{\r\n            title: {\r\n              text: undefined\r\n            },\r\n            chart: { height: mobileDevice ? '70%' : '40%' },\r\n            legend: {\r\n              enabled: false\r\n            },\r\n            xAxis: {\r\n              type: 'datetime',\r\n              min: source[0][0],\r\n              max: source[source.length - 1][0],\r\n              minRange: 3600 * 1000 * 7\r\n            },\r\n            time: {\r\n              useUTC: false\r\n            },\r\n            rangeSelector: {\r\n              buttons: [\r\n                {\r\n                  type: 'dynamic',\r\n                  count: 1,\r\n                  text: '1d',\r\n                  events: {\r\n                    //@ts-ignore\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, 'dynamic');\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '5d',\r\n                  count: 1,\r\n                  text: '1w',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, '5d');\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '1m',\r\n                  count: 1,\r\n                  text: '1m',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, this.text);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: '1y',\r\n                  count: 1,\r\n                  text: '1y',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, this.text);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  type: 'max',\r\n                  text: 'All',\r\n                  events: {\r\n                    click: function() {\r\n                      //@ts-ignore\r\n                      fetchHistory(path, 'max');\r\n                    }\r\n                  }\r\n                }\r\n              ],\r\n              selected: 1,\r\n              enabled: true,\r\n              allButtonsEnabled: true\r\n            },\r\n            series: [\r\n              {\r\n                name: path ? path : '',\r\n                data: source,\r\n                threshold: null,\r\n                pointInterval: 3600 * 1000,\r\n                tooltip: {\r\n                  valueDecimals: 2\r\n                },\r\n                fillColor: {\r\n                  linearGradient: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 0,\r\n                    y2: 1\r\n                  },\r\n                  stops: [\r\n                    [0, Highcharts.getOptions().colors[0]],\r\n                    [\r\n                      1,\r\n                      Highcharts.color(Highcharts.getOptions().colors[0])\r\n                        .setOpacity(0)\r\n                        .get('rgba')\r\n                    ]\r\n                  ]\r\n                }\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHighchartsWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default HighchartsWrapper;\r\n","import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport { Grid, Typography, Box, makeStyles, colors } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Quote } from 'src/types/stock';\nimport HighchartsWrapper from './HighchartsWrapper';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(`/stock/quote/${value}`);\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    fecthQuote(path);\n  }, [path]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\n            {`${name} - `}\n          </Typography>\n          {quote && (\n            <Typography\n              variant=\"body1\"\n              display=\"inline\"\n              style={{ color: color.quote }}\n            >\n              ${quote.latestPrice} {quote.change >= 0 ? '+' : '-'}$\n              {typeof quote.change === 'number'\n                ? Math.abs(quote.change)\n                : quote.change}{' '}\n              ({quote.changePercent >= 0 && '+'}\n              {quote.changePercent}%)\n            </Typography>\n          )}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`After Hours - `}\n            {quote && (\n              <Typography\n                variant=\"body1\"\n                display=\"inline\"\n                style={{ color: color.preQuote }}\n              >\n                ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\n                {typeof quote.extendedChange === 'number'\n                  ? Math.abs(quote.extendedChange)\n                  : quote.extendedChange}{' '}\n                ({quote.extendedChangePercent >= 0 && '+'}\n                {quote.extendedChangePercent}%)\n              </Typography>\n            )}\n          </Typography>\n          <Box mt={3}>\n            <HighchartsWrapper path={path} />\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  }\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank News\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  collapse: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    display: '-webkit-box',\r\n    '-webkit-box-orient': 'vertical',\r\n    '-webkit-line-clamp': '3'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(`/stock/company/${path}`);\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  const handleExpand = () => setExpanded(!expanded);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box className={classes.box}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className={clsx(!expanded && classes.collapse)}\r\n                    >\r\n                      {profile.description}\r\n                    </Typography>\r\n                    <Link onClick={handleExpand}>\r\n                      Read {expanded ? 'less' : 'more'}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Sector</TableCell>\r\n                          <TableCell align=\"center\">{profile.sector}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Industry</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.industry}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Employees</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {numeral(profile.employees).format('0,0')}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={12}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Address</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {profile.address} {profile.city} {profile.state}{' '}\r\n                            {profile.zip} {profile.country}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Phone Number</TableCell>\r\n                          <TableCell align=\"center\">+{profile.phone}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">CEO</TableCell>\r\n                          <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\" color=\"textPrimary\">\r\n                  <Link href={profile.website ?? '#'} target=\"blank\">\r\n                    {profile.website}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `/stock/advanced-stats/${path}`\r\n      );\r\n\r\n      if (response.data) {\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Key Stats\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          {source && (\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.avg10Volume).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Day High</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.peHigh).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Day Low</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.peLow).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Market Cap</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.marketcap).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.sharesOutstanding).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Beta</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.beta).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container spacing={3}>\r\n        <Grid item lg={6} xs={12}>\r\n          <DankNews path={path} />\r\n        </Grid>\r\n        <Grid item lg={6} xs={12}>\r\n          <KeyGlance path={path} />\r\n        </Grid>\r\n        <Grid item lg={12} xs={12}>\r\n          <ProfileGlance path={path} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\ninterface FinancialsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32,\r\n    minHeight: '30vh'\r\n  }\r\n}));\r\n\r\nconst Financials: FC<FinancialsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"b\" color=\"textSecondary\">\r\n            Being worked on\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Financials;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { StockNews } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 32\r\n  },\r\n  image: {\r\n    height: '15vh',\r\n    marginRight: '2vw',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '20vh'\r\n    }\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst News: FC<NewsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState<StockNews[]>([]);\r\n  const [amount, setAmount] = useState<number>(10);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (value: string) => {\r\n      const response = await axios.get<{ data: StockNews[] }>(\r\n        `/stock/news/${value}?items=${amount}`\r\n      );\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        setResults(response.data.data);\r\n      }\r\n    };\r\n    path && fetchData(path);\r\n  }, [path, amount]);\r\n\r\n  const handleClick = (): void => setAmount(amount + 10);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      {results.length > 0 && (\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Card>\r\n              <CardContent className={classes.content}>\r\n                <List>\r\n                  {results.map((result: StockNews, id) => (\r\n                    <ListItem\r\n                      key={id}\r\n                      disableGutters\r\n                      divider\r\n                      className={classes.item}\r\n                    >\r\n                      <img\r\n                        alt=\"Stock News\"\r\n                        src={result.image_url}\r\n                        className={classes.image}\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            target=\"_blank\"\r\n                            href={result.news_url}\r\n                            variant=\"h5\"\r\n                          >\r\n                            {result.title}\r\n                          </Link>\r\n                        }\r\n                        primaryTypographyProps={{\r\n                          variant: 'body1',\r\n                          color: 'textPrimary'\r\n                        }}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component={'span'}\r\n                          >\r\n                            {result.text}\r\n                            <br />\r\n                            {result.tickers.slice(0, 2).map((ticker, i) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                key={i}\r\n                                size=\"small\"\r\n                                label={ticker}\r\n                                className={classes.chip}\r\n                              />\r\n                            ))}\r\n                            {` | Date`}: {result.date}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClick}\r\n              disabled={amount > 40}\r\n              fullWidth\r\n            >\r\n              Read More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\nimport Financials from './Financials';\nimport News from './News';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'news', label: 'News' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'sec', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('opinions');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n          {currentTab === 'news' && <News path={path} />}\n          {currentTab === 'financials' && <Financials path={path} />}\n          {currentTab === 'sec' && <Financials path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}