{"version":3,"sources":["components/CustomIcon.tsx","views/account/ProfileView/Header.tsx","components/PostOverViewCard/Reactions.tsx","components/PostOverViewCard/index.tsx","views/account/ProfileView/Profile/About.tsx","views/account/ProfileView/Profile/Posts.tsx","views/account/ProfileView/Profile/index.tsx","views/account/ProfileView/index.tsx"],"names":["useStyles","makeStyles","root","textAlign","icon","display","height","width","CustomIcon","props","classes","fontSize","alt","className","src","theme","cover","position","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","spacing","right","backgroundColor","colors","blueGrey","color","palette","common","white","breakpoints","down","avatar","border","action","marginLeft","bioBox","Header","profile","rest","location","useLocation","useState","disable","setDisable","useEffect","pathname","clsx","style","Button","variant","startIcon","Container","maxWidth","Box","mt","alignItems","Avatar","Typography","name","Hidden","smDown","bio","flexGrow","component","RouterLink","size","to","mdUp","Tooltip","title","IconButton","iconRoot","likedButton","red","likedIcon","commentIcon","grey","Reactions","author","post","isLiked","setLiked","liked","count","likes","setLikes","handleLike","prevLikes","onClick","disabled","ml","mr","marginTop","comments","length","date","media","marginRight","PostOverViewCard","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","moment","createdAt","fromNow","Link","px","pb","slug","large","onClose","initialStatus","published","pending","tags","blueAvatar","secondary","main","redAvatar","cardContent","paddingTop","About","history","useHistory","user","useAuth","status","setStatus","setDisabled","a","axios","get","response","data","fetchData","email","Divider","CardContent","List","ListItem","disableGutters","divider","ListItemAvatar","ListItemText","primary","primaryTypographyProps","Chip","label","push","item","padding","borderRight","Posts","isMountedRef","useIsMountedRef","activities","setActivities","getActivities","useCallback","current","console","error","disablePadding","map","activity","i","key","id","customer","getInitials","underline","description","p","justifyContent","endIcon","Profile","posts","setPosts","isAuthor","setIsAuthor","page","setPage","getPosts","params","Grid","container","xs","md","lg","_id","background","dark","minHeight","ProfileView","setProfile","Page","py"],"mappings":"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","file":"static/js/4.5d79f685.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC, useEffect, useState } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\n\ninterface HeaderProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 260,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100,\n      left: theme.spacing(1)\n    }\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  },\n  bioBox: {\n    marginLeft: '160px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '120px'\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [disable, setDisable] = useState(false);\n\n  useEffect(() => {\n    setDisable(location.pathname !== '/account/profile');\n  }, [location.pathname]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n          startIcon={<AddPhotoIcon />}\n        >\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box className={classes.bioBox} mt={1}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n            <Hidden smDown>\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {profile.bio}\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box flexGrow={1} />\n          {!disable && (\n            <>\n              <Hidden smDown>\n                <Button\n                  color=\"secondary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to=\"/account/setting\"\n                  variant=\"contained\"\n                  className={classes.action}\n                >\n                  Edit Profile\n                </Button>\n              </Hidden>\n              <Hidden mdUp>\n                <Tooltip title=\"More options\">\n                  <IconButton className={classes.action}>\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </Hidden>\n            </>\n          )}\n        </Box>\n        <Hidden mdUp>\n          <Box textAlign=\"center\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n          </Box>\n        </Hidden>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from '../CustomIcon';\nimport { Post } from 'src/types/post';\n\ninterface ReactionsProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  likedIcon: {\n    display: 'flex',\n    height: 'inherit',\n    width: 'inherit'\n  },\n  commentIcon: {\n    color: colors.grey[500]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {author && (\n        <IconButton onClick={handleLike} disabled={author}>\n          <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n        </IconButton>\n      )}\n      {!author && (\n        <>\n          {isLiked ? (\n            <Tooltip title=\"Unlike\">\n              <IconButton\n                className={classes.likedButton}\n                onClick={handleUnlike}\n              >\n                <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"Like\">\n              <IconButton onClick={handleLike}>\n                <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default Reactions;\n","import React, { useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Post } from 'src/types/post';\nimport Reactions from './Reactions';\nimport { Theme } from 'src/theme';\n\ninterface PostOverViewCardProps {\n  className?: string;\n  author: boolean;\n  post: Post;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst PostOverViewCard: FC<PostOverViewCardProps> = ({\n  className,\n  author,\n  post,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={typeof post.author !== 'string' && post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {typeof post.author !== 'string' && post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={1} className={classes.title}>\n          <Link color=\"textPrimary\" component={RouterLink} to={'/posts/public/' + post.slug} variant=\"h3\">\n            {post.title}\n          </Link>\n        </Box>\n        <Box mt={2} pb={2} px={3}>\n          <Reactions post={post} author={author} />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostOverViewCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired,\n  author: PropTypes.bool\n};\n\nexport default PostOverViewCard;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors,\n  makeStyles,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {\n  Hash as HashIcon,\n  MessageCircle as MessageCircleIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport { User, Status } from 'src/types/user';\n\ninterface AboutProps {\n  className?: string;\n  profile: User;\n}\n\nconst initialStatus = {\n  published: 0,\n  pending: 0,\n  comments: 0,\n  tags: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  blueAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  redAvatar: {\n    backgroundColor: colors.red[600]\n  },\n  cardContent: {\n    paddingTop: 0\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response: any;\n\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/status');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/status'\n        );\n      }\n      setStatus(response.data.status);\n    };\n    fetchData();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const disable = user && user.email !== profile.email;\n    setDisabled(disable);\n  }, [user, profile]);\n\n  const handleClick = () => history.push('/posts/new');\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box mt={2}>\n        <Card>\n          <CardHeader title=\"Profile Status\" />\n          <Divider />\n          <CardContent className={classes.cardContent}>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <DescriptionOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.published} posts published`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n                {!disabled && (\n                  <Chip\n                    color=\"secondary\"\n                    size=\"small\"\n                    label=\"Contribute\"\n                    onClick={handleClick}\n                  />\n                )}\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.blueAvatar}>\n                    <MoreHorizIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.pending} posts pended`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <MessageCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.comments} comments written`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.redAvatar}>\n                    <HashIcon size={22} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${status.tags} tag followed`}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import React, { useCallback, useEffect, useState, FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Box,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios-mock';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\n\ninterface PostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Recent Comments\" />\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, Box, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport PostOverViewCard from 'src/components/PostOverViewCard';\nimport { Post } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport About from './About';\nimport Posts from './Posts';\n\ninterface ProfileProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Profile: FC<ProfileProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isAuthor, setIsAuthor] = useState<boolean>(false);\n  const [page, setPage] = useState<number>(0);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { email: profile.email, page: page ? page : 0 };\n      const response = await axios.post<{\n        posts: Post[];\n        page: number;\n        isAuthor: boolean;\n      }>('/posts/all/', params);\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n        setIsAuthor(response.data.isAuthor);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page, profile]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12} lg={12}>\n              <About profile={profile} />\n            </Grid>\n            <Grid item xs={12} md={12} lg={12}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          {posts.map(post => (\n            <Box mt={2} key={post._id}>\n              <PostOverViewCard post={post} author={isAuthor} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Profile;\n","import React, { useCallback, useState, useEffect, FC } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Box, Container, Divider, makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Profile from './Profile';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const isMountedRef = useIsMountedRef();\n  const [profile, setProfile] = useState<User | null>(null);\n\n  const getPosts = useCallback(async () => {\n    let response: any;\n\n    try {\n      if (location.pathname === '/account/profile') {\n        response = await axios.get<{ user: User }>('/account/about');\n      } else {\n        response = await axios.get<{ user: User }>(\n          location.pathname + '/about'\n        );\n      }\n\n      if (isMountedRef.current) {\n        setProfile(response.data.user);\n      }\n    } catch (err) {\n      history.push('/404');\n    }\n  }, [isMountedRef, location.pathname, history]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box py={3} pb={6}>\n          <Profile profile={profile} />\n        </Box>\n        <Divider />\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}