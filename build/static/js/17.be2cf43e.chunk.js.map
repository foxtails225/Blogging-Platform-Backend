{"version":3,"sources":["components/Label.tsx","components/GenericMoreButton.tsx","views/admin/AdminView/Posts/StatusModal.tsx","views/admin/AdminView/Posts/index.tsx","views/admin/AdminView/Users/StatusModal.tsx","views/admin/AdminView/Users/index.tsx","views/admin/AdminView/NewPosts.tsx","views/admin/AdminView/TotalIncome.tsx","views/admin/AdminView/SystemHealth.tsx","views/admin/AdminView/Comments/FlagItem.tsx","views/admin/AdminView/Comments/index.tsx","views/admin/AdminView/NewSubscriber.tsx","views/admin/AdminView/index.tsx"],"names":["useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","current","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","buttons","name","text","toggleBtn","common","white","StatusModal","data","onOpen","onFetch","status","setStatus","reason","value","setValue","handleConfirm","a","params","_id","axios","put","handleClose","Dialog","keepMounted","aria-labelledby","DialogTitle","DialogContent","ToggleButtonGroup","exclusive","size","onChange","event","newAlignment","aria-label","map","item","idx","ToggleButton","key","TextField","margin","type","target","fullWidth","DialogActions","Button","labelColors","approved","pending","rejected","columns","initialStatus","page","limit","count","order","orderBy","Posts","setOpen","modal","setModal","posts","setPosts","getPosts","sortBy","post","response","prevState","useEffect","socket","on","createSortHandler","currentTarget","id","Card","CardHeader","action","GenericMoreButton","Divider","Box","Table","TableHead","TableRow","column","TableCell","align","TableSortLabel","active","direction","disabled","TableBody","hover","Link","component","RouterLink","to","slug","variant","author","numeral","format","moment","createdAt","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","onChangeRowsPerPage","parseInt","p","Boolean","Users","users","setUsers","getUsers","user","Avatar","alt","src","avatar","getInitials","ml","email","role","label","marginLeft","contrastText","NewPosts","Typography","gutterBottom","flexWrap","TotalIncome","progress","SystemHealth","LinearProgress","viewButton","FlagItem","flag","ListItem","ListItemText","FLAG_OPTIONS","find","primaryTypographyProps","noWrap","fromNow","Tooltip","IconButton","edge","TeamTasks","isMountedRef","useIsMountedRef","flags","setFlags","getFlags","useCallback","get","console","List","i","divider","length","NewSubscriber","background","dark","minHeight","paddingTop","paddingBottom","AdminView","Page","Container","Grid","container","lg","sm","xs","xl","Comments"],"mappings":"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","file":"static/js/17.be2cf43e.chunk.js","sourcesContent":["import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport type { FC } from 'react';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = (props) => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          {...props}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import React, { FC, ChangeEvent, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\nimport axios from 'src/utils/axios';\r\nimport { Theme } from 'src/theme';\r\nimport { Post, PostStatus } from 'src/types/post';\r\n\r\ninterface Modal {\r\n  _id: string;\r\n  status: PostStatus;\r\n  reason: string;\r\n}\r\n\r\ninterface StatusProps {\r\n  className?: string;\r\n  open: boolean;\r\n  data: Modal;\r\n  onOpen: () => void;\r\n  onFetch: () => void;\r\n}\r\n\r\ninterface Status {\r\n  name: PostStatus;\r\n  text: string;\r\n}\r\n\r\nconst buttons: Status[] = [\r\n  { name: 'pending', text: 'pending' },\r\n  { name: 'approved', text: 'approve' },\r\n  { name: 'rejected', text: 'reject' }\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  toggleBtn: {\r\n    '&.MuiToggleButton-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      color: theme.palette.common.white\r\n    }\r\n  }\r\n}));\r\n\r\nconst StatusModal: FC<StatusProps> = ({\r\n  open,\r\n  data,\r\n  onOpen,\r\n  onFetch,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState<string>(data.status);\r\n  const [value, setValue] = useState<string>(data.reason);\r\n\r\n  const handleConfirm = async () => {\r\n    const params = { _id: data._id, status, reason: value };\r\n    await axios.put<{ post: Post }>('/posts/update/status', params);\r\n    onFetch();\r\n    onOpen();\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newAlignment: string | null\r\n  ) => {\r\n    setStatus(newAlignment);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onOpen();\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"status-dialog\"\r\n      >\r\n        <DialogTitle>Post Status</DialogTitle>\r\n        <DialogContent>\r\n          <ToggleButtonGroup\r\n            value={status}\r\n            exclusive\r\n            size=\"small\"\r\n            onChange={handleClick}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            {buttons.map((item: Status, idx: number) => (\r\n              <ToggleButton\r\n                key={item.name + idx}\r\n                value={item.name}\r\n                className={classes.toggleBtn}\r\n              >\r\n                {item.text}\r\n              </ToggleButton>\r\n            ))}\r\n          </ToggleButtonGroup>\r\n          <TextField\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirm} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatusModal.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  data: PropTypes.object,\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onFetch: PropTypes.func\r\n};\r\n\r\nexport default StatusModal;\r\n","import React, { FC, ChangeEvent, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport { PostWithAuthor, PostStatus } from 'src/types/post';\nimport StatusModal from './StatusModal';\nimport { socket } from 'src/constants';\n\ninterface PostsProps {\n  className?: string;\n}\n\ntype OrderByStatus = 'desc' | 'asc';\n\ninterface Status {\n  page: number;\n  limit: number;\n  count: number;\n  order: string;\n  orderBy: OrderByStatus;\n}\n\ninterface Modal {\n  _id: string;\n  status: PostStatus;\n  reason: string;\n}\n\nconst labelColors: Record<PostStatus, 'success' | 'warning' | 'error'> = {\n  approved: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst columns = [\n  { name: 'title', value: 'Title' },\n  { name: 'author', value: 'Author' },\n  { name: 'total', value: 'Total' },\n  { name: 'status', value: 'Status' },\n  { name: 'createdAt', value: 'Date' }\n];\n\nconst initialStatus: Status = {\n  page: 0,\n  limit: 5,\n  count: 0,\n  order: 'createdAt',\n  orderBy: 'desc'\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {}\n}));\n\nconst Posts: FC<PostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const [modal, setModal] = useState<Modal>();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\n\n  const getPosts = async () => {\n    try {\n      const sortBy = { [status.order]: status.orderBy === 'desc' ? -1 : 1 };\n      const params = { page: status.page, sortBy, limit: status.limit };\n      const response = await axios.post<{\n        posts: PostWithAuthor[];\n        count: number;\n      }>('/admin/posts/all/', params);\n\n      setPosts(response.data.posts);\n      setStatus(prevState => ({ ...prevState, count: response.data.count }));\n    } catch (err) {\n      setStatus(initialStatus);\n      setPosts([]);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n    socket.on('adminPost', data => {\n      getPosts();\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status.page, status.limit, status.order, status.orderBy]);\n\n  const createSortHandler = (event): void => {\n    const order = event.currentTarget.id;\n    const orderBy = status.orderBy !== 'desc' ? 'desc' : 'asc';\n    setStatus(prevState => ({ ...prevState, order, orderBy }));\n  };\n\n  const handleChangePage = (event: unknown, page: number) => {\n    setStatus(prevState => ({ ...prevState, page }));\n  };\n\n  const handleSortDirection = (name: string): OrderByStatus => {\n    const direction =\n      status.order === name && status.orderBy ? status.orderBy : 'desc';\n    return direction;\n  };\n\n  const handleChangeLimit = (event: ChangeEvent<HTMLInputElement>): void => {\n    const limit = parseInt(event.target.value, 10);\n    setStatus(prevState => ({ ...prevState, limit, page: 0 }));\n  };\n\n  const handleStatus = (data: PostWithAuthor) => {\n    setModal({ _id: data._id, status: data.status, reason: data.reason });\n    setOpen(!open);\n  };\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"All Posts\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell key={column.name} align=\"center\">\n                    <TableSortLabel\n                      id={column.name}\n                      active={status.order === column.name}\n                      onClick={createSortHandler}\n                      direction={handleSortDirection(column.name)}\n                      disabled={column.name === 'no'}\n                    >\n                      {column.value}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {posts.map(post => (\n                <TableRow hover key={post._id}>\n                  <TableCell align=\"center\">\n                    <Link\n                      color=\"textPrimary\"\n                      component={RouterLink}\n                      to={'/posts/public/' + post.slug}\n                      variant=\"body2\"\n                    >\n                      {post.title}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link\n                      color=\"textPrimary\"\n                      component={RouterLink}\n                      to={'/users/' + post.author.name}\n                      variant=\"body2\"\n                    >\n                      {post.author.name}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {numeral(0).format(`$0,0.00`)}\n                  </TableCell>\n                  <TableCell align=\"center\" onClick={() => handleStatus(post)}>\n                    <Label color={labelColors[post.status]}>\n                      {post.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {moment(post.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={status.count}\n            rowsPerPage={status.limit}\n            page={status.page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeLimit}\n          />\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\" />\n      {open && (\n        <StatusModal\n          open={open}\n          data={modal}\n          onOpen={handleOpen}\n          onFetch={getPosts}\n        />\n      )}\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Posts;\n","import React, { FC, ChangeEvent, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\nimport axios from 'src/utils/axios';\r\nimport { Theme } from 'src/theme';\r\nimport { User } from 'src/types/user';\r\n\r\ninterface Modal {\r\n  _id: string;\r\n  status: boolean;\r\n  reason: string;\r\n}\r\n\r\ninterface StatusProps {\r\n  className?: string;\r\n  open: boolean;\r\n  data: Modal;\r\n  onOpen: () => void;\r\n  onFetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  toggleBtn: {\r\n    '&.MuiToggleButton-root': {\r\n      color: theme.palette.text.primary\r\n    },\r\n    '&.Mui-selected': {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      color: theme.palette.common.white\r\n    }\r\n  }\r\n}));\r\n\r\nconst StatusModal: FC<StatusProps> = ({\r\n  open,\r\n  data,\r\n  onOpen,\r\n  onFetch,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState<boolean>(data.status);\r\n  const [value, setValue] = useState<string>(data.reason);\r\n\r\n  const handleConfirm = async () => {\r\n    const params = { _id: data._id, status, reason: value };\r\n    await axios.put<{ user: User }>('/users/update/status', params);\r\n    onFetch();\r\n    onOpen();\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newAlignment: string | null\r\n  ) => {\r\n    setStatus(Boolean(newAlignment));\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    onOpen();\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"status-dialog\"\r\n      >\r\n        <DialogTitle>User Status</DialogTitle>\r\n        <DialogContent>\r\n          <ToggleButtonGroup\r\n            value={status}\r\n            exclusive\r\n            size=\"small\"\r\n            onChange={handleClick}\r\n            aria-label=\"user alignment\"\r\n          >\r\n            <ToggleButton value={true} className={classes.toggleBtn}>\r\n              Active\r\n            </ToggleButton>\r\n            <ToggleButton value={false} className={classes.toggleBtn}>\r\n              Block\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <TextField\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirm} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatusModal.propTypes = {\r\n  className: PropTypes.string,\r\n  //@ts-ignore\r\n  data: PropTypes.object,\r\n  open: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onFetch: PropTypes.func\r\n};\r\n\r\nexport default StatusModal;\r\n","import React, { FC, ChangeEvent, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport { User } from 'src/types/user';\nimport StatusModal from './StatusModal';\n\ninterface UsersProps {\n  className?: string;\n}\n\ntype OrderByStatus = 'desc' | 'asc';\n\ninterface Status {\n  page: number;\n  limit: number;\n  count: number;\n  order: string;\n  orderBy: OrderByStatus;\n}\n\ninterface Modal {\n  _id: string;\n  status: boolean;\n  reason: string;\n}\n\nconst columns = [\n  { name: 'name', value: 'Name' },\n  { name: 'email', value: 'Email' },\n  { name: 'role', value: 'Role' },\n  { name: 'status', value: 'Status' },\n  { name: 'createdAt', value: 'Date' }\n];\n\nconst initialStatus: Status = {\n  page: 0,\n  limit: 5,\n  count: 0,\n  order: 'createdAt',\n  orderBy: 'desc'\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {}\n}));\n\nconst Users: FC<UsersProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const [modal, setModal] = useState<Modal>();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const getUsers = async () => {\n    try {\n      const sortBy = { [status.order]: status.orderBy === 'desc' ? -1 : 1 };\n      const params = { page: status.page, sortBy, limit: status.limit };\n      const response = await axios.post<{\n        users: User[];\n        count: number;\n      }>('/admin/users/all/', params);\n\n      setUsers(response.data.users);\n      setStatus(prevState => ({ ...prevState, count: response.data.count }));\n    } catch (err) {\n      setStatus(initialStatus);\n      setUsers([]);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status.page, status.limit, status.order, status.orderBy]);\n\n  const createSortHandler = (event): void => {\n    const order = event.currentTarget.id;\n    const orderBy = status.orderBy !== 'desc' ? 'desc' : 'asc';\n    setStatus(prevState => ({ ...prevState, order, orderBy }));\n  };\n\n  const handleChangePage = (event: unknown, page: number) => {\n    setStatus(prevState => ({ ...prevState, page }));\n  };\n\n  const handleSortDirection = (name: string): OrderByStatus => {\n    const direction =\n      status.order === name && status.orderBy ? status.orderBy : 'desc';\n    return direction;\n  };\n\n  const handleChangeLimit = (event: ChangeEvent<HTMLInputElement>): void => {\n    const limit = parseInt(event.target.value, 10);\n    setStatus(prevState => ({ ...prevState, limit, page: 0 }));\n  };\n\n  const handleStatus = (data: User) => {\n    setModal({ _id: data._id, status: data.status, reason: data.reason });\n    setOpen(!open);\n  };\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"All Users\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell key={column.name} align=\"center\">\n                    <TableSortLabel\n                      id={column.name}\n                      active={status.order === column.name}\n                      onClick={createSortHandler}\n                      direction={handleSortDirection(column.name)}\n                      disabled={column.name === 'no'}\n                    >\n                      {column.value}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map(user => (\n                <TableRow hover key={user._id}>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Avatar\n                        alt=\"Author\"\n                        src={user.avatar}\n                        component={RouterLink}\n                        to={'/users/' + user.name}\n                      >\n                        {getInitials(user.name)}\n                      </Avatar>\n                      <Box ml={1}>\n                        <Link\n                          color=\"textPrimary\"\n                          component={RouterLink}\n                          to={'/users/' + user.name}\n                          variant=\"body2\"\n                        >\n                          {user.name}\n                        </Link>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {user.email}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {user.role}\n                  </TableCell>\n                  <TableCell align=\"center\" onClick={() => handleStatus(user)}>\n                    <Label color={user.status ? 'success' : 'error'}>\n                      {user.status ? 'Active' : 'Banned'}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {moment(user.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={status.count}\n            rowsPerPage={status.limit}\n            page={status.page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeLimit}\n          />\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\" />\n      {open && (\n        <StatusModal\n          open={open}\n          data={modal}\n          onOpen={handleOpen}\n          onFetch={getUsers}\n        />\n      )}\n    </Card>\n  );\n};\n\nUsers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Users;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface NewPostsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewPosts: FC<NewPostsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New posts\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewPosts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewPosts;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Card, Typography, makeStyles } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { Theme } from 'src/theme';\n\ninterface TotalIncomeProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TotalIncome: FC<TotalIncomeProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: '$'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Total income\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar} color=\"inherit\">\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTotalIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalIncome;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\n\ninterface SystemHealthProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  }\n}));\n\nconst SystemHealth: FC<SystemHealthProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 97\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        System Health\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {data.value}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={data.value}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n};\n\nSystemHealth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SystemHealth;\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemProps,\n  ListItemText,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport { Theme } from 'src/theme';\nimport { FlagWithUser } from 'src/types/flag';\nimport { FLAG_OPTIONS } from 'src/constants';\n\ninterface FlagItemProps extends ListItemProps {\n  className?: string;\n  flag: FlagWithUser;\n  button?: any; // Fix warning\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst FlagItem: FC<FlagItemProps> = ({ className, flag, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={clsx(classes.root, className)} {...rest}>\n      <ListItemText\n        primary={FLAG_OPTIONS.find(item => item.name === flag.reason).label}\n        primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n        secondary={moment(flag.createdAt).fromNow()}\n      />\n      <Tooltip key={flag.user._id} title=\"View Profile\">\n        <Avatar\n          src={flag.user.avatar}\n          alt=\"Person\"\n          component={RouterLink}\n          to={'/users/' + flag.user.name}\n        />\n      </Tooltip>\n      <Tooltip title=\"View Post\">\n        <IconButton className={classes.viewButton} edge=\"end\">\n          <OpenInNewIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n};\n\nFlagItem.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  flag: PropTypes.object.isRequired\n};\n\nexport default FlagItem;\n","import React, { FC, useCallback, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport { FlagWithUser } from 'src/types/flag';\nimport FlagItem from './FlagItem';\nimport { socket } from 'src/constants';\n\ninterface TeamTasksProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst TeamTasks: FC<TeamTasksProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [flags, setFlags] = useState<FlagWithUser[]>([]);\n\n  const getFlags = useCallback(async () => {\n    try {\n      const response = await axios.get<{ flags: FlagWithUser[] }>(\n        '/comments/flagsAll'\n      );\n\n      if (isMountedRef.current) {\n        setFlags(response.data.flags);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getFlags();\n    socket.on('adminComment', data => {\n      getFlags();\n    });\n  }, [getFlags]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Reports\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={400}>\n          <List>\n            {flags.map((flag, i) => (\n              <FlagItem\n                divider={i < flags.length - 1}\n                key={flag._id}\n                flag={flag}\n              />\n            ))}\n          </List>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport type { Theme } from 'src/theme';\nimport Label from 'src/components/Label';\n\ninterface NewSubscriberProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewSubscriber: FC<NewSubscriberProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '29',\n    difference: 4\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New Subscribers\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}\n            %\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <GroupAddIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewSubscriber.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewSubscriber;\n","import React, { FC } from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Posts from './Posts';\nimport Users from './Users';\nimport NewProjects from './NewPosts';\nimport TotalIncome from './TotalIncome';\nimport SystemHealth from './SystemHealth';\nimport Comments from './Comments';\nimport NewSubscriber from './NewSubscriber';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst AdminView: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Administrator\">\n      <Container maxWidth={false}>\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewSubscriber />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <SystemHealth />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TotalIncome />\n          </Grid>\n          <Grid item lg={12} xl={12} xs={12}>\n            <Posts />\n          </Grid>\n          <Grid item lg={4} xl={4} xs={12}>\n            <Comments />\n          </Grid>\n          <Grid item lg={8} xl={8} xs={12}>\n            <Users />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AdminView;\n"],"sourceRoot":""}