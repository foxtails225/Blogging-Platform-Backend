{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/react-feather/dist/icons/star.js","views/contact/ContactForm.tsx","views/contact/ThankYou.tsx","views/contact/index.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","RadioGroup","actions","children","nameProp","valueProp","value","onChange","rootRef","_useControlled","useControlled","controlled","default","defaultValue","_useControlled2","_slicedToArray","setValue","focus","input","current","querySelector","handleRef","useForkRef","useId","RadioGroupContext","Provider","event","target","FormGroup","role","_props$row","row","display","flexDirection","flexWrap","createSvgIcon","d","theme","position","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","checked","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","color","onChangeProp","_props$size","size","radioGroup","createChainedFunction","SwitchBase","type","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Star","forwardRef","_ref","_ref$color","_ref$size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","useStyles","makeStyles","control","minWidth","ContactForm","onSubmit","enqueueSnackbar","useSnackbar","enableReinitialize","initialValues","email","company","message","support","submit","validationSchema","Yup","shape","max","required","values","a","setErrors","setStatus","setSubmitting","params","axios","post","success","variant","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","spacing","item","xs","sm","FormControl","InputLabel","Select","label","MenuItem","Box","mb","Typography","TextField","error","Boolean","fullWidth","helperText","onBlur","multiline","rows","mt","FormHelperText","justifyContent","Button","Link","RouterLink","to","background","dark","minHeight","paddingTop","avatar","colors","blue","stepper","ThankYou","Page","title","Container","maxWidth","Card","mx","Avatar","align","paper","breakpoints","down","group","ContactView","useState","isSubmit","setSubmit","pb","justify","alignItems","Hidden","smDown","md","FormControlLabel"],"mappings":"gIAAA,8CAeIA,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBO,EAAWG,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJM,OAgCUK,gBAnDK,CAElBD,KAAM,CACJE,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCC,KAAM,kBADOH,CAEZd,I,kCC3DH,sFAUIkB,EAA0BjB,cAAiB,SAAoBC,EAAOC,GACxE,IAAIgB,EAAUjB,EAAMiB,QAChBC,EAAWlB,EAAMkB,SACjBC,EAAWnB,EAAMe,KACjBK,EAAYpB,EAAMqB,MAClBC,EAAWtB,EAAMsB,SACjBf,EAAQC,YAAyBR,EAAO,CAAC,UAAW,WAAY,OAAQ,QAAS,aAEjFuB,EAAUxB,SAAa,MAEvByB,EAAiBC,YAAc,CACjCC,WAAYN,EACZO,QAAS3B,EAAM4B,aACfb,KAAM,eAEJc,EAAkBC,YAAeN,EAAgB,GACjDH,EAAQQ,EAAgB,GACxBE,EAAWF,EAAgB,GAE/B9B,sBAA0BkB,GAAS,WACjC,MAAO,CACLe,MAAO,WACL,IAAIC,EAAQV,EAAQW,QAAQC,cAAc,gCAErCF,IACHA,EAAQV,EAAQW,QAAQC,cAAc,yBAGpCF,GACFA,EAAMD,YAIX,IACH,IAAII,EAAYC,YAAWpC,EAAKsB,GAU5BR,EAAOuB,YAAMnB,GACjB,OAAoBpB,gBAAoBwC,IAAkBC,SAAU,CAClEnB,MAAO,CACLN,KAAMA,EACNO,SAZe,SAAsBmB,GACvCV,EAASU,EAAMC,OAAOrB,OAElBC,GACFA,EAASmB,EAAOA,EAAMC,OAAOrB,QAS7BA,MAAOA,IAEKtB,gBAAoB4C,IAAWlC,YAAS,CACtDmC,KAAM,aACN3C,IAAKmC,GACJ7B,GAAQW,OAqCEF,O,kCCrGf,8CAyBI2B,EAAyB5C,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClB0C,EAAa7C,EAAM8C,IACnBA,OAAqB,IAAfD,GAAgCA,EACtCtC,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBD,gBAAoB,MAAOU,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,EAAW2C,GAAO5C,EAAQ4C,KACxD7C,IAAKA,GACJM,OA6BUK,gBA1DK,CAElBD,KAAM,CACJoC,QAAS,OACTC,cAAe,SACfC,SAAU,QAIZH,IAAK,CACHE,cAAe,QAgDe,CAChCjC,KAAM,gBADOH,CAEZ+B,I,0FC5DYO,cAA4BnD,gBAAoB,OAAQ,CACrEoD,EAAG,iIACD,wBCFWD,cAA4BnD,gBAAoB,OAAQ,CACrEoD,EAAG,gLACD,sB,OC2DWvC,mBA7DK,SAAgBwC,GAClC,MAAO,CACLzC,KAAM,CACJ0C,SAAU,WACVN,QAAS,OACT,mBAAoB,CAClBO,UAAW,WACXC,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,OAAQN,EAAMI,YAAYE,OAAOC,QACjCC,SAAUR,EAAMI,YAAYI,SAASC,aAI3CC,MAAO,CACLC,KAAM,EACNV,SAAU,WACVC,UAAW,WACXC,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,OAAQN,EAAMI,YAAYE,OAAOM,OACjCJ,SAAUR,EAAMI,YAAYI,SAASC,YAGzCI,QAAS,MAuCqB,CAChClD,KAAM,0BADOH,EAhCf,SAAyBZ,GACvB,IAAIiE,EAAUjE,EAAMiE,QAChB/D,EAAUF,EAAME,QAChBgE,EAAWlE,EAAMkE,SACrB,OAAoBnE,gBAAoB,MAAO,CAC7CI,UAAWO,YAAKR,EAAQS,KAAMsD,GAAW/D,EAAQ+D,UACnClE,gBAAoBoE,EAA0B,CAC5DD,SAAUA,IACKnE,gBAAoBqE,EAAwB,CAC3DF,SAAUA,EACV/D,UAAWD,EAAQ4D,Y,kCChChB,IAgDHO,EAAkCtE,gBAAoBuE,EAAiB,CACzEL,SAAS,IAEPM,EAA2BxE,gBAAoBuE,EAAiB,MAChEE,EAAqBzE,cAAiB,SAAeC,EAAOC,GAC9D,IAAIwE,EAAczE,EAAMiE,QACpB/D,EAAUF,EAAME,QAChBwE,EAAe1E,EAAM2E,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDvD,EAAWnB,EAAMe,KACjB6D,EAAe5E,EAAMsB,SACrBuD,EAAc7E,EAAM8E,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CtE,EAAQC,YAAyBR,EAAO,CAAC,UAAW,UAAW,QAAS,OAAQ,WAAY,SAE5F+E,ECzEGhF,aAAiBwC,KD0EpB0B,EAAUQ,EACVnD,EAAW0D,YAAsBJ,EAAcG,GAAcA,EAAWzD,UACxEP,EAAOI,EAYX,OAVI4D,IACqB,qBAAZd,IACTA,EAAUc,EAAW1D,QAAUrB,EAAMqB,OAGnB,qBAATN,IACTA,EAAOgE,EAAWhE,OAIFhB,gBAAoBkF,IAAYxE,YAAS,CAC3DkE,MAAOA,EACPO,KAAM,QACNC,KAAmBpF,eAAmBwE,EAAa,CACjDL,SAAmB,UAATY,EAAmB,QAAU,YAEzCM,YAA0BrF,eAAmBsE,EAAoB,CAC/DH,SAAmB,UAATY,EAAmB,QAAU,YAEzC5E,QAAS,CACPS,KAAMD,YAAKR,EAAQS,KAAMT,EAAQ,QAAQmF,OAAOC,YAAWX,MAC3DV,QAAS/D,EAAQ+D,QACjBsB,SAAUrF,EAAQqF,UAEpBxE,KAAMA,EACNkD,QAASA,EACT3C,SAAUA,EACVrB,IAAKA,GACJM,OAyFUK,iBAzLK,SAAgBwC,GAClC,MAAO,CAELzC,KAAM,CACJgE,MAAOvB,EAAMoC,QAAQC,KAAKC,WAI5BzB,QAAS,GAGTsB,SAAU,GAGVI,aAAc,CACZ,YAAa,CACXhB,MAAOvB,EAAMoC,QAAQI,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAK3C,EAAMoC,QAAQI,QAAQC,KAAMzC,EAAMoC,QAAQQ,OAAOC,cAEvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZnB,MAAOvB,EAAMoC,QAAQQ,OAAOT,WAKhCW,eAAgB,CACd,YAAa,CACXvB,MAAOvB,EAAMoC,QAAQE,UAAUG,KAC/B,UAAW,CACTC,gBAAiBC,YAAK3C,EAAMoC,QAAQE,UAAUG,KAAMzC,EAAMoC,QAAQQ,OAAOC,cAEzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZnB,MAAOvB,EAAMoC,QAAQQ,OAAOT,cA8IF,CAChCxE,KAAM,YADOH,CAEZ4D,I,kCExMH,WAKIjC,EAAoBxC,kBAMTwC,O,kCCXf,6CAAS9B,IAA2Q,OAA9PA,EAAW0F,OAAOC,QAAU,SAAU1D,GAAU,IAAK,IAAI2D,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ/D,EAAO+D,GAAOD,EAAOC,IAAY,OAAO/D,IAA2BmE,MAAMC,KAAMR,WAEhT,SAAS9F,EAAyBgG,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnE3D,EAEzF,SAAuC8D,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5D3D,EAAS,GAAQsE,EAAab,OAAOc,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAASG,QAAQT,IAAQ,IAAa/D,EAAO+D,GAAOD,EAAOC,IAAQ,OAAO/D,EAFxMyE,CAA8BX,EAAQO,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBZ,GAAS,IAAKH,EAAI,EAAGA,EAAIgB,EAAiBd,OAAQF,IAAOI,EAAMY,EAAiBhB,GAAQU,EAASG,QAAQT,IAAQ,GAAkBN,OAAOO,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgB/D,EAAO+D,GAAOD,EAAOC,IAAU,OAAO/D,EAMne,IAAI6E,EAAOC,sBAAW,SAAUC,EAAMxH,GACpC,IAAIyH,EAAaD,EAAK9C,MAClBA,OAAuB,IAAf+C,EAAwB,eAAiBA,EACjDC,EAAYF,EAAK3C,KACjBA,OAAqB,IAAd6C,EAAuB,GAAKA,EACnCC,EAAOpH,EAAyBiH,EAAM,CAAC,QAAS,SAEpD,OAAoB1H,IAAM8H,cAAc,MAAOpH,EAAS,CACtDR,IAAKA,EACL6H,MAAO,6BACPC,MAAOjD,EACPkD,OAAQlD,EACRmD,QAAS,YACTC,KAAM,OACNC,OAAQxD,EACRyD,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfV,GAAoB7H,IAAM8H,cAAc,UAAW,CACpDU,OAAQ,uGAGZhB,EAAKiB,UAAY,CACf7D,MAAO8D,IAAUC,OACjB5D,KAAM2D,IAAUE,UAAU,CAACF,IAAUC,OAAQD,IAAUG,UAEzDrB,EAAKsB,YAAc,OACJtB,O,qUCNTuB,EAAYC,aAAW,SAAC3F,GAAD,MAAmB,CAC9CzC,KAAM,GACNqI,QAAS,CACPC,SAAU,SAgOCC,EA5N2B,SAAC,GAAyB,IAAvB7H,EAAsB,EAAtBA,MAAO8H,EAAe,EAAfA,SAC5CjJ,EAAU4I,IACRM,EAAoBC,cAApBD,gBAER,OACE,kBAAC,IAAD,CACEE,oBAAkB,EAClBC,cAAe,CACbxI,KAAM,GACNyI,MAAO,GACPC,QAAS,GACTpG,SAAU,GACVqG,QAAS,GACTC,QAAS,GACTC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnChJ,KAAM+I,MACHE,IAAI,KACJC,SAAS,oBACZT,MAAOM,MACJN,MAAM,yBACNQ,IAAI,KACJC,SAAS,qBACZR,QAASK,MAAaE,IAAI,KAC1B3G,SAAUyG,MAAaE,IAAI,KAC3BN,QAASI,MAAaG,SAAS,yBAEjCd,SAAQ,uCAAE,WAAOe,EAAP,wBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAAvC,SAEAC,EAFA,2BAEcL,GAFd,IAEsBhF,KAAM7D,IAF5B,SAGAmJ,IAAMC,KAA2B,mBAAoBF,GAHrD,OAINF,EAAU,CAAEK,SAAS,IACrBJ,GAAc,GACdnB,IACAC,EAAgB,4BAA6B,CAC3CuB,QAAS,YARL,kDAWNN,EAAU,CAAEK,SAAS,IACrBN,EAAU,CAAER,OAAQ,KAAIF,UACxBY,GAAc,GAbR,0DAAF,0DAiBP,gBACCM,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAf,EAPD,EAOCA,OAPD,OASC,0BAAMf,SAAU4B,GACd,kBAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACZ,QAAV/J,GACC,kBAAC6J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACErL,UAAWD,EAAQ8I,QACnB2B,QAAQ,WACRV,UAAQ,GAER,kBAACwB,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CACE3K,KAAK,UACLM,MAAO6I,EAAOP,QACdrI,SAAUwJ,EACVa,MAAM,gBAEN,kBAACC,EAAA,EAAD,CAAUvK,MAAM,qBAAhB,qBAGA,kBAACuK,EAAA,EAAD,CAAUvK,MAAM,kBAAhB,qBAKR,kBAAC6J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,aAC3B,YAAVtJ,EAAsB,cAAgB,gBAG3C,kBAAC2K,EAAA,EAAD,CACEC,MAAOC,QAAQjB,EAAQlK,MAAQ6J,EAAO7J,MACtCoL,WAAS,EACTC,WAAYnB,EAAQlK,MAAQ6J,EAAO7J,KACnCA,KAAK,OACLM,MAAO6I,EAAOnJ,KACdO,SAAUwJ,EACVuB,OAAQxB,EACRZ,UAAQ,EACRU,QAAQ,cAGZ,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,aAAxC,YAIF,kBAACqB,EAAA,EAAD,CACEC,MAAOC,QAAQjB,EAAQzB,OAASoB,EAAOpB,OACvC2C,WAAS,EACTC,WAAYnB,EAAQzB,OAASoB,EAAOpB,MACpCzI,KAAK,QACLmE,KAAK,QACL7D,MAAO6I,EAAOV,MACdlI,SAAUwJ,EACVuB,OAAQxB,EACRZ,UAAQ,EACRU,QAAQ,cAGD,QAAVtJ,GACC,oCACE,kBAAC6J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,aAAxC,mCAIF,kBAACqB,EAAA,EAAD,CACEC,MAAOC,QAAQjB,EAAQ5H,UAAYuH,EAAOvH,UAC1C8I,WAAS,EACTC,WAAYnB,EAAQ5H,UAAYuH,EAAOvH,SACvCtC,KAAK,WACLM,MAAO6I,EAAO7G,SACd/B,SAAUwJ,EACVuB,OAAQxB,EACRF,QAAQ,cAGZ,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACM,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,aAAxC,4BAIF,kBAACqB,EAAA,EAAD,CACEC,MAAOC,QAAQjB,EAAQxB,SAAWmB,EAAOnB,SACzC0C,WAAS,EACTC,WAAYnB,EAAQxB,SAAWmB,EAAOnB,QACtC1I,KAAK,UACLM,MAAO6I,EAAOT,QACdnI,SAAUwJ,EACVuB,OAAQxB,EACRF,QAAQ,eAKhB,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACO,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,aAAxC,cAIF,kBAACqB,EAAA,EAAD,CACEC,MAAOC,QAAQjB,EAAQvB,SAAWkB,EAAOlB,SACzCyC,WAAS,EACTC,WAAYnB,EAAQvB,SAAWkB,EAAOlB,QACtC3I,KAAK,UACLkJ,UAAQ,EACRqC,WAAS,EACTC,KAAM,EACNlL,MAAO6I,EAAOR,QACdpI,SAAUwJ,EACVuB,OAAQxB,EACRF,QAAQ,eAIbC,EAAOhB,QACN,kBAACiC,EAAA,EAAD,CAAKW,GAAI,GACP,kBAACC,EAAA,EAAD,CAAgBR,OAAK,GAAErB,EAAOhB,SAGlC,kBAACiC,EAAA,EAAD,CAAK9I,QAAQ,OAAO2J,eAAe,SAASF,GAAI,GAC9C,kBAACG,EAAA,EAAD,CACEhI,MAAM,UACNwH,WAAS,EACTrH,KAAK,QACL6F,QAAQ,YACRpF,SAAUyF,EACV9F,KAAK,UANP,SAWF,kBAAC2G,EAAA,EAAD,CAAKW,GAAI,EAAGV,GAAI,GACd,kBAACC,EAAA,EAAD,CAAYpH,MAAM,gBAAgBgG,QAAQ,SAA1C,uCACuC,IACrC,kBAACiC,EAAA,EAAD,CACEjI,MAAM,cACNtE,UAAWwM,IACXC,GAAG,eACHnC,QAAQ,aAJV,kBAOQ,IATV,MAUM,IACJ,kBAACiC,EAAA,EAAD,CACEjI,MAAM,cACNtE,UAAWwM,IACXC,GAAG,cACHnC,QAAQ,aAJV,SAXF,W,gDCnNN7B,EAAYC,aAAW,SAAC3F,GAAD,MAAmB,CAC9CzC,KAAM,CACJmF,gBAAiB1C,EAAMoC,QAAQuH,WAAWC,KAC1CC,UAAW,OACXC,WAAY9J,EAAMgI,QAAQ,GAC1BtK,cAAesC,EAAMgI,QAAQ,IAE/B+B,OAAQ,CACNrH,gBAAiBsH,IAAOC,KAAK,MAE/BC,QAAS,CACPxH,gBAAiB,mBAmDNyH,EA/CM,WACnB,IAAMrN,EAAU4I,IAEhB,OACE,kBAAC0E,EAAA,EAAD,CAAMrN,UAAWD,EAAQS,KAAM8M,MAAM,aACnC,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,KACE,kBAAC9N,EAAA,EAAD,KACE,kBAAC+L,EAAA,EAAD,CAAK8B,SAAU,IAAKE,GAAG,QACrB,kBAAChC,EAAA,EAAD,CAAK9I,QAAQ,OAAO2J,eAAe,UACjC,kBAACoB,EAAA,EAAD,CAAQ3N,UAAWD,EAAQiN,QACzB,kBAAC,IAAD,QAGJ,kBAACtB,EAAA,EAAD,CAAKW,GAAI,GACP,kBAACT,EAAA,EAAD,CAAYpB,QAAQ,KAAKhG,MAAM,cAAcoJ,MAAM,UAAnD,eAIF,kBAAClC,EAAA,EAAD,CAAKW,GAAI,GACP,kBAACT,EAAA,EAAD,CACEpB,QAAQ,YACRhG,MAAM,gBACNoJ,MAAM,UAHR,6EASF,kBAAClC,EAAA,EAAD,CAAKW,GAAI,EAAGzJ,QAAQ,OAAO2J,eAAe,UACxC,kBAACC,EAAA,EAAD,CACEhC,QAAQ,YACRhG,MAAM,YACNtE,UAAWwM,IACXC,GAAG,KAJL,eC3CVhE,EAAYC,aAAW,SAAC3F,GAAD,MAAmB,CAC9CzC,KAAM,CACJuM,WAAY,IAEd/B,UAAU,aACR8B,UAAW,OACXpM,QAASuC,EAAMgI,QAAQ,GACvBtF,gBAAiB1C,EAAMoC,QAAQuH,WAAWiB,OACzC5K,EAAM6K,YAAYC,KAAK,MAAQ,CAC9BrN,QAASuC,EAAMgI,QAAQ,KAG3B+C,MAAO,CACLxJ,MAAOvB,EAAMoC,QAAQI,QAAQC,KAC7B7C,cAAe,WA2DJoL,UAvDS,WACtB,IAAMlO,EAAU4I,IADY,EAEFuF,mBAAe,WAFb,mBAErBhN,EAFqB,KAEdU,EAFc,OAGEsM,oBAAkB,GAHpB,mBAGrBC,EAHqB,KAGXC,EAHW,KAS5B,OACE,oCACID,EAsCA,kBAAC,EAAD,MArCA,kBAACd,EAAA,EAAD,CAAMrN,UAAWD,EAAQS,KAAM8M,MAAM,WACnC,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKxN,UAAWD,EAAQiL,WAC1C,kBAACU,EAAA,EAAD,CAAK2C,GAAI,GACP,kBAACtD,EAAA,EAAD,CAAMC,WAAS,EAACsD,QAAQ,SAASC,WAAW,UAC1C,kBAACC,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAAC1D,EAAA,EAAD,CAAMG,MAAI,EAACwD,GAAI,IACb,kBAAC9C,EAAA,EAAD,CAAYpH,MAAM,cAAcgG,QAAQ,MAAxC,sBAKJ,kBAACO,EAAA,EAAD,CAAMG,MAAI,EAACwD,GAAI,IACb,kBAAC7N,EAAA,EAAD,CACEK,MAAOA,EACPC,SArBG,SAAAmB,GAAK,OAAIV,EAASU,EAAMC,OAAOrB,QAsBlClB,UAAWD,EAAQiO,OAEnB,kBAACW,EAAA,EAAD,CACEzN,MAAM,UACN2H,QAAS,kBAACxE,EAAA,EAAD,MACTmH,MAAM,YAER,kBAACmD,EAAA,EAAD,CACEzN,MAAM,MACN2H,QAAS,kBAACxE,EAAA,EAAD,MACTmH,MAAM,sBAMhB,kBAACE,EAAA,EAAD,KACE,kBAAC,EAAD,CAAaxK,MAAOA,EAAO8H,SArClB,kBAAYoF,GAAWD","file":"static/js/18.ff5d1460.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Star = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n  }));\n});\nStar.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nStar.displayName = 'Star';\nexport default Star;","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  Theme\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { Support } from 'src/types/support';\n\ntype Type = 'ads' | 'support';\ninterface ContactFormProps {\n  value: Type;\n  onSubmit: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  control: {\n    minWidth: 300\n  }\n}));\n\nconst ContactForm: FC<ContactFormProps> = ({ value, onSubmit }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        name: '',\n        email: '',\n        company: '',\n        position: '',\n        message: '',\n        support: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required('Name is required'),\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        company: Yup.string().max(255),\n        position: Yup.string().max(255),\n        message: Yup.string().required('Message is required')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          const params = { ...values, type: value };\n          await axios.post<{ support: Support }>('/support/contact', params);\n          setStatus({ success: true });\n          setSubmitting(false);\n          onSubmit();\n          enqueueSnackbar('Your request is submitted', {\n            variant: 'success'\n          });\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {value !== 'ads' && (\n              <Grid item xs={12} sm={12}>\n                <FormControl\n                  className={classes.control}\n                  variant=\"outlined\"\n                  required\n                >\n                  <InputLabel>Support Type</InputLabel>\n                  <Select\n                    name=\"support\"\n                    value={values.support}\n                    onChange={handleChange}\n                    label=\"Support Type\"\n                  >\n                    <MenuItem value=\"Questions/support\">\n                      Questions/support\n                    </MenuItem>\n                    <MenuItem value=\"Feedback/ideas\">Feedback/ideas</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            <Grid item xs={12} sm={6}>\n              <Box mb={1}>\n                <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                  {value === 'support' ? 'User Name *' : 'Full Name *'}\n                </Typography>\n              </Box>\n              <TextField\n                error={Boolean(touched.name && errors.name)}\n                fullWidth\n                helperText={touched.name && errors.name}\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Box mb={1}>\n                <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                  Email *\n                </Typography>\n              </Box>\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                name=\"email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                required\n                variant=\"outlined\"\n              />\n            </Grid>\n            {value === 'ads' && (\n              <>\n                <Grid item xs={12} sm={6}>\n                  <Box mb={1}>\n                    <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                      Position in Company (Optional)\n                    </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.position && errors.position)}\n                    fullWidth\n                    helperText={touched.position && errors.position}\n                    name=\"position\"\n                    value={values.position}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Box mb={1}>\n                    <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                      Company Name (Optional)\n                    </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.company && errors.company)}\n                    fullWidth\n                    helperText={touched.company && errors.company}\n                    name=\"company\"\n                    value={values.company}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </>\n            )}\n            <Grid item xs={12}>\n              <Box mb={1}>\n                <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                  Message *\n                </Typography>\n              </Box>\n              <TextField\n                error={Boolean(touched.message && errors.message)}\n                fullWidth\n                helperText={touched.message && errors.message}\n                name=\"message\"\n                required\n                multiline\n                rows={6}\n                value={values.message}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>{errors.submit}</FormHelperText>\n            </Box>\n          )}\n          <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n            <Button\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              variant=\"contained\"\n              disabled={isSubmitting}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </Box>\n          <Box mt={3} mb={3}>\n            <Typography color=\"textSecondary\" variant=\"body2\">\n              By submitting this, you agree to the{' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"/docs/policy\"\n                variant=\"subtitle2\"\n              >\n                Privacy Policy\n              </Link>{' '}\n              and{' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"/docs/terms\"\n                variant=\"subtitle2\"\n              >\n                Terms\n              </Link>\n              .\n            </Typography>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Star as StarIcon } from 'react-feather';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  avatar: {\n    backgroundColor: colors.blue[600]\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  }\n}));\n\nconst ThankYou: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Thank You\">\n      <Container maxWidth=\"lg\">\n        <Card>\n          <CardContent>\n            <Box maxWidth={450} mx=\"auto\">\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Avatar className={classes.avatar}>\n                  <StarIcon />\n                </Avatar>\n              </Box>\n              <Box mt={2}>\n                <Typography variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                  Thank You!\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"center\"\n                >\n                  Thank you for submitting your feedback to us. We will get back\n                  to you...\n                </Typography>\n              </Box>\n              <Box mt={2} display=\"flex\" justifyContent=\"center\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  component={RouterLink}\n                  to=\"/\"\n                >\n                  Home\n                </Button>\n              </Box>\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ThankYou;\n","import React, { FC, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Hidden,\n  Typography,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  makeStyles,\n  Theme\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ContactForm from './ContactForm';\nimport ThankYou from './ThankYou';\n\ntype Type = 'ads' | 'support';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    paddingTop: 32\n  },\n  container: {\n    minHeight: '100%',\n    padding: theme.spacing(8),\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  group: {\n    color: theme.palette.primary.main,\n    flexDirection: 'row'\n  }\n}));\n\nconst ContactView: FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState<Type>('support');\n  const [isSubmit, setSubmit] = useState<boolean>(false);\n\n  const handleChange = event => setValue(event.target.value);\n\n  const handleSubmit = (): void => setSubmit(!isSubmit);\n\n  return (\n    <>\n      {!isSubmit ? (\n        <Page className={classes.root} title=\"Contact\">\n          <Container maxWidth=\"md\" className={classes.container}>\n            <Box pb={3}>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Hidden smDown>\n                  <Grid item md={12}>\n                    <Typography color=\"textPrimary\" variant=\"h5\">\n                      Choose the Email\n                    </Typography>\n                  </Grid>\n                </Hidden>\n                <Grid item md={12}>\n                  <RadioGroup\n                    value={value}\n                    onChange={handleChange}\n                    className={classes.group}\n                  >\n                    <FormControlLabel\n                      value=\"support\"\n                      control={<Radio />}\n                      label=\"Support\"\n                    />\n                    <FormControlLabel\n                      value=\"ads\"\n                      control={<Radio />}\n                      label=\"Advertisement\"\n                    />\n                  </RadioGroup>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box>\n              <ContactForm value={value} onSubmit={handleSubmit} />\n            </Box>\n          </Container>\n        </Page>\n      ) : (\n        <ThankYou />\n      )}\n    </>\n  );\n};\n\nexport default ContactView;\n"],"sourceRoot":""}