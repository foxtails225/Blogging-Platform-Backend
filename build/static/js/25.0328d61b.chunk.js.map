{"version":3,"sources":["views/post/PostCreateView/PostDetails.tsx","components/QuillEditor.tsx","views/post/PostCreateView/PostContent.tsx","views/post/PostCreateView/PostDisclosure.tsx","views/post/PostCreateView/PostReview/index.tsx","views/post/PostCreateView/index.tsx"],"names":["buttons","name","text","useStyles","makeStyles","theme","root","addTab","marginLeft","spacing","tag","datePicker","toggleBtn","marginTop","color","palette","primary","backgroundColor","secondary","main","common","white","initialTag","symbol","securityName","PostDetails","className","post","onPost","onNext","rest","classes","useState","options","setOptions","search","setSearch","setTag","useEffect","a","axios","get","response","data","length","map","item","fecthData","handleChangeTag","event","value","val","split","initialValues","title","tags","picker","submit","validationSchema","Yup","shape","min","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","console","log","trim","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","clsx","onKeyPress","e","key","preventDefault","Typography","variant","Box","mt","TextField","error","Boolean","fullWidth","helperText","label","placeholder","onBlur","onChange","ToggleButtonGroup","exclusive","size","newAlignment","aria-label","idx","ToggleButton","display","alignItems","Autocomplete","freeSolo","disableClearable","option","tagValue","renderInput","params","InputProps","style","width","target","IconButton","onClick","SvgIcon","i","Chip","onDelete","newTags","filter","t","FormHelperText","flexGrow","Button","disabled","type","defaultProps","borderLeft","borderTop","borderRight","borderBottom","divider","stroke","padding","background","default","border","boxShadow","shadows","borderRadius","fontFamily","typography","fontSize","QuillEditor","editorContainer","editor","height","PostContent","onBack","content","setContent","setError","Paper","PostDisclosure","disclosure","setDisclosure","typeOption","marginBottom","stepButton","chip","box","breakpoints","down","colors","grey","PostReview","onComplete","Grid","container","xs","md","parse","Divider","steps","icon","BriefcaseIcon","FileIcon","GavelIcon","RateReviewIcon","initialPost","slug","CustomStepConnector","withStyles","vertical","line","borderColor","StepConnector","useCustomStepIconStyles","active","contrastText","completed","CustomStepIcon","Icon","Avatar","dark","minHeight","paddingTop","paddingBottom","avatar","red","stepper","PostCreateView","user","useAuth","activeStep","setActiveStep","setCompleted","setPost","fetchData","returnUrl","window","location","replace","stripeId","handleNext","prevActiveStep","handleBack","handleComplete","specialReg","join","toLowerCase","handlePost","prevState","Page","Container","maxWidth","mb","Card","CardContent","mx","justifyContent","align","component","RouterLink","to","Stepper","connector","orientation","step","Step","StepLabel","StepIconComponent","p","LoadingScreen"],"mappings":"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","file":"static/js/25.0328d61b.chunk.js","sourcesContent":["import React, { useState, useEffect, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'src/utils/axios';\nimport {\n  Box,\n  Button,\n  Chip,\n  FormHelperText,\n  IconButton,\n  SvgIcon,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Autocomplete\n} from '@material-ui/lab';\nimport { Plus as PlusIcon } from 'react-feather';\nimport { Theme } from 'src/theme';\nimport { Picker, Post, Tag } from 'src/types/post';\n\ninterface PostDetailsProps {\n  className?: string;\n  post?: Post;\n  onPost?: (param: any) => void;\n  onNext?: () => void;\n}\n\ninterface Status {\n  name: Picker;\n  text: string;\n}\n\nconst buttons: Status[] = [\n  { name: 'bullish', text: 'Bullish' },\n  { name: 'bearish', text: 'Bearish' },\n  { name: 'neutral', text: 'Neutral' },\n  { name: 'no_opinion', text: 'No Opinion' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  addTab: {\n    marginLeft: theme.spacing(2)\n  },\n  tag: {\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  toggleBtn: {\n    marginTop: theme.spacing(3),\n    '&.MuiToggleButton-root': {\n      color: theme.palette.text.primary\n    },\n    '&.Mui-selected': {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.common.white\n    }\n  }\n}));\n\nconst initialTag: Tag = {\n  symbol: '',\n  securityName: '',\n  main: false\n};\n\nconst PostDetails: FC<PostDetailsProps> = ({\n  className,\n  post,\n  onPost,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [options, setOptions] = useState<Tag[]>([]);\n  const [search, setSearch] = useState<string>('');\n  const [tag, setTag] = useState<Tag>(initialTag);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      const response = await axios.get<Tag[]>(`/stock/search/${search}`);\n\n      if (response.data && response.data.length > 0) {\n        let data = response.data.map(item => {\n          return {\n            symbol: item.symbol,\n            securityName: item.securityName,\n            main: false\n          };\n        });\n        setOptions(data);\n      }\n    };\n    search !== '' ? fecthData() : setOptions([]);\n  }, [search]);\n\n  const handleChangeTag = (event, value) => {\n    const val = value.split(': ');\n    setTag({ symbol: val[0], securityName: val[1], main: false });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: post.title || '',\n        tags: post.tags || [],\n        picker: post.picker || buttons[0].name,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string()\n          .min(3, 'Must be at least 3 characters')\n          .max(255)\n          .required('Required'),\n        picker: Yup.string().required('Required'),\n        tags: Yup.array().required()\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          console.log(values)\n          onPost({\n            title: values.title.trim(),\n            tags: values.tags,\n            picker: values.picker\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n\n          if (onNext) {\n            onNext();\n          }\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          onKeyPress={e => {\n            e.key === 'Enter' && e.preventDefault();\n          }}\n          {...rest}\n        >\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Details\n          </Typography>\n          <Box mt={2}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              Do not spam tags. <br />\n              Title should not be spammy. <br />\n              Title and article contents may be subject to grammatical and\n              punctual editing to ensure quality.\n            </Typography>\n          </Box>\n          <Box mt={2}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Article Title\"\n              name=\"title\"\n              placeholder=\"Please type article title.\"\n              value={values.title}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              variant=\"outlined\"\n            />\n            <ToggleButtonGroup\n              value={values.picker}\n              exclusive\n              size=\"small\"\n              onChange={(\n                event: React.MouseEvent<HTMLElement>,\n                newAlignment: string | null\n              ) => {\n                setFieldValue('picker', newAlignment);\n              }}\n              aria-label=\"text alignment\"\n            >\n              {buttons.map((item: Status, idx: number) => (\n                <ToggleButton\n                  key={item.name + idx}\n                  value={item.name}\n                  className={classes.toggleBtn}\n                >\n                  {item.text}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n            <Box mt={3} display=\"flex\" alignItems=\"center\">\n              <Autocomplete\n                freeSolo\n                disableClearable\n                options={options.map(\n                  option => option.symbol + ': ' + option.securityName\n                )}\n                onChange={handleChangeTag}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') {\n                    let tagValue: Tag = tag;\n                    if (tag.symbol === '' || tag.securityName === '') {\n                      return;\n                    }\n\n                    if (values.tags.length === 0) tagValue.main = true;\n                    setFieldValue('tags', [...values.tags, tagValue]);\n                    setTag(initialTag);\n                    setSearch('');\n                  }\n                }}\n                value={search}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    fullWidth\n                    name=\"tags\"\n                    label=\"Ticker\"\n                    placeholder=\"Please choose at least one tag.\"\n                    variant=\"outlined\"\n                    InputProps={{\n                      ...params.InputProps\n                    }}\n                    style={{ width: '52vw' }}\n                    onChange={event => setSearch(event.target.value)}\n                  />\n                )}\n              />\n              <IconButton\n                className={classes.addTab}\n                onClick={() => {\n                  let tagValue: Tag = tag;\n                  if (tag.symbol === '' || tag.securityName === '') {\n                    return;\n                  }\n\n                  if (values.tags.length === 0) tagValue.main = true;\n                  setFieldValue('tags', [...values.tags, tagValue]);\n                  setTag(initialTag);\n                  setSearch('');\n                }}\n              >\n                <SvgIcon>\n                  <PlusIcon />\n                </SvgIcon>\n              </IconButton>\n            </Box>\n            <Box mt={2}>\n              {values.tags.map((tag, i) => (\n                <Chip\n                  variant={tag.main ? 'default' : 'outlined'}\n                  key={i}\n                  label={tag.symbol}\n                  className={classes.tag}\n                  onDelete={() => {\n                    if (values.tags.length > 1 && tag.main)\n                      values.tags[1].main = true;\n\n                    const newTags = values.tags.filter(\n                      t =>\n                        t.symbol !== tag.symbol &&\n                        t.securityName !== tag.securityName\n                    );\n                    setFieldValue('tags', newTags);\n                  }}\n                  color={tag.main ? 'secondary' : 'default'}\n                />\n              ))}\n            </Box>\n            {Boolean(touched.tags && errors.tags) && (\n              <Box mt={2}>\n                <FormHelperText error>{errors.tags}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Box mt={6} display=\"flex\">\n            <Box flexGrow={1} />\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              Next\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nPostDetails.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func\n};\n\nPostDetails.defaultProps = {\n  onPost: () => {},\n  onNext: () => {}\n};\n\nexport default PostDetails;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\nimport { Theme } from 'src/theme';\n\ninterface QuillEditorProps {\n  className?: string;\n  [key: string]: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  }\n}));\n\nconst QuillEditor: FC<QuillEditorProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    /* @ts-ignore */\n    <ReactQuill className={clsx(classes.root, className)} {...rest} />\n  );\n};\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostContentProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  }\n}));\n\nconst PostContent: FC<PostContentProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [content, setContent] = useState<string>(post.content || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setContent(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ content: content.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Content\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Do not advise people to make any financial decisions. <br />\n          Plagiarism is not tolerated.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={content}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostContent.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostContent.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostContent;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\n\ninterface PostDisclosureProps {\n  className?: string;\n  post: Post;\n  onNext?: () => void;\n  onBack?: () => void;\n  onPost: (param: any) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  editorContainer: {\n    marginTop: theme.spacing(3)\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 300\n    },\n    '& .ql-toolbar': {\n      '& .ql-formats > .ql-picker': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\nconst PostDisclosure: FC<PostDisclosureProps> = ({\n  className,\n  post,\n  onPost,\n  onBack,\n  onNext,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [disclosure, setDisclosure] = useState<string>(post.disclosure || '');\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (value: string): void => {\n    setDisclosure(value);\n  };\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n      onPost({ disclosure: disclosure.trim() });\n\n      if (onNext) {\n        onNext();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Disclosure\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Let the readers know if you hold or do not hold any position in the\n          companies you are talking about. Make sure to also let readers know if\n          you are receiving compensation for the article. You may receive one\n          from us if your article is approved and you may receive tips from\n          readers.\n        </Typography>\n      </Box>\n      <Paper className={classes.editorContainer} variant=\"outlined\">\n        <QuillEditor\n          onChange={handleChange}\n          value={disclosure}\n          className={classes.editor}\n        />\n      </Paper>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{FormHelperText}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Next\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostDisclosure.propTypes = {\n  className: PropTypes.string,\n  onPost: PropTypes.func,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostDisclosure.defaultProps = {\n  onPost: () => {},\n  onNext: () => {},\n  onBack: () => {}\n};\n\nexport default PostDisclosure;\n","import React, { useState, FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport parse from 'html-react-parser';\nimport {\n  Box,\n  FormHelperText,\n  Typography,\n  Button,\n  Grid,\n  Chip,\n  Divider,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Post, Tag } from 'src/types/post';\n\ninterface PostReviewProps {\n  className?: string;\n  post?: Post;\n  onBack?: () => void;\n  onComplete?: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  typeOption: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  chip: {\n    marginLeft: theme.spacing(1)\n  },\n  box: {\n    padding: theme.spacing(7),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  content: {\n    fontFamily: theme.typography.fontFamily,\n    marginBottom: theme.spacing(2)\n  },\n  disclosure: {\n    fontFamily: theme.typography.fontFamily,\n    color: colors.grey[500],\n    fontSize: '0.9rem'\n  }\n}));\n\nconst PostReview: FC<PostReviewProps> = ({\n  className,\n  post,\n  onBack,\n  onComplete,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [isSubmitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n\n    try {\n      setSubmitting(true);\n\n      if (onComplete) {\n        onComplete();\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Review\n      </Typography>\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Make sure everything looks good.\n        </Typography>\n      </Box>\n      <Box mt={3} border={1} className={classes.box}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={10}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {post.title}\n            </Typography>\n            <Box mt={3}>\n              <Box mt={1}>\n                {post.tags.map((tag: Tag) => (\n                  <Chip\n                    key={tag.symbol}\n                    variant={tag.main ? 'default' : 'outlined'}\n                    label={tag.symbol}\n                    className={classes.chip}\n                    color={tag.main ? 'primary' : 'default'}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3} className={classes.content}>\n          {parse(post.content)}\n        </Box>\n        <Divider />\n        <Box mt={3} className={classes.disclosure}>\n          {parse(post.disclosure)}\n        </Box>\n      </Box>\n      {error && (\n        <Box mt={2}>\n          <FormHelperText error>{error}</FormHelperText>\n        </Box>\n      )}\n      <Box mt={6} display=\"flex\">\n        {onBack && (\n          <Button onClick={onBack} size=\"large\">\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          disabled={isSubmitting}\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n        >\n          Complete\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nPostReview.propTypes = {\n  className: PropTypes.string,\n  onComplete: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nPostReview.defaultProps = {\n  onComplete: () => {},\n  onBack: () => {}\n};\n\nexport default PostReview;\n","import React, { useState, FC, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Step,\n  StepConnector,\n  StepLabel,\n  Stepper,\n  Typography,\n  colors,\n  makeStyles,\n  withStyles\n} from '@material-ui/core';\nimport {\n  Star as StarIcon,\n  Briefcase as BriefcaseIcon,\n  File as FileIcon\n} from 'react-feather';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport { Post } from 'src/types/post';\nimport Page from 'src/components/Page';\nimport PostDetails from './PostDetails';\nimport PostContent from './PostContent';\nimport PostDisclosure from './PostDisclosure';\nimport PostReview from './PostReview';\nimport LoadingScreen from 'src/components/LoadingScreen';\n\ninterface CustomStepIconProps {\n  active?: boolean;\n  completed?: boolean;\n  icon: number;\n}\n\nconst steps = [\n  {\n    label: 'Details',\n    icon: BriefcaseIcon\n  },\n  {\n    label: 'Content',\n    icon: FileIcon\n  },\n  {\n    label: 'Disclosure',\n    icon: GavelIcon\n  },\n  {\n    label: 'Review',\n    icon: RateReviewIcon\n  }\n];\n\nconst initialPost = {\n  slug: '',\n  title: '',\n  content: '',\n  disclosure: '',\n  tags: []\n};\n\nconst CustomStepConnector = withStyles((theme: Theme) => ({\n  vertical: {\n    marginLeft: 19,\n    padding: 0\n  },\n  line: {\n    borderColor: theme.palette.divider\n  }\n}))(StepConnector);\n\nconst useCustomStepIconStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  active: {\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: theme.shadows[10],\n    color: theme.palette.secondary.contrastText\n  },\n  completed: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst CustomStepIcon: FC<CustomStepIconProps> = ({\n  active,\n  completed,\n  icon\n}) => {\n  const classes = useCustomStepIconStyles();\n\n  const Icon = steps[icon - 1].icon;\n\n  return (\n    <Avatar\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed\n      })}\n    >\n      <Icon size=\"20\" />\n    </Avatar>\n  );\n};\n\nCustomStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  avatar: {\n    backgroundColor: colors.red[600]\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  }\n}));\n\nconst PostCreateView: FC = () => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [completed, setCompleted] = useState<boolean>(false);\n  const [post, setPost] = useState<Post>(initialPost);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.post<{ data: string }>('/stripe/create', {\n        returnUrl: '/posts/new'\n      });\n      window.location.replace(response.data.data);\n    };\n    !user.stripeId && fetchData();\n  }, [user]);\n\n  const handleNext = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = (): void => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleComplete = async (): Promise<void> => {\n    const specialReg = /[^\\w\\s]/gi;\n    const slug = post.title\n      .replace(specialReg, '')\n      .replace('/', '-')\n      .split(' ')\n      .join('-')\n      .trim()\n      .toLowerCase();\n\n    await axios.post<{ post: Post }>('/posts/new', { ...post, slug });\n    setCompleted(true);\n  };\n\n  const handlePost = (values): void => {\n    setPost(prevState => ({ ...prevState, ...values }));\n  };\n  console.log(post)\n  return (\n    <>\n      {!user.stripeId ? (\n        <LoadingScreen />\n      ) : (\n        <Page className={classes.root} title=\"Project Create\">\n          <Container maxWidth=\"lg\">\n            <Box mb={3}>\n              <Typography variant=\"h3\" color=\"textPrimary\">\n                Post New Article\n              </Typography>\n            </Box>\n            {!completed ? (\n              <Paper>\n                <Grid container>\n                  <Grid item xs={12} md={3}>\n                    <Stepper\n                      activeStep={activeStep}\n                      className={classes.stepper}\n                      connector={<CustomStepConnector />}\n                      orientation=\"vertical\"\n                    >\n                      {steps.map(step => (\n                        <Step key={step.label}>\n                          <StepLabel StepIconComponent={CustomStepIcon}>\n                            {step.label}\n                          </StepLabel>\n                        </Step>\n                      ))}\n                    </Stepper>\n                  </Grid>\n                  <Grid item xs={12} md={9}>\n                    <Box p={3}>\n                      {activeStep === 0 && (\n                        <PostDetails\n                          post={post}\n                          onPost={handlePost}\n                          onNext={handleNext}\n                        />\n                      )}\n                      {activeStep === 1 && (\n                        <PostContent\n                          post={post}\n                          onPost={handlePost}\n                          onBack={handleBack}\n                          onNext={handleNext}\n                        />\n                      )}\n                      {activeStep === 2 && (\n                        <PostDisclosure\n                          post={post}\n                          onPost={handlePost}\n                          onBack={handleBack}\n                          onNext={handleNext}\n                        />\n                      )}\n                      {activeStep === 3 && (\n                        <PostReview\n                          post={post}\n                          onBack={handleBack}\n                          onComplete={handleComplete}\n                        />\n                      )}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            ) : (\n              <Card>\n                <CardContent>\n                  <Box maxWidth={450} mx=\"auto\">\n                    <Box display=\"flex\" justifyContent=\"center\">\n                      <Avatar className={classes.avatar}>\n                        <StarIcon />\n                      </Avatar>\n                    </Box>\n                    <Box mt={2}>\n                      <Typography\n                        variant=\"h3\"\n                        color=\"textPrimary\"\n                        align=\"center\"\n                      >\n                        You are all done!\n                      </Typography>\n                    </Box>\n                    <Box mt={2}>\n                      <Typography\n                        variant=\"subtitle1\"\n                        color=\"textSecondary\"\n                        align=\"center\"\n                      >\n                        Thank you for submitting your contribution to us. Your\n                        article is now in review and we will come back to you\n                        with our final decision.\n                      </Typography>\n                    </Box>\n                    <Box mt={2} display=\"flex\" justifyContent=\"center\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        component={RouterLink}\n                        to=\"/account/profile\"\n                      >\n                        Back to Profile\n                      </Button>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            )}\n          </Container>\n        </Page>\n      )}\n    </>\n  );\n};\n\nexport default PostCreateView;\n"],"sourceRoot":""}