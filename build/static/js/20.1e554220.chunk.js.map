{"version":3,"sources":["components/GenericMoreButton.tsx","components/Label.tsx","components/CustomIcon.tsx","views/account/DashboardView/Header.tsx","views/account/DashboardView/Posts.tsx","components/PostRowCard/Reactions.tsx","components/PostRowCard/index.tsx","components/PostRowMobileCard/Reactions.tsx","components/PostRowMobileCard/index.tsx","views/account/DashboardView/Reading.tsx","views/account/DashboardView/Archive.tsx","views/account/DashboardView/Authors.tsx","views/account/DashboardView/Followers.tsx","views/account/DashboardView/Payment.tsx","views/account/DashboardView/index.tsx"],"names":["useStyles","makeStyles","menu","width","maxWidth","memo","props","classes","moreRef","useRef","useState","openMenu","setOpenMenu","title","onClick","ref","fontSize","anchorEl","current","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","className","transformOrigin","primary","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","children","rest","style","clsx","textAlign","icon","CustomIcon","alt","src","initialStatistics","viewers","likes","timeRanges","value","text","params","action","common","white","image","maxHeight","item","breakpoints","up","borderRight","divider","down","borderBottom","label","marginLeft","overline","marginTop","Header","user","useAuth","actionRef","name","setName","isMenuOpen","setMenuOpen","timeRange","setTimeRange","statistics","setStatistics","useEffect","firstName","lastName","a","find","axios","get","response","data","getStatistics","Grid","container","justify","md","xs","Typography","variant","Box","mt","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","map","_timeRange","MenuItem","key","Card","sm","numeral","format","component","labelColors","approved","pending","rejected","columns","Posts","profile","page","setPage","limit","setLimit","count","setCount","order","setOrder","orderBy","setOrderBy","posts","setPosts","sortBy","email","post","console","getPosts","createSortHandler","event","currentTarget","id","CardHeader","GenericMoreButton","Divider","Table","TableHead","TableRow","column","TableCell","align","TableSortLabel","active","direction","disabled","TableBody","idx","hover","_id","Link","RouterLink","to","slug","tags","length","status","moment","createdAt","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","p","initialStatus","isLiked","isBookmarked","isArchived","likedButton","colors","red","commentIcon","grey","Reactions","onFetch","isAuthenticated","setStatus","liked","setLikes","postId","bookmark","archived","prevState","fetchData","users","forEach","updateLiked","put","updateSaved","path","updateArchive","handleSaved","handleArchive","Tooltip","IconButton","prevLikes","ml","mr","size","comments","date","media","backgroundPosition","marginRight","PostRowCard","ListItem","disableGutters","ListItemAvatar","Avatar","author","avatar","ListItemText","primaryTypographyProps","fromNow","setLiked","setBookmarked","PostRowMobileCard","disableTypography","cardContentStyle","paddingTop","paddingBottom","Reading","isMountedRef","useIsMountedRef","bookmarks","setBookmarks","useCallback","lg","CardContent","List","Fragment","Hidden","smDown","mdUp","Archive","Authors","authors","setAuhtors","getAurhtors","disablePadding","i","getInitials","underline","bio","Pagination","Math","ceil","onChange","Followers","initialBalance","available","instant_available","margin","Payment","balance","setBalance","transactions","setTransactions","getBalance","Object","keys","amount","reduce","b","handleRefund","transaction","type","split","charAt","toUpperCase","slice","toLowerCase","join","client","fee","requestRefund","tabs","background","dark","OverviewView","currentTab","setCurrentTab","setProfile","Page","Container","Tabs","scrollButtons","textColor","tab","Tab","py","pb"],"mappings":"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","file":"static/js/20.1e554220.chunk.js","sourcesContent":["import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport type { FC } from 'react';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = (props) => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          {...props}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import React from 'react';\nimport type { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\nimport type { Theme } from 'src/theme'; \n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React, { FC } from 'react';\r\nimport { Icon, makeStyles } from '@material-ui/core';\r\n\r\ninterface CustomIconProps {\r\n  src: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: 'center'\r\n  },\r\n  icon: {\r\n    display: 'flex',\r\n    height: 'inherit',\r\n    width: 'inherit'\r\n  }\r\n}));\r\n\r\nconst CustomIcon: FC<CustomIconProps> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Icon classes={{ root: classes.root }} fontSize=\"small\">\r\n      <img\r\n        alt=\"Custom Icon\"\r\n        className={classes.icon}\r\n        src={props.src}\r\n        {...props}\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default CustomIcon;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Button,\n  Grid,\n  Card,\n  SvgIcon,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\nimport useAuth from 'src/hooks/useAuth';\n\ninterface HeaderProps {\n  className?: string;\n}\n\ninterface Statistics {\n  viewers: number;\n  likes: number;\n}\n\nconst initialStatistics: Statistics = {\n  viewers: 0,\n  likes: 0\n};\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today',\n    params: ['day', 'week', 'month', 'year']\n  },\n  {\n    value: 'week',\n    text: 'Week',\n    params: ['week', 'month', 'year']\n  },\n  {\n    value: 'month',\n    text: 'Month',\n    params: ['month', 'year']\n  },\n  {\n    value: 'year',\n    text: 'Year',\n    params: ['year']\n  },\n  {\n    value: 'total',\n    text: 'Total',\n    params: []\n  }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const actionRef = useRef<any>(null);\n  const [name, setName] = useState<string>('');\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[0].text);\n  const [statistics, setStatistics] = useState<Statistics>(initialStatistics);\n\n  useEffect(() => {\n    const value =\n      user.firstName && user.lastName\n        ? user.firstName + ' ' + user.lastName\n        : user.name;\n    setName(value);\n  }, [user]);\n\n  useEffect(() => {\n    const getStatistics = async () => {\n      try {\n        const params = timeRanges.find(item => item.text === timeRange).params;\n        const response = await axios.get<{ data: Statistics }>(\n          '/account/statistics',\n          { params }\n        );\n        setStatistics(response.data.data);\n      } catch (err) {\n        setStatistics(initialStatistics);\n      }\n    };\n    getStatistics();\n  }, [timeRange]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Overview\n          </Typography>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Good Morning, {name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textPrimary\">\n            Here’s what’s happening with you today\n          </Typography>\n          <Box mt={2}>\n            <Button\n              ref={actionRef}\n              className={classes.action}\n              variant=\"contained\"\n              onClick={() => setMenuOpen(true)}\n              startIcon={\n                <SvgIcon fontSize=\"small\">\n                  <CalendarIcon />\n                </SvgIcon>\n              }\n            >\n              {timeRange} summary\n            </Button>\n            <Menu\n              anchorEl={actionRef.current}\n              onClose={() => setMenuOpen(false)}\n              open={isMenuOpen}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center'\n              }}\n            >\n              {timeRanges.map(_timeRange => (\n                <MenuItem\n                  key={_timeRange.value}\n                  onClick={() => setTimeRange(_timeRange.text)}\n                >\n                  {_timeRange.text} Summary\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Grid>\n      </Grid>\n      <Box mt={3}>\n        <Card className={clsx(classes.root, className)} {...rest}>\n          <Grid alignItems=\"center\" container justify=\"space-between\">\n            <Grid className={classes.item} item md={3} sm={6} xs={12}>\n              <Typography variant=\"h2\" color=\"textPrimary\">\n                {numeral(0).format('$0,0.00')}\n              </Typography>\n              <Typography\n                className={classes.overline}\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {timeRange} income\n              </Typography>\n            </Grid>\n            <Grid className={classes.item} item md={3} sm={6} xs={12}>\n              <Typography variant=\"h2\" color=\"textPrimary\">\n                {numeral(0).format('$0,0.00')}\n              </Typography>\n              <Typography\n                className={classes.overline}\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {timeRange} tips\n              </Typography>\n            </Grid>\n            <Grid className={classes.item} item md={3} sm={6} xs={12}>\n              <Typography variant=\"h2\" color=\"textPrimary\">\n                {statistics.viewers}\n              </Typography>\n              <Typography\n                className={classes.overline}\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {timeRange} views\n              </Typography>\n            </Grid>\n            <Grid className={classes.item} item md={3} sm={6} xs={12}>\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <Typography component=\"span\" variant=\"h2\" color=\"textPrimary\">\n                  {statistics.likes}\n                </Typography>\n                <Label className={classes.label} color=\"primary\">\n                  Live\n                </Label>\n              </Box>\n              <Typography\n                className={classes.overline}\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {timeRange} likes\n              </Typography>\n            </Grid>\n          </Grid>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useEffect, useState, ChangeEvent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport { Post, PostStatus } from 'src/types/post';\nimport { User } from 'src/types/user';\nimport useAuth from 'src/hooks/useAuth';\n\ninterface PostsProps {\n  className?: string;\n  profile: User;\n}\n\ntype OrderByStatus = 'desc' | 'asc';\n\nconst labelColors: Record<PostStatus, 'success' | 'warning' | 'error'> = {\n  approved: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst columns = [\n  { name: 'no', value: 'No' },\n  { name: 'title', value: 'Title' },\n  { name: 'tags', value: 'Tags' },\n  { name: 'total', value: 'Total' },\n  { name: 'status', value: 'Status' },\n  { name: 'createdAt', value: 'Date' }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Posts: FC<PostsProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n  const [count, setCount] = useState<number>(0);\n  const [order, setOrder] = useState<string>('createdAt');\n  const [orderBy, setOrderBy] = useState<OrderByStatus>('desc');\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const sortBy = { [order]: orderBy === 'desc' ? -1 : 1 };\n        const params = { email: profile.email, page, sortBy, limit, user };\n        const response = await axios.post<{\n          posts: Post[];\n          count: number;\n          isAuthor: boolean;\n        }>('/posts/all/', params);\n\n        setPosts(response.data.posts);\n        setCount(response.data.count);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getPosts();\n  }, [page, profile.email, order, orderBy, limit, user]);\n\n  const createSortHandler = (event): void => {\n    const value = orderBy !== 'desc' ? 'desc' : 'asc';\n    setOrder(event.currentTarget.id);\n    setOrderBy(value);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) =>\n    setPage(newPage);\n\n  const handleSortDirection = (name: string): OrderByStatus => {\n    const direction = order === name && orderBy ? orderBy : 'desc';\n    return direction;\n  };\n\n  const handleChangeLimit = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Latest Posts\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell key={column.name} align=\"center\">\n                    <TableSortLabel\n                      id={column.name}\n                      active={order === column.name}\n                      onClick={createSortHandler}\n                      direction={handleSortDirection(column.name)}\n                      disabled={column.name === 'no'}\n                    >\n                      {column.value}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {posts.map((post: Post, idx: number) => (\n                <TableRow hover key={post._id}>\n                  <TableCell align=\"center\">{idx + 1}</TableCell>\n                  <TableCell align=\"center\">\n                    <Link\n                      color=\"textPrimary\"\n                      component={RouterLink}\n                      to={'/posts/public/' + post.slug}\n                      variant=\"body2\"\n                    >\n                      {post.title}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">{post.tags.length}</TableCell>\n                  <TableCell align=\"center\">$0</TableCell>\n                  <TableCell align=\"center\">\n                    <Label color={labelColors[post.status]}>\n                      {post.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {moment(post.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={count}\n            rowsPerPage={limit}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeLimit}\n          />\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\" />\n    </Card>\n  );\n};\n\nPosts.propTypes = {\n  className: PropTypes.string,\n  //@ts-ignore\n  profile: PropTypes.object\n};\n\nexport default Posts;\n","import React, { useState, useEffect, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport UnarchiveOutlinedIcon from '@material-ui/icons/UnarchiveOutlined';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from 'src/components/CustomIcon';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Post } from 'src/types/post';\nimport { Bookmark } from 'src/types/bookmark';\n\ninterface ReactionsProps {\n  className?: string;\n  post: Post;\n  onFetch: () => void;\n}\n\ninterface Status {\n  isLiked: boolean;\n  isBookmarked: boolean;\n  isArchived: boolean;\n}\n\nconst initialStatus = {\n  isLiked: false,\n  isBookmarked: false,\n  isArchived: false\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  commentIcon: {\n    color: colors.grey[700]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  post,\n  onFetch,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user, isAuthenticated } = useAuth();\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const params = { postId: post._id };\n        const response = await axios.get<{ bookmark: Bookmark }>(\n          '/bookmarks/get',\n          {\n            params\n          }\n        );\n        const isArchived = response.data.bookmark.archived;\n        setStatus(prevState => ({\n          ...prevState,\n          isBookmarked: true,\n          isArchived\n        }));\n      } catch (err) {\n        setStatus(prevState => ({\n          ...prevState,\n          isBookmarked: false,\n          isArchived: false\n        }));\n      }\n    };\n    fetchData();\n  }, [post]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      post.liked.users.forEach(\n        item =>\n          item === user._id &&\n          setStatus(prevState => ({ ...prevState, isLiked: true }))\n      );\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.liked.users, user]);\n\n  const updateLiked = async (): Promise<void> => {\n    const params = { postId: post._id, isLiked: !status.isLiked };\n    await axios.put<{ post: Post }>('/posts/liked', params);\n  };\n\n  const updateSaved = async (): Promise<void> => {\n    const params = { postId: post._id };\n    const path = status.isBookmarked ? 'delete' : 'create';\n    await axios.post<{ bookmark: Bookmark }>(`/bookmarks/${path}`, params);\n    onFetch();\n  };\n\n  const updateArchive = async (): Promise<void> => {\n    const params = { postId: post._id, isArchived: !status.isArchived };\n    await axios.put<{ bookmark: Bookmark }>(\n      `/bookmarks/update/archived`,\n      params\n    );\n    onFetch();\n  };\n\n  const handleLike = (): void => {\n    setLikes(prevLikes => prevLikes + 1);\n    setStatus(prevState => ({ ...prevState, isLiked: true }));\n    updateLiked();\n  };\n\n  const handleUnlike = (): void => {\n    setLikes(prevLikes => prevLikes - 1);\n    setStatus(prevState => ({ ...prevState, isLiked: false }));\n    updateLiked();\n  };\n\n  const handleSaved = (): void => {\n    setStatus(prevState => ({\n      ...prevState,\n      isBookmarked: !status.isBookmarked\n    }));\n    updateSaved();\n  };\n\n  const handleArchive = (): void => {\n    setStatus(prevState => ({\n      ...prevState,\n      isBookmarked: !status.isArchived\n    }));\n    updateArchive();\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1} />\n      {status.isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\n            <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      {status.isBookmarked && status.isArchived ? (\n        <Tooltip title=\"Unsaved\">\n          <IconButton className={classes.likedButton} onClick={handleArchive}>\n            <UnarchiveOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Saved\">\n          <IconButton onClick={handleArchive}>\n            <ArchiveOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      {status.isBookmarked ? (\n        <Tooltip title=\"Unsaved\">\n          <IconButton className={classes.likedButton} onClick={handleSaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Saved\">\n          <IconButton onClick={handleSaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from './Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface PostRowCardProps {\r\n  className?: string;\r\n  post: Post;\r\n  onFetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PostRowCard: FC<PostRowCardProps> = ({\r\n  className,\r\n  post,\r\n  onFetch,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to={'/posts/public/' + post.slug}\r\n            variant=\"h5\"\r\n          >\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            <Link\r\n              color=\"textSecondary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h6\"\r\n            >\r\n              {typeof post.author !== 'string' && post.author.name}\r\n            </Link>\r\n            {` `}\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n        }\r\n      />\r\n      <Reactions post={post} onFetch={onFetch} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nPostRowCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PostRowCard;\r\n","import React, { useState, useEffect, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport { MessageCircle as MessageCircleIcon } from 'react-feather';\nimport CustomIcon from 'src/components/CustomIcon';\nimport axios from 'src/utils/axios';\nimport useAuth from 'src/hooks/useAuth';\nimport { Post } from 'src/types/post';\nimport { Bookmark } from 'src/types/bookmark';\n\ninterface ReactionsProps {\n  className?: string;\n  post: Post;\n  onFetch: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  commentIcon: {\n    color: colors.grey[700]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({\n  className,\n  post,\n  onFetch,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user, isAuthenticated } = useAuth();\n  const [isLiked, setLiked] = useState<boolean>(false);\n  const [isBookmarked, setBookmarked] = useState<boolean>(true);\n  const [likes, setLikes] = useState<number>(post.liked.count);\n\n  useEffect(() => {\n    isAuthenticated &&\n      post.liked.users.forEach(item => item === user._id && setLiked(true));\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.liked.users]);\n\n  const updateLiked = async (): Promise<void> => {\n    const params = { postId: post._id, isLiked: !isLiked };\n    await axios.put<{ post: Post }>('/posts/liked', params);\n  };\n\n  const updateSaved = async (): Promise<void> => {\n    const params = { postId: post._id };\n    const path = isBookmarked ? 'delete' : 'create';\n    await axios.post<{ bookmark: Bookmark }>(`/bookmarks/${path}`, params);\n  };\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n    updateLiked();\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n    updateLiked();\n  };\n\n  const handleSaved = (): void => {\n    setBookmarked(true);\n    updateSaved();\n    onFetch();\n  };\n\n  const handleUnsaved = (): void => {\n    setBookmarked(false);\n    updateSaved();\n    onFetch();\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1} />\n      {isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\n            <CustomIcon src=\"/static/icons/trending_filled.svg\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <CustomIcon src=\"/static/icons/trending_outlined.svg\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box ml={2} mr={1} marginTop=\"2px\">\n        <MessageCircleIcon className={classes.commentIcon} size=\"20\" />\n      </Box>\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {post.comments.length}\n      </Typography>\n      {isBookmarked ? (\n        <Tooltip title=\"Unsaved\">\n          <IconButton className={classes.likedButton} onClick={handleUnsaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Saved\">\n          <IconButton onClick={handleSaved}>\n            <BookmarkBorderOutlinedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Reactions from './Reactions';\r\nimport { Post } from 'src/types/post';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface PostRowMobileCardProps {\r\n  className?: string;\r\n  post: Post;\r\n  onFetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PostRowMobileCard: FC<PostRowMobileCardProps> = ({\r\n  className,\r\n  post,\r\n  onFetch,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      divider\r\n      alignItems=\"flex-start\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          alt=\"Person\"\r\n          component={RouterLink}\r\n          src={typeof post.author !== 'string' && post.author.avatar}\r\n          to=\"#\"\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        disableTypography\r\n        primary={\r\n          <Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h5\">\r\n            {post.title}\r\n          </Link>\r\n        }\r\n        primaryTypographyProps={{\r\n          variant: 'body1',\r\n          color: 'textPrimary'\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography variant=\"caption\" color=\"textSecondary\" component={'p'}>\r\n              <Link\r\n                color=\"textSecondary\"\r\n                component={RouterLink}\r\n                to=\"#\"\r\n                variant=\"h6\"\r\n              >\r\n                {typeof post.author !== 'string' && post.author.name}\r\n              </Link>\r\n              {` `}\r\n              {moment(post.createdAt).fromNow()}\r\n            </Typography>\r\n            <Reactions post={post} onFetch={onFetch} />\r\n          </>\r\n        }\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nPostRowMobileCard.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PostRowMobileCard;\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  List,\n  Hidden,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { User } from 'src/types/user';\nimport { Bookmark, BookmarkWithPost } from 'src/types/bookmark';\nimport { Theme } from 'src/theme';\nimport ListItemCard from 'src/components/PostRowCard';\nimport ListItemMobileCard from 'src/components/PostRowMobileCard';\n\ninterface ReadingProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst cardContentStyle = {\n  paddingTop: 0,\n  paddingBottom: 0\n};\n\nconst Reading: FC<ReadingProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { page };\n      const response = await axios.get<{ bookmarks: Bookmark[]; page: number }>(\n        '/bookmarks/all',\n        {\n          params\n        }\n      );\n      if (isMountedRef.current) {\n        setBookmarks(response.data.bookmarks);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {bookmarks.length > 0 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Card>\n              <CardContent style={cardContentStyle}>\n                <List>\n                  {bookmarks.map((bookmark: BookmarkWithPost) => (\n                    <React.Fragment key={bookmark._id}>\n                      <Hidden smDown>\n                        <ListItemCard post={bookmark.post} onFetch={getPosts} />\n                      </Hidden>\n                      <Hidden mdUp>\n                        <ListItemMobileCard\n                          post={bookmark.post}\n                          onFetch={getPosts}\n                        />\n                      </Hidden>\n                    </React.Fragment>\n                  ))}\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nReading.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Reading;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  List,\n  Hidden,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { User } from 'src/types/user';\nimport { Bookmark, BookmarkWithPost } from 'src/types/bookmark';\nimport { Theme } from 'src/theme';\nimport ListItemCard from 'src/components/PostRowCard';\nimport ListItemMobileCard from 'src/components/PostRowMobileCard';\n\ninterface ArchiveProps {\n  className?: string;\n  profile: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  },\n  title: {\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    }\n  }\n}));\n\nconst cardContentStyle = {\n  paddingTop: 0,\n  paddingBottom: 0\n};\n\nconst Archive: FC<ArchiveProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [page, setPage] = useState<number>(1);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const params = { page };\n      const response = await axios.get<{ bookmarks: Bookmark[]; page: number }>(\n        '/bookmarks/archived-all',\n        {\n          params\n        }\n      );\n      if (isMountedRef.current) {\n        setBookmarks(response.data.bookmarks);\n        setPage(response.data.page);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef, page]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {bookmarks.length > 0 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} lg={12}>\n            <Card>\n              <CardContent style={cardContentStyle}>\n                <List>\n                  {bookmarks.map((bookmark: BookmarkWithPost) => (\n                    <React.Fragment key={bookmark._id}>\n                      <Hidden smDown>\n                        <ListItemCard post={bookmark.post} onFetch={getPosts} />\n                      </Hidden>\n                      <Hidden mdUp>\n                        <ListItemMobileCard\n                          post={bookmark.post}\n                          onFetch={getPosts}\n                        />\n                      </Hidden>\n                    </React.Fragment>\n                  ))}\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nArchive.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Archive;\n","import React, { useState, useEffect, useCallback, FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { User } from 'src/types/user';\r\nimport { Theme } from 'src/theme';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface AuthorsProps {\r\n  className?: string;\r\n  profile: User;\r\n}\r\n\r\ninterface Status {\r\n  page: number;\r\n  limit: number;\r\n  count: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst initialStatus: Status = {\r\n  page: 1,\r\n  limit: 10,\r\n  count: 0\r\n};\r\n\r\nconst Authors: FC<AuthorsProps> = ({ className, profile, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [authors, setAuhtors] = useState<User[]>([]);\r\n  const [status, setStatus] = useState<Status>(initialStatus);\r\n\r\n  const getAurhtors = useCallback(async () => {\r\n    try {\r\n      const params = { page: status.page - 1, limit: status.limit };\r\n      const response = await axios.post<{ users: User[]; count: number }>(\r\n        `/account/following`,\r\n        params\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setAuhtors(response.data.users);\r\n        setStatus(prevState => ({\r\n          ...prevState,\r\n          count: response.data.count\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setAuhtors([]);\r\n    }\r\n  }, [isMountedRef, status.page, status.limit]);\r\n  \r\n  useEffect(() => {\r\n    getAurhtors();\r\n  }, [getAurhtors]);\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    setStatus(prevState => ({ ...prevState, page }));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {authors.map((author: User, i) => (\r\n          <ListItem divider={i < authors.length} key={author._id}>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt=\"Customer\"\r\n                component={RouterLink}\r\n                src={author.avatar}\r\n                to={'/users/' + author.name}\r\n              >\r\n                {getInitials(author.name)}\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to={'/users/' + author.name}\r\n                  underline=\"none\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {author.name}\r\n                </Link>\r\n              }\r\n              secondary={\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {author.bio}\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n        <Pagination\r\n          count={Math.ceil(status.count / status.limit)}\r\n          page={status.page}\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAuthors.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Authors;\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { User } from 'src/types/user';\r\nimport { Theme } from 'src/theme';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface FollowersProps {\r\n  className?: string;\r\n  profile: User;\r\n}\r\n\r\ninterface Status {\r\n  page: number;\r\n  limit: number;\r\n  count: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst initialStatus: Status = {\r\n  page: 1,\r\n  limit: 10,\r\n  count: 0\r\n};\r\n\r\nconst Followers: FC<FollowersProps> = ({ className, profile, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [authors, setAuhtors] = useState<User[]>([]);\r\n  const [status, setStatus] = useState<Status>(initialStatus);\r\n\r\n  const getAurhtors = useCallback(async () => {\r\n    try {\r\n      const params = { page: status.page - 1, limit: status.limit };\r\n      const response = await axios.post<{ users: User[]; count: number }>(\r\n        `/account/followers`,\r\n        params\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setAuhtors(response.data.users);\r\n        setStatus(prevState => ({\r\n          ...prevState,\r\n          count: response.data.count\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setAuhtors([]);\r\n    }\r\n  }, [isMountedRef, status.page, status.limit]);\r\n\r\n  useEffect(() => {\r\n    getAurhtors();\r\n  }, [getAurhtors]);\r\n\r\n  const handleChangePage = (event: unknown, page: number) => {\r\n    setStatus(prevState => ({ ...prevState, page }));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {authors.map((author: User, i) => (\r\n          <ListItem divider={i < authors.length} key={author._id}>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt=\"Customer\"\r\n                component={RouterLink}\r\n                src={author.avatar}\r\n                to={'/users/' + author.name}\r\n              >\r\n                {getInitials(author.name)}\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to={'/users/' + author.name}\r\n                  underline=\"none\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {author.name}\r\n                </Link>\r\n              }\r\n              secondary={\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {author.bio}\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Box p={2} display=\"flex\" justifyContent=\"center\">\r\n        <Pagination\r\n          count={Math.ceil(status.count / status.limit)}\r\n          page={status.page}\r\n          color=\"primary\"\r\n          onChange={handleChangePage}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nFollowers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Followers;\r\n","import React, { FC, useEffect, useState, ChangeEvent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  TablePagination,\n  makeStyles,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { User } from 'src/types/user';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport {\n  Balance,\n  Transaction,\n  TransactionWithClient\n} from 'src/types/transaction';\n\ninterface PaymentProps {\n  className?: string;\n  profile: User;\n}\n\ntype OrderByStatus = 'desc' | 'asc';\n\ninterface Status {\n  page: number;\n  limit: number;\n  order: string;\n  orderBy: OrderByStatus;\n}\n\nconst columns = [\n  { name: 'no', value: 'No' },\n  { name: 'createdAt', value: 'Date' },\n  { name: 'status', value: 'Status' },\n  { name: 'type', value: 'Type' },\n  { name: 'client', value: 'Client' },\n  { name: 'amount', value: 'Initial Pyament' },\n  { name: 'fee', value: 'Fee' },\n  { name: 'income', value: 'Net Income' },\n  { name: 'refund', value: '' }\n];\n\nconst initialStatus: Status = {\n  page: 0,\n  limit: 5,\n  order: 'createdAt',\n  orderBy: 'desc'\n};\n\nconst initialBalance: Balance = {\n  available: 0,\n  instant_available: 0,\n  pending: 0\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Payment: FC<PaymentProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [count, setCount] = useState<number>(0);\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [balance, setBalance] = useState<Balance>(initialBalance);\n  const [transactions, setTransactions] = useState<TransactionWithClient[]>([]);\n\n  const getPosts = async () => {\n    try {\n      const sortBy = { [status.order]: status.orderBy === 'desc' ? -1 : 1 };\n      const params = { page: status.page, sortBy, limit: status.limit, user };\n      const response = await axios.post<{\n        transactions: TransactionWithClient[];\n        count: number;\n      }>('/transactions/all/', params);\n\n      setTransactions(response.data.transactions);\n      setCount(response.data.count);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getBalance = async () => {\n    try {\n      const response = await axios.get('/stripe/balance');\n\n      if (response.data) {\n        Object.keys(balance).forEach(item => {\n          const amount = response.data[item].reduce(\n            (a, b) => a + (b['amount'] || 0),\n            0\n          );\n          setBalance(prevState => ({ ...prevState, [item]: amount / 100 }));\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getBalance();\n    getPosts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status, user]);\n\n  const createSortHandler = (event): void => {\n    const { id } = event.currentTarget;\n    const value = status.orderBy !== 'desc' ? 'desc' : 'asc';\n    setStatus(prevState => ({\n      ...prevState,\n      order: id,\n      orderBy: value\n    }));\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) =>\n    setStatus(prevState => ({ ...prevState, page: newPage }));\n\n  const handleSortDirection = (name: string): OrderByStatus => {\n    const direction =\n      status.order === name && status.orderBy ? status.orderBy : 'desc';\n    return direction;\n  };\n\n  const handleChangeLimit = (event: ChangeEvent<HTMLInputElement>): void => {\n    setStatus(prevState => ({\n      ...prevState,\n      limit: parseInt(event.target.value, 10),\n      page: 0\n    }));\n  };\n\n  const handleRefund = async event => {\n    const params = { _id: event.currentTarget.name };\n    if (event.currentTarget.name) {\n      await axios.put<{ transaction: Transaction }>(\n        '/transactions/refund/',\n        params\n      );\n    }\n    getPosts();\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            Balance: {numeral(balance.instant_available).format(`$0,0.00`)}\n          </Typography>\n        }\n        classes={{ action: classes.action }}\n        title=\"Latest Transactions\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell key={column.name} align=\"center\">\n                    <TableSortLabel\n                      id={column.name}\n                      active={status.order === column.name}\n                      onClick={createSortHandler}\n                      direction={handleSortDirection(column.name)}\n                      disabled={\n                        column.name === 'no' ||\n                        column.name === 'income' ||\n                        column.name === 'refund' ||\n                        column.name === 'status' ||\n                        column.name === 'client'\n                      }\n                    >\n                      {column.value}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {transactions.map(\n                (transaction: TransactionWithClient, idx: number) => (\n                  <TableRow hover key={transaction._id}>\n                    <TableCell align=\"center\">{idx + 1}</TableCell>\n                    <TableCell align=\"center\">\n                      {moment(transaction.createdAt).format(\n                        'DD MMM, YYYY hh:mm:ss'\n                      )}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {transaction.user === profile._id ? 'Received' : 'Sent'}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {transaction.type\n                        .split('_')\n                        .map(\n                          item =>\n                            item.charAt(0).toUpperCase() +\n                            item.slice(1).toLowerCase()\n                        )\n                        .join(' ')}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {transaction.client._id !== profile._id && (\n                        <Link\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={'/users/' + transaction.client.name}\n                          variant=\"body2\"\n                        >\n                          {transaction.client?.name}\n                        </Link>\n                      )}\n                    </TableCell>\n                    <TableCell align=\"center\">${transaction.amount}</TableCell>\n                    <TableCell align=\"center\">${transaction.fee}</TableCell>\n                    <TableCell align=\"center\">\n                      ${transaction.amount - transaction.fee}\n                    </TableCell>\n                    <TableCell width=\"10%\">\n                      <Button\n                        name={transaction?._id}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={handleRefund}\n                        disabled={\n                          transaction.user === profile._id ||\n                          transaction.requestRefund\n                        }\n                      >\n                        Refund\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                )\n              )}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={count}\n            rowsPerPage={status.limit}\n            page={status.page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeLimit}\n          />\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\" />\n    </Card>\n  );\n};\n\nPayment.propTypes = {\n  className: PropTypes.string,\n  //@ts-ignore\n  profile: PropTypes.object\n};\n\nexport default Payment;\n","import React, {\n  FC,\n  useState,\n  useEffect,\n  useCallback,\n  ChangeEvent\n} from 'react';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport { User } from 'src/types/user';\nimport Header from './Header';\nimport Posts from './Posts';\nimport Reading from './Reading';\nimport Archive from './Archive';\nimport Authors from './Authors';\nimport Followers from './Followers';\nimport Payment from './Payment';\n\nconst tabs = [\n  { value: 'posts', label: 'posts' },\n  { value: 'reading', label: 'dank reads' },\n  { value: 'archive', label: 'Archive' },\n  { value: 'payment', label: 'payment' },\n  { value: 'followers', label: 'followers' },\n  { value: 'tags', label: 'tickers followed' },\n  { value: 'authors', label: 'Authors Followed' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst OverviewView: FC = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState<string>('payment');\n  const [profile, setProfile] = useState<User | null>(null);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(async () => {\n    const response = await axios.get<{ user: User }>('/account/about');\n\n    if (isMountedRef.current) {\n      setProfile(response.data.user);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'posts' && <Posts profile={profile} />}\n          {currentTab === 'reading' && <Reading profile={profile} />}\n          {currentTab === 'authors' && <Authors profile={profile} />}\n          {currentTab === 'followers' && <Followers profile={profile} />}\n          {currentTab === 'archive' && <Archive profile={profile} />}\n          {currentTab === 'payment' && <Payment profile={profile} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default OverviewView;\n"],"sourceRoot":""}