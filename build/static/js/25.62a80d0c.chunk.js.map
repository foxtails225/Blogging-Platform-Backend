{"version":3,"sources":["utils/getInitials.ts","views/symbol/SymbolView/Header/index.tsx","views/symbol/SymbolView/Opinions/DankNews.tsx","views/symbol/SymbolView/Opinions/ProfileGlance.tsx","views/symbol/SymbolView/Opinions/KeyGlance.tsx","views/symbol/SymbolView/Opinions/index.tsx","views/symbol/SymbolView/Financials/index.tsx","views/symbol/SymbolView/News.tsx","views/symbol/SymbolView/index.tsx"],"names":["getInitials","name","replace","split","slice","map","v","toUpperCase","join","initialColor","quote","colors","green","preQuote","buttons","label","visible","useStyles","makeStyles","theme","root","action","backgroundColor","palette","common","white","image","width","maxHeight","item","padding","spacing","textAlign","breakpoints","up","borderRight","divider","down","borderBottom","marginLeft","overline","marginTop","Header","className","path","rest","classes","useState","setName","setQuote","color","setColor","period","setPeriod","useEffect","value","a","axios","get","response","data","quoteData","latestPrice","change","changePercent","extendedPrice","extendedChange","extendedChangePercent","companyName","fecthQuote","quoteColor","red","preQuoteColor","handleClick","event","currentTarget","clsx","Grid","container","md","xs","Typography","variant","display","style","Math","abs","Box","mt","VisxWrapper","ratio","ButtonGroup","size","button","Button","key","onClick","chips","text","flexShrink","height","subscriptions","fontWeight","typography","fontWeightMedium","picker","DankNews","isMountedRef","useIsMountedRef","posts","setPosts","getPosts","useCallback","current","Card","CardHeader","title","Divider","Table","TableBody","post","TableRow","hover","_id","TableCell","alignItems","Avatar","alt","src","author","avatar","component","RouterLink","to","ml","Link","slug","flexGrow","Chip","find","p","justifyContent","endIcon","collapse","textOverflow","overflow","box","link","more","fontFamily","ProfileGlance","profile","setProfile","expanded","setExpanded","fetchData","Paper","justify","my","lg","description","Hidden","mdDown","align","sector","industry","numeral","employees","format","address","city","state","zip","country","phone","displayType","CEO","lgUp","gutterBottom","href","website","target","KeyGlance","source","setSource","avg10Volume","week52high","week52low","marketcap","sharesOutstanding","beta","paddingTop","Opinions","minHeight","Financials","Container","maxWidth","marginRight","content","paddingBottom","chip","margin","News","results","setResults","amount","setAmount","length","CardContent","List","result","id","ListItem","disableGutters","image_url","ListItemText","primary","news_url","primaryTypographyProps","secondary","tickers","ticker","i","date","disabled","fullWidth","tabs","background","dark","SymbolView","location","useLocation","setPath","currentTab","setCurrentTab","pathname","Page","Tabs","onChange","scrollButtons","textColor","tab","Tab","pb"],"mappings":"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","file":"static/js/25.62a80d0c.chunk.js","sourcesContent":["const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import React, { FC, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport {\n  Grid,\n  ButtonGroup,\n  Button,\n  Typography,\n  Box,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport { Quote } from 'src/types/stock';\nimport VisxWrapper from 'src/components/VisxWrapper';\n\ninterface HeaderProps {\n  className?: string;\n  path: string;\n}\n\ninterface Color {\n  quote: string;\n  preQuote: string;\n}\n\nconst initialColor: Color = {\n  quote: colors.green[300],\n  preQuote: colors.green[300]\n};\n\nconst buttons = [\n  { name: 'dynamic', label: '1D', visible: true },\n  { name: '5d', label: '5D', visible: true },\n  { name: '1m', label: '1M', visible: true },\n  { name: '3m', label: '3M', visible: false },\n  { name: '1y', label: '1Y', visible: true },\n  { name: '5y', label: '5Y', visible: false },\n  { name: 'max', label: 'ALL', visible: true }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, path, ...rest }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>('');\n  const [quote, setQuote] = useState<Quote>();\n  const [color, setColor] = useState<Color>(initialColor);\n  const [period, setPeriod] = useState<string>('dynamic');\n\n  useEffect(() => {\n    if (!path) return;\n\n    const fecthQuote = async (value: string) => {\n      const response = await axios.get<Quote>(`/stock/quote/${value}`);\n\n      if (response.data) {\n        let quoteData = {\n          latestPrice: response.data.latestPrice ?? 'N/A',\n          change: response.data.change ?? 'N/A',\n          changePercent: response.data.changePercent ?? 'N/A',\n          extendedPrice: response.data.extendedPrice ?? 'N/A',\n          extendedChange: response.data.extendedChange ?? 'N/A',\n          extendedChangePercent: response.data.extendedChangePercent ?? 'N/A'\n        };\n\n        setQuote(quoteData);\n        setName(value + ' : ' + response.data.companyName);\n      }\n    };\n\n    fecthQuote(path);\n  }, [path]);\n\n  useEffect(() => {\n    if (!quote) return;\n    let quoteColor = quote.change >= 0 ? colors.green[300] : colors.red[300];\n    let preQuoteColor =\n      quote.extendedChange >= 0 ? colors.green[300] : colors.red[300];\n\n    setColor({ quote: quoteColor, preQuote: preQuoteColor });\n  }, [quote]);\n\n  const handleClick = (event): void => setPeriod(event.currentTarget.name);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item md={6} xs={12}>\n          <Typography variant=\"h3\" color=\"textPrimary\" display=\"inline\">\n            {`${name} - `}\n          </Typography>\n          {quote && (\n            <Typography\n              variant=\"body1\"\n              display=\"inline\"\n              style={{ color: color.quote }}\n            >\n              ${quote.latestPrice} {quote.change >= 0 ? '+' : '-'}$\n              {typeof quote.change === 'number'\n                ? Math.abs(quote.change)\n                : quote.change}{' '}\n              ({quote.changePercent >= 0 && '+'}\n              {(quote.changePercent as number) * 100}%)\n            </Typography>\n          )}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`After Hours - `}\n            {quote && (\n              <Typography\n                variant=\"body1\"\n                display=\"inline\"\n                style={{ color: color.preQuote }}\n              >\n                ${quote.extendedPrice} {quote.extendedChange >= 0 ? '+' : '-'}$\n                {typeof quote.extendedChange === 'number'\n                  ? Math.abs(quote.extendedChange)\n                  : quote.extendedChange}{' '}\n                ({quote.extendedChangePercent >= 0 && '+'}\n                {(quote.extendedChangePercent as number) * 100}%)\n              </Typography>\n            )}\n          </Typography>\n          <Box mt={3}>\n            <VisxWrapper\n              period={period}\n              path={path}\n              width={700}\n              ratio={0.4}\n            />\n          </Box>\n        </Grid>\n        <Grid item md={6}>\n          <Box mt={9} style={{ textAlign: 'end' }}>\n            <ButtonGroup color=\"primary\" size=\"small\">\n              {buttons.map(button => (\n                <Button\n                  key={button.name}\n                  name={button.name}\n                  onClick={handleClick}\n                  variant={period === button.name ? 'contained' : 'outlined'}\n                >\n                  {button.label}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.string\n};\n\nexport default Header;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Chip,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { PostWithAuthor, Picker } from 'src/types/post';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface DankNewsProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\ninterface PickerStatus {\r\n  name: Picker;\r\n  text: string;\r\n}\r\n\r\nconst chips: PickerStatus[] = [\r\n  { name: 'bullish', text: 'Bullish' },\r\n  { name: 'bearish', text: 'Bearish' },\r\n  { name: 'neutral', text: 'Neutral' },\r\n  { name: 'no_opinion', text: 'No Opinion' }\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  picker: {}\r\n}));\r\n\r\nconst DankNews: FC<DankNewsProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<PostWithAuthor[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    if (!path) return;\r\n\r\n    try {\r\n      const response = await axios.get<{ posts: PostWithAuthor[] }>(\r\n        `/posts/get/stock/${path}`\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      setPosts([]);\r\n    }\r\n  }, [isMountedRef, path]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Dank Reads\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableBody>\r\n              {posts.map(post => (\r\n                <TableRow hover key={post._id}>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar\r\n                        alt=\"Author\"\r\n                        src={post.author.avatar}\r\n                        component={RouterLink}\r\n                        to={'/users/' + post.author.name}\r\n                      >\r\n                        {getInitials(post.author.name)}\r\n                      </Avatar>\r\n                      <Box ml={2}>\r\n                        <Link\r\n                          color=\"textPrimary\"\r\n                          component={RouterLink}\r\n                          to={'/posts/public/' + post.slug}\r\n                          variant=\"h6\"\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </Box>\r\n                      <Box flexGrow={1} />\r\n                      <Chip\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        label={\r\n                          chips.find(item => item.name === post.picker).text\r\n                        }\r\n                        className={classes.picker}\r\n                      />\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n          endIcon={<NavigateNextIcon />}\r\n        >\r\n          See all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDankNews.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default DankNews;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport NumberFormat from 'react-number-format';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Hidden,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Profile } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ProfileGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  collapse: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    display: '-webkit-box',\r\n    '-webkit-box-orient': 'vertical',\r\n    '-webkit-line-clamp': '3'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(6),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3)\r\n    }\r\n  },\r\n  link: {\r\n    color: '#fff'\r\n  },\r\n  more: {\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontWeight: 'bold'\r\n  }\r\n}));\r\n\r\nconst ProfileGlance: FC<ProfileGlanceProps> = ({\r\n  className,\r\n  path,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [profile, setProfile] = useState<Profile>(null);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<Profile>(`/stock/company/${path}`);\r\n\r\n      if (response.data) {\r\n        setProfile(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  const handleExpand = () => setExpanded(!expanded);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box className={classes.box}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h3\" color=\"textPrimary\">\r\n                Company Profile\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {profile && (\r\n            <>\r\n              <Box my={4}>\r\n                <Grid container justify=\"space-between\" spacing={3}>\r\n                  {' '}\r\n                  <Grid item lg={12} xs={12}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className={clsx(!expanded && classes.collapse)}\r\n                    >\r\n                      {profile.description}\r\n                    </Typography>\r\n                    <Link onClick={handleExpand} className={classes.more}>\r\n                      Read {expanded ? 'less' : 'more'}\r\n                    </Link>\r\n                  </Grid>\r\n                  <Hidden mdDown>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                    <Grid item lg={6} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.phone && (\r\n                                <NumberFormat\r\n                                  value={profile.phone}\r\n                                  displayType={'text'}\r\n                                  format=\"+1 (###) ###-####\"\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                  <Hidden lgUp>\r\n                    <Grid item lg={12} xs={12}>\r\n                      <Table>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Sector</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.sector}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Industry</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.industry}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Employees</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {numeral(profile.employees).format('0,0')}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Address</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              {profile.address} {profile.city} {profile.state}{' '}\r\n                              {profile.zip} {profile.country}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">Phone Number</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              +{profile.phone}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                            <TableCell align=\"center\">CEO</TableCell>\r\n                            <TableCell align=\"center\">{profile.CEO}</TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Grid>\r\n                  </Hidden>\r\n                </Grid>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                  <Link\r\n                    href={profile.website ?? '#'}\r\n                    target=\"blank\"\r\n                    className={classes.link}\r\n                  >\r\n                    {profile.website}\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default ProfileGlance;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from 'src/utils/axios';\r\nimport numeral from 'numeral';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { KeyStats } from 'src/types/stock';\r\n\r\ninterface KeyGlanceProps {\r\n  className?: string;\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst KeyGlance: FC<KeyGlanceProps> = ({ className, path, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState<KeyStats>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get<KeyStats>(\r\n        `/stock/advanced-stats/${path}`\r\n      );\r\n\r\n      if (response.data) {\r\n        setSource(response.data);\r\n      }\r\n    };\r\n    path && fetchData();\r\n  }, [path]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Key Stats\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          {source && (\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">10-Day Volume</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.avg10Volume).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week High</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52high).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">52 Week Low</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.week52low).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Market Cap</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.marketcap).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Shares Outstanding</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.sharesOutstanding).format('0,0')}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Beta</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {numeral(source.beta).format('0,0.00')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKeyGlance.propTypes = {\r\n  className: PropTypes.string,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default KeyGlance;\r\n","import React, { FC } from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport DankNews from './DankNews';\r\nimport ProfileGlance from './ProfileGlance';\r\nimport KeyGlance from './KeyGlance';\r\n\r\ninterface OpinionsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32\r\n  }\r\n}));\r\n\r\nconst Opinions: FC<OpinionsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.root}>\r\n      <Grid item lg={6} xs={12}>\r\n        <DankNews path={path} />\r\n      </Grid>\r\n      <Grid item lg={6} xs={12}>\r\n        <KeyGlance path={path} />\r\n      </Grid>\r\n      <Grid item lg={12} xs={12}>\r\n        <ProfileGlance path={path} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Opinions;\r\n","import React, { FC } from 'react';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\ninterface FinancialsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 32,\r\n    minHeight: '30vh'\r\n  }\r\n}));\r\n\r\nconst Financials: FC<FinancialsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" component=\"b\" color=\"textSecondary\">\r\n            Being worked on\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Financials;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport axios from 'src/utils/axios';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { StockNews } from 'src/types/stock';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewsProps {\r\n  path: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 32\r\n  },\r\n  image: {\r\n    height: '15vh',\r\n    marginRight: '2vw',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '20vh'\r\n    }\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'block',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst News: FC<NewsProps> = ({ path }) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState<StockNews[]>([]);\r\n  const [amount, setAmount] = useState<number>(10);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (value: string) => {\r\n      const response = await axios.get<{ data: StockNews[] }>(\r\n        `/stock/news/${value}?items=${amount}`\r\n      );\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        setResults(response.data.data);\r\n      }\r\n    };\r\n    path && fetchData(path);\r\n  }, [path, amount]);\r\n\r\n  const handleClick = (): void => setAmount(amount + 10);\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      {results.length > 0 && (\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Card>\r\n              <CardContent className={classes.content}>\r\n                <List>\r\n                  {results.map((result: StockNews, id) => (\r\n                    <ListItem\r\n                      key={id}\r\n                      disableGutters\r\n                      divider\r\n                      className={classes.item}\r\n                    >\r\n                      <img\r\n                        alt=\"Stock News\"\r\n                        src={result.image_url}\r\n                        className={classes.image}\r\n                      />\r\n                      <ListItemText\r\n                        primary={\r\n                          <Link\r\n                            color=\"textPrimary\"\r\n                            target=\"_blank\"\r\n                            href={result.news_url}\r\n                            variant=\"h5\"\r\n                          >\r\n                            {result.title}\r\n                          </Link>\r\n                        }\r\n                        primaryTypographyProps={{\r\n                          variant: 'body1',\r\n                          color: 'textPrimary'\r\n                        }}\r\n                        secondary={\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            color=\"textSecondary\"\r\n                            component={'span'}\r\n                          >\r\n                            {result.text}\r\n                            <br />\r\n                            {result.tickers.slice(0, 2).map((ticker, i) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                key={i}\r\n                                size=\"small\"\r\n                                label={ticker}\r\n                                className={classes.chip}\r\n                              />\r\n                            ))}\r\n                            {` | Date`}: {result.date}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClick}\r\n              disabled={amount > 40}\r\n              fullWidth\r\n            >\r\n              Read More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React, { FC, useState, ChangeEvent, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Opinions from './Opinions';\nimport Financials from './Financials';\nimport News from './News';\n\nconst tabs = [\n  { value: 'opinions', label: 'Opinions' },\n  { value: 'news', label: 'News' },\n  { value: 'financials', label: 'Financials/Earnings' },\n  { value: 'sec', label: 'SEC Filings' }\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n}));\n\nconst SymbolView: FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [path, setPath] = useState<string>(null);\n  const [currentTab, setCurrentTab] = useState<string>('opinions');\n\n  useEffect(() => {\n    const value = location.pathname.split('/')[2];\n    value && setPath(value);\n  }, [location]);\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title={path ? `${path} Stock Price` : ''}>\n      <Container maxWidth=\"lg\">\n        <Header path={path} />\n        <Box mt={6}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box pb={6}>\n          {currentTab === 'opinions' && <Opinions path={path} />}\n          {currentTab === 'news' && <News path={path} />}\n          {currentTab === 'financials' && <Financials path={path} />}\n          {currentTab === 'sec' && <Financials path={path} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SymbolView;\n"],"sourceRoot":""}