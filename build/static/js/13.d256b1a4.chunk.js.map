{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../node_modules/@material-ui/icons/DeleteOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","CardActions","_props$disableSpacing","disableSpacing","className","spacing","display","alignItems","padding","marginLeft","ListSubheader","_props$component","component","Component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","sticky","gutters","boxSizing","lineHeight","listStyle","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","colorInherit","paddingLeft","paddingRight","position","top","zIndex","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_props$getOptionSelec","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","_useControlled2","_slicedToArray","setValue","_useControlled3","state","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","event","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","current","focus","querySelector","setHighlightedIndex","_ref2","index","_ref2$reason","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","DisablePortal","CloseIcon","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","x","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","map","Chip","label","groupLabel","groupUl","children","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","margin","maxWidth","flexWrap","minWidth","paddingBottom","right","paddingTop","flexGrow","textOverflow","opacity","marginRight","transform","modal","body1","overflow","maxHeight","minHeight","justifyContent","cursor","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","hover","disabledOpacity","pointerEvents","background"],"mappings":"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","file":"static/js/13.d256b1a4.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\n\nexports.default = _default;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    return option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);"],"sourceRoot":""}