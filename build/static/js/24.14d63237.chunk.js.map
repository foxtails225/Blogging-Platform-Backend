{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","views/auth/PasswordReset/PasswordReset.tsx","views/auth/PasswordReset/index.tsx"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d","initialState","password","confirm","useStyles","makeStyles","PasswordRecovery","rest","history","useHistory","id","useParams","isMountedRef","useIsMountedRef","useState","state","setState","handleClick","event","currentTarget","prevState","enableReinitialize","initialValues","passwordConfirm","submit","validationSchema","Yup","shape","min","max","required","matches","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","recoveryToken","split","axios","post","current","success","push","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","error","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","type","variant","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Box","mt","FormHelperText","Button","color","disabled","size","theme","backgroundColor","palette","background","dark","display","flexDirection","minHeight","banner","paper","spacing","paddingTop","borderBottom","divider","bannerChip","marginRight","methodIcon","height","marginLeft","cardContainer","cardContent","PasswordResetView","method","useAuth","Page","title","Container","maxWidth","mb","justifyContent","to","Logo","Card","alignItems","Typography","gutterBottom","flexGrow","PasswordReset","my","Divider","Link","RouterLink"],"mappings":"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","file":"static/js/24.14d63237.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import React, { FC, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  InputAdornment,\n  IconButton,\n  TextField,\n  makeStyles,\n  FormHelperText\n} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface JWTLoginProps {\n  className?: string;\n}\n\ninterface State {\n  password: boolean;\n  confirm: boolean;\n}\n\nconst initialState: State = {\n  password: false,\n  confirm: false\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst PasswordRecovery: FC<JWTLoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const isMountedRef = useIsMountedRef();\n  const [state, setState] = useState<State>(initialState);\n\n  const handleClick = (event): void => {\n    const { name } = event.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: !state[name] }));\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        password: '',\n        passwordConfirm: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required')\n          .matches(\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d-_,./()@$!%*#?&]{8,}$/,\n            'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\n          ),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          const recoveryToken = id.split('=')[1];\n          await axios.post('/password-reset', {\n            recoveryToken,\n            password: values.password\n          });\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n            history.push('/login');\n          }\n        } catch (err) {\n          if (isMountedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"New Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type={state.password ? 'text' : 'password'}\n            value={values.password}\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton name=\"password\" onClick={handleClick} edge=\"end\">\n                    {!state.password ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n          <TextField\n            error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n            fullWidth\n            helperText={touched.passwordConfirm && errors.passwordConfirm}\n            label=\"Confirm Password\"\n            margin=\"normal\"\n            name=\"passwordConfirm\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type={state.confirm ? 'text' : 'password'}\n            value={values.passwordConfirm}\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton name=\"confirm\" onClick={handleClick} edge=\"end\">\n                    {!state.confirm ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>{errors.submit}</FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Reset Password\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nPasswordRecovery.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PasswordRecovery;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Link,\n  Card,\n  CardContent,\n  Divider,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport useAuth from 'src/hooks/useAuth';\nimport PasswordReset from './PasswordReset';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80,\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n}));\n\nconst PasswordResetView: FC = () => {\n  const classes = useStyles();\n  const { method } = useAuth();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Password Reset\"\n    >\n      <Container\n        className={classes.cardContainer}\n        maxWidth=\"sm\"\n      >\n        <Box\n          mb={8}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              mb={3}\n            >\n              <div>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"h2\"\n                >\n                  Password Reset\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                 Reset your account password using your recovery link\n                </Typography>\n              </div>\n            </Box>\n            <Box\n              flexGrow={1}\n              mt={3}\n            >\n              {method === 'JWT' && <PasswordReset /> }\n            </Box>\n            <Box my={3}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Have an account?\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default PasswordResetView;\n"],"sourceRoot":""}